// !$*UTF8*$!
{
	archiveVersion = 1;
	classes = {
	};
	objectVersion = 42;
	objects = {

/* Begin PBXAggregateTarget section */
		22A632022A632022A6320000 /* ALL_BUILD */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 22A735022A735022A7350000 /* Build configuration list for PBXAggregateTarget "ALL_BUILD" */;
			buildPhases = (
				22A653022A653022A6530000 /* CMake ReRun */,
				22A6D3022A6D3022A6D30000 /* CMake Rules */,
			);
			dependencies = (
				2AADCB02AADCB02AADCB0000 /* PBXTargetDependency */,
				2AAE4402AAE4402AAE440000 /* PBXTargetDependency */,
				2AAEBD02AAEBD02AAEBD0000 /* PBXTargetDependency */,
				2AAF3202AAF3202AAF320000 /* PBXTargetDependency */,
				2AAFAF02AAFAF02AAFAF0000 /* PBXTargetDependency */,
				2AB02B02AB02B02AB02B0000 /* PBXTargetDependency */,
				2AB0A502AB0A502AB0A50000 /* PBXTargetDependency */,
				2AB11F02AB11F02AB11F0000 /* PBXTargetDependency */,
				2AB19902AB19902AB1990000 /* PBXTargetDependency */,
				2AB21202AB21202AB2120000 /* PBXTargetDependency */,
				2AB28B02AB28B02AB28B0000 /* PBXTargetDependency */,
				2AB30302AB30302AB3030000 /* PBXTargetDependency */,
				2AB37B02AB37B02AB37B0000 /* PBXTargetDependency */,
				2AB3F302AB3F302AB3F30000 /* PBXTargetDependency */,
				2AB46B02AB46B02AB46B0000 /* PBXTargetDependency */,
				2AB4E302AB4E302AB4E30000 /* PBXTargetDependency */,
				2AB55B02AB55B02AB55B0000 /* PBXTargetDependency */,
				2AB5D802AB5D802AB5D80000 /* PBXTargetDependency */,
				2AB65802AB65802AB6580000 /* PBXTargetDependency */,
				2AB6D102AB6D102AB6D10000 /* PBXTargetDependency */,
				2AB74202AB74202AB7420000 /* PBXTargetDependency */,
				2AB7BA02AB7BA02AB7BA0000 /* PBXTargetDependency */,
				2AB83202AB83202AB8320000 /* PBXTargetDependency */,
				2AB8AA02AB8AA02AB8AA0000 /* PBXTargetDependency */,
				2AB92202AB92202AB9220000 /* PBXTargetDependency */,
				2AB99A02AB99A02AB99A0000 /* PBXTargetDependency */,
				2ABA1202ABA1202ABA120000 /* PBXTargetDependency */,
				2ABA8A02ABA8A02ABA8A0000 /* PBXTargetDependency */,
				2ABB0202ABB0202ABB020000 /* PBXTargetDependency */,
				2ABB7A02ABB7A02ABB7A0000 /* PBXTargetDependency */,
				2ABBF202ABBF202ABBF20000 /* PBXTargetDependency */,
				2ABC6A02ABC6A02ABC6A0000 /* PBXTargetDependency */,
				2ABCE202ABCE202ABCE20000 /* PBXTargetDependency */,
				2ABD6502ABD6502ABD650000 /* PBXTargetDependency */,
				2ABDDF02ABDDF02ABDDF0000 /* PBXTargetDependency */,
				2ABE6202ABE6202ABE620000 /* PBXTargetDependency */,
				2ABEDB02ABEDB02ABEDB0000 /* PBXTargetDependency */,
				2ABF4C02ABF4C02ABF4C0000 /* PBXTargetDependency */,
				2ABFCC02ABFCC02ABFCC0000 /* PBXTargetDependency */,
				2AC03D02AC03D02AC03D0000 /* PBXTargetDependency */,
				2AC0B502AC0B502AC0B50000 /* PBXTargetDependency */,
				2AC13502AC13502AC1350000 /* PBXTargetDependency */,
				2AC1AE02AC1AE02AC1AE0000 /* PBXTargetDependency */,
				2AC21F02AC21F02AC21F0000 /* PBXTargetDependency */,
				2AC29702AC29702AC2970000 /* PBXTargetDependency */,
				2AC30F02AC30F02AC30F0000 /* PBXTargetDependency */,
				2AC38702AC38702AC3870000 /* PBXTargetDependency */,
				2AC40702AC40702AC4070000 /* PBXTargetDependency */,
				2AC47E02AC47E02AC47E0000 /* PBXTargetDependency */,
				2AC4ED02AC4ED02AC4ED0000 /* PBXTargetDependency */,
				2AC56502AC56502AC5650000 /* PBXTargetDependency */,
				2AC5DD02AC5DD02AC5DD0000 /* PBXTargetDependency */,
				2AC65502AC65502AC6550000 /* PBXTargetDependency */,
				2AC6D502AC6D502AC6D50000 /* PBXTargetDependency */,
				2AC74E02AC74E02AC74E0000 /* PBXTargetDependency */,
				2AC7BF02AC7BF02AC7BF0000 /* PBXTargetDependency */,
				2AC83702AC83702AC8370000 /* PBXTargetDependency */,
				2AC8AF02AC8AF02AC8AF0000 /* PBXTargetDependency */,
				2AC92702AC92702AC9270000 /* PBXTargetDependency */,
				2AC99F02AC99F02AC99F0000 /* PBXTargetDependency */,
				2ACA1702ACA1702ACA170000 /* PBXTargetDependency */,
				2ACA9702ACA9702ACA970000 /* PBXTargetDependency */,
				2ACB1002ACB1002ACB100000 /* PBXTargetDependency */,
				2ACB8102ACB8102ACB810000 /* PBXTargetDependency */,
				2ACBF902ACBF902ACBF90000 /* PBXTargetDependency */,
				2ACC6102ACC6102ACC610000 /* PBXTargetDependency */,
				2ACCDB02ACCDB02ACCDB0000 /* PBXTargetDependency */,
				2ACD5502ACD5502ACD550000 /* PBXTargetDependency */,
				2ACDCF02ACDCF02ACDCF0000 /* PBXTargetDependency */,
				2ACE4902ACE4902ACE490000 /* PBXTargetDependency */,
				2ACEC302ACEC302ACEC30000 /* PBXTargetDependency */,
				2ACF3D02ACF3D02ACF3D0000 /* PBXTargetDependency */,
				2ACFBB02ACFBB02ACFBB0000 /* PBXTargetDependency */,
			);
			name = ALL_BUILD;
			productName = ALL_BUILD;
		};
		22AE57022AE57022AE570000 /* Continuous */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 22AF5A022AF5A022AF5A0000 /* Build configuration list for PBXAggregateTarget "Continuous" */;
			buildPhases = (
				22AE80022AE80022AE800000 /* CMake ReRun */,
				22AEFA022AEFA022AEFA0000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = Continuous;
			productName = Continuous;
		};
		22B602022B602022B6020000 /* Experimental */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 22B709022B709022B7090000 /* Build configuration list for PBXAggregateTarget "Experimental" */;
			buildPhases = (
				22B62B022B62B022B62B0000 /* CMake ReRun */,
				22B6A5022B6A5022B6A50000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = Experimental;
			productName = Experimental;
		};
		22BDBA022BDBA022BDBA0000 /* Nightly */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 22BED2022BED2022BED20000 /* Build configuration list for PBXAggregateTarget "Nightly" */;
			buildPhases = (
				22BDE3022BDE3022BDE30000 /* CMake ReRun */,
				22BE5D022BE5D022BE5D0000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = Nightly;
			productName = Nightly;
		};
		22C56F022C56F022C56F0000 /* NightlyMemoryCheck */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 22C672022C672022C6720000 /* Build configuration list for PBXAggregateTarget "NightlyMemoryCheck" */;
			buildPhases = (
				22C598022C598022C5980000 /* CMake ReRun */,
				22C612022C612022C6120000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = NightlyMemoryCheck;
			productName = NightlyMemoryCheck;
		};
		22CD19022CD19022CD190000 /* RUN_TESTS */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 22CE52022CE52022CE520000 /* Build configuration list for PBXAggregateTarget "RUN_TESTS" */;
			buildPhases = (
				22CD36022CD36022CD360000 /* CMake ReRun */,
				22CDB2022CDB2022CDB20000 /* CMake PostBuild Rules */,
			);
			dependencies = (
			);
			name = RUN_TESTS;
			productName = RUN_TESTS;
		};
		22D497022D497022D4970000 /* install */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 22D5BF022D5BF022D5BF0000 /* Build configuration list for PBXAggregateTarget "install" */;
			buildPhases = (
				22D4B4022D4B4022D4B40000 /* CMake ReRun */,
				22D530022D530022D5300000 /* CMake PostBuild Rules */,
			);
			dependencies = (
				2AD09402AD09402AD0940000 /* PBXTargetDependency */,
			);
			name = install;
			productName = install;
		};
		22DC02022DC02022DC020000 /* modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 22DCF2022DCF2022DCF20000 /* Build configuration list for PBXAggregateTarget "modularize" */;
			buildPhases = (
				22DC23022DC23022DC230000 /* CMake ReRun */,
				22DCA3022DCA3022DCA30000 /* CMake Rules */,
			);
			dependencies = (
				2AD11F02AD11F02AD11F0000 /* PBXTargetDependency */,
				2AD19102AD19102AD1910000 /* PBXTargetDependency */,
				2AD20A02AD20A02AD20A0000 /* PBXTargetDependency */,
				2AD28A02AD28A02AD28A0000 /* PBXTargetDependency */,
				2AD30102AD30102AD3010000 /* PBXTargetDependency */,
				2AD37402AD37402AD3740000 /* PBXTargetDependency */,
				2AD3F002AD3F002AD3F00000 /* PBXTargetDependency */,
				2AD46E02AD46E02AD46E0000 /* PBXTargetDependency */,
				2AD4DD02AD4DD02AD4DD0000 /* PBXTargetDependency */,
				2AD55402AD55402AD5540000 /* PBXTargetDependency */,
				2AD5D902AD5D902AD5D90000 /* PBXTargetDependency */,
				2AD65002AD65002AD6500000 /* PBXTargetDependency */,
				2AD6C702AD6C702AD6C70000 /* PBXTargetDependency */,
				2AD73602AD73602AD7360000 /* PBXTargetDependency */,
				2AD7B602AD7B602AD7B60000 /* PBXTargetDependency */,
				2AD82502AD82502AD8250000 /* PBXTargetDependency */,
				2AD8A502AD8A502AD8A50000 /* PBXTargetDependency */,
				2AD92102AD92102AD9210000 /* PBXTargetDependency */,
				2AD99802AD99802AD9980000 /* PBXTargetDependency */,
				2ADA0702ADA0702ADA070000 /* PBXTargetDependency */,
				2ADA8702ADA8702ADA870000 /* PBXTargetDependency */,
				2ADAFE02ADAFE02ADAFE0000 /* PBXTargetDependency */,
				2ADB6D02ADB6D02ADB6D0000 /* PBXTargetDependency */,
				2ADBED02ADBED02ADBED0000 /* PBXTargetDependency */,
				2ADC5D02ADC5D02ADC5D0000 /* PBXTargetDependency */,
				2ADCDE02ADCDE02ADCDE0000 /* PBXTargetDependency */,
				2ADD5702ADD5702ADD570000 /* PBXTargetDependency */,
				2ADDC902ADDC902ADDC90000 /* PBXTargetDependency */,
				2ADE4A02ADE4A02ADE4A0000 /* PBXTargetDependency */,
				2ADEC302ADEC302ADEC30000 /* PBXTargetDependency */,
				2ADF3502ADF3502ADF350000 /* PBXTargetDependency */,
				2ADFB602ADFB602ADFB60000 /* PBXTargetDependency */,
				2AE02F02AE02F02AE02F0000 /* PBXTargetDependency */,
				2AE0AD02AE0AD02AE0AD0000 /* PBXTargetDependency */,
				2AE12302AE12302AE1230000 /* PBXTargetDependency */,
				2AE19C02AE19C02AE19C0000 /* PBXTargetDependency */,
				2AE21D02AE21D02AE21D0000 /* PBXTargetDependency */,
				2AE29602AE29602AE2960000 /* PBXTargetDependency */,
				2AE30F02AE30F02AE30F0000 /* PBXTargetDependency */,
				2AE38102AE38102AE3810000 /* PBXTargetDependency */,
				2AE40202AE40202AE4020000 /* PBXTargetDependency */,
				2AE47B02AE47B02AE47B0000 /* PBXTargetDependency */,
				2AE4ED02AE4ED02AE4ED0000 /* PBXTargetDependency */,
				2AE56E02AE56E02AE56E0000 /* PBXTargetDependency */,
				2AE5E702AE5E702AE5E70000 /* PBXTargetDependency */,
				2AE66002AE66002AE6600000 /* PBXTargetDependency */,
				2AE6D902AE6D902AE6D90000 /* PBXTargetDependency */,
				2AE74B02AE74B02AE74B0000 /* PBXTargetDependency */,
				2AE7C502AE7C502AE7C50000 /* PBXTargetDependency */,
				2AE84602AE84602AE8460000 /* PBXTargetDependency */,
				2AE8BF02AE8BF02AE8BF0000 /* PBXTargetDependency */,
				2AE93102AE93102AE9310000 /* PBXTargetDependency */,
				2AE9AB02AE9AB02AE9AB0000 /* PBXTargetDependency */,
				2AEA2C02AEA2C02AEA2C0000 /* PBXTargetDependency */,
				2AEAA502AEAA502AEAA50000 /* PBXTargetDependency */,
				2AEB1702AEB1702AEB170000 /* PBXTargetDependency */,
				2AEB9802AEB9802AEB980000 /* PBXTargetDependency */,
				2AEC1102AEC1102AEC110000 /* PBXTargetDependency */,
				2AEC8A02AEC8A02AEC8A0000 /* PBXTargetDependency */,
				2AECFC02AECFC02AECFC0000 /* PBXTargetDependency */,
				2AED7602AED7602AED760000 /* PBXTargetDependency */,
				2AEDF002AEDF002AEDF00000 /* PBXTargetDependency */,
				2AEE6A02AEE6A02AEE6A0000 /* PBXTargetDependency */,
				2AEEEB02AEEEB02AEEEB0000 /* PBXTargetDependency */,
				2AEF6402AEF6402AEF640000 /* PBXTargetDependency */,
				2AEFC702AEFC702AEFC70000 /* PBXTargetDependency */,
				2AF04802AF04802AF0480000 /* PBXTargetDependency */,
				2AF0B902AF0B902AF0B90000 /* PBXTargetDependency */,
				2AF13302AF13302AF1330000 /* PBXTargetDependency */,
				2AF1B502AF1B502AF1B50000 /* PBXTargetDependency */,
				2AF22E02AF22E02AF22E0000 /* PBXTargetDependency */,
				2AF2A702AF2A702AF2A70000 /* PBXTargetDependency */,
				2AF31802AF31802AF3180000 /* PBXTargetDependency */,
				2AF39A02AF39A02AF39A0000 /* PBXTargetDependency */,
				2AF41302AF41302AF4130000 /* PBXTargetDependency */,
				2AF48C02AF48C02AF48C0000 /* PBXTargetDependency */,
			);
			name = modularize;
			productName = modularize;
		};
		22E3BF022E3BF022E3BF0000 /* package */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 22E4C3022E4C3022E4C30000 /* Build configuration list for PBXAggregateTarget "package" */;
			buildPhases = (
				22E3DC022E3DC022E3DC0000 /* CMake ReRun */,
				22E458022E458022E4580000 /* CMake PostBuild Rules */,
			);
			dependencies = (
				2AD09402AD09402AD0940000 /* PBXTargetDependency */,
			);
			name = package;
			productName = package;
		};
		22EB34022EB34022EB340000 /* preprocessor-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 22EC46022EC46022EC460000 /* Build configuration list for PBXAggregateTarget "preprocessor-modularize" */;
			buildPhases = (
				22EB5F022EB5F022EB5F0000 /* CMake ReRun */,
				22EBDB022EBDB022EBDB0000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "preprocessor-modularize";
			productName = "preprocessor-modularize";
		};
		22F37A022F37A022F37A0000 /* concept_check-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 22F48C022F48C022F48C0000 /* Build configuration list for PBXAggregateTarget "concept_check-modularize" */;
			buildPhases = (
				22F3A7022F3A7022F3A70000 /* CMake ReRun */,
				22F423022F423022F4230000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "concept_check-modularize";
			productName = "concept_check-modularize";
		};
		22FBDE022FBDE022FBDE0000 /* property_map-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 2300E402300E402300E40000 /* Build configuration list for PBXAggregateTarget "property_map-modularize" */;
			buildPhases = (
				230000023000002300000000 /* CMake ReRun */,
				23007C023007C023007C0000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "property_map-modularize";
			productName = "property_map-modularize";
		};
		230857023085702308570000 /* config-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 230967023096702309670000 /* Build configuration list for PBXAggregateTarget "config-modularize" */;
			buildPhases = (
				230882023088202308820000 /* CMake ReRun */,
				2308FE02308FE02308FE0000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "config-modularize";
			productName = "config-modularize";
		};
		23109C023109C023109C0000 /* mpl-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 2311AB02311AB02311AB0000 /* Build configuration list for PBXAggregateTarget "mpl-modularize" */;
			buildPhases = (
				2310C502310C502310C50000 /* CMake ReRun */,
				23113D023113D023113D0000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "mpl-modularize";
			productName = "mpl-modularize";
		};
		2318A802318A802318A80000 /* type_traits-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 2319BA02319BA02319BA0000 /* Build configuration list for PBXAggregateTarget "type_traits-modularize" */;
			buildPhases = (
				2318D302318D302318D30000 /* CMake ReRun */,
				23194F023194F023194F0000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "type_traits-modularize";
			productName = "type_traits-modularize";
		};
		2320BC02320BC02320BC0000 /* function-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 2321CC02321CC02321CC0000 /* Build configuration list for PBXAggregateTarget "function-modularize" */;
			buildPhases = (
				2320E702320E702320E70000 /* CMake ReRun */,
				232163023216302321630000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "function-modularize";
			productName = "function-modularize";
		};
		2328CB02328CB02328CB0000 /* iterator-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 2329DB02329DB02329DB0000 /* Build configuration list for PBXAggregateTarget "iterator-modularize" */;
			buildPhases = (
				2328F602328F602328F60000 /* CMake ReRun */,
				232972023297202329720000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "iterator-modularize";
			productName = "iterator-modularize";
		};
		2330DF02330DF02330DF0000 /* smart_ptr-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 2330FC02330FC02330FC0000 /* Build configuration list for PBXAggregateTarget "smart_ptr-modularize" */;
			buildPhases = (
				23311A023311A023311A0000 /* CMake ReRun */,
				233196023319602331960000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "smart_ptr-modularize";
			productName = "smart_ptr-modularize";
		};
		2338EB02338EB02338EB0000 /* exception-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 2339FB02339FB02339FB0000 /* Build configuration list for PBXAggregateTarget "exception-modularize" */;
			buildPhases = (
				233918023391802339180000 /* CMake ReRun */,
				233994023399402339940000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "exception-modularize";
			productName = "exception-modularize";
		};
		2340FD02340FD02340FD0000 /* utility-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 23411A023411A023411A0000 /* Build configuration list for PBXAggregateTarget "utility-modularize" */;
			buildPhases = (
				23413F023413F023413F0000 /* CMake ReRun */,
				2341BB02341BB02341BB0000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "utility-modularize";
			productName = "utility-modularize";
		};
		234902023490202349020000 /* integer-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 234A120234A120234A120000 /* Build configuration list for PBXAggregateTarget "integer-modularize" */;
			buildPhases = (
				234933023493302349330000 /* CMake ReRun */,
				2349AF02349AF02349AF0000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "integer-modularize";
			productName = "integer-modularize";
		};
		23510D023510D023510D0000 /* detail-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 23521C023521C023521C0000 /* Build configuration list for PBXAggregateTarget "detail-modularize" */;
			buildPhases = (
				235136023513602351360000 /* CMake ReRun */,
				2351AE02351AE02351AE0000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "detail-modularize";
			productName = "detail-modularize";
		};
		235913023591302359130000 /* static_assert-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 235A230235A230235A230000 /* Build configuration list for PBXAggregateTarget "static_assert-modularize" */;
			buildPhases = (
				23593C023593C023593C0000 /* CMake ReRun */,
				2359B402359B402359B40000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "static_assert-modularize";
			productName = "static_assert-modularize";
		};
		236127023612702361270000 /* tuple-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 236236023623602362360000 /* Build configuration list for PBXAggregateTarget "tuple-modularize" */;
			buildPhases = (
				236150023615002361500000 /* CMake ReRun */,
				2361C802361C802361C80000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "tuple-modularize";
			productName = "tuple-modularize";
		};
		236931023693102369310000 /* function_types-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 236A410236A410236A410000 /* Build configuration list for PBXAggregateTarget "function_types-modularize" */;
			buildPhases = (
				23695A023695A023695A0000 /* CMake ReRun */,
				2369D202369D202369D20000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "function_types-modularize";
			productName = "function_types-modularize";
		};
		237149023714902371490000 /* fusion-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 237258023725802372580000 /* Build configuration list for PBXAggregateTarget "fusion-modularize" */;
			buildPhases = (
				237172023717202371720000 /* CMake ReRun */,
				2371EA02371EA02371EA0000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "fusion-modularize";
			productName = "fusion-modularize";
		};
		23794A023794A023794A0000 /* typeof-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 237A590237A590237A590000 /* Build configuration list for PBXAggregateTarget "typeof-modularize" */;
			buildPhases = (
				237973023797302379730000 /* CMake ReRun */,
				2379EB02379EB02379EB0000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "typeof-modularize";
			productName = "typeof-modularize";
		};
		238154023815402381540000 /* proto-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 238263023826302382630000 /* Build configuration list for PBXAggregateTarget "proto-modularize" */;
			buildPhases = (
				23817D023817D023817D0000 /* CMake ReRun */,
				2381F502381F502381F50000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "proto-modularize";
			productName = "proto-modularize";
		};
		238955023895502389550000 /* intrusive-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 238A650238A650238A650000 /* Build configuration list for PBXAggregateTarget "intrusive-modularize" */;
			buildPhases = (
				238980023898002389800000 /* CMake ReRun */,
				2389FC02389FC02389FC0000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "intrusive-modularize";
			productName = "intrusive-modularize";
		};
		239169023916902391690000 /* logic-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 239278023927802392780000 /* Build configuration list for PBXAggregateTarget "logic-modularize" */;
			buildPhases = (
				239192023919202391920000 /* CMake ReRun */,
				23920A023920A023920A0000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "logic-modularize";
			productName = "logic-modularize";
		};
		23996F023996F023996F0000 /* numeric-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 239A7E0239A7E0239A7E0000 /* Build configuration list for PBXAggregateTarget "numeric-modularize" */;
			buildPhases = (
				239998023999802399980000 /* CMake ReRun */,
				239A100239A100239A100000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "numeric-modularize";
			productName = "numeric-modularize";
		};
		23A171023A171023A1710000 /* xpressive-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 23A280023A280023A2800000 /* Build configuration list for PBXAggregateTarget "xpressive-modularize" */;
			buildPhases = (
				23A19A023A19A023A19A0000 /* CMake ReRun */,
				23A212023A212023A2120000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "xpressive-modularize";
			productName = "xpressive-modularize";
		};
		23A97A023A97A023A97A0000 /* optional-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 23AA8A023AA8A023AA8A0000 /* Build configuration list for PBXAggregateTarget "optional-modularize" */;
			buildPhases = (
				23A9A5023A9A5023A9A50000 /* CMake ReRun */,
				23AA21023AA21023AA210000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "optional-modularize";
			productName = "optional-modularize";
		};
		23B196023B196023B1960000 /* tokenizer-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 23B2A5023B2A5023B2A50000 /* Build configuration list for PBXAggregateTarget "tokenizer-modularize" */;
			buildPhases = (
				23B1BF023B1BF023B1BF0000 /* CMake ReRun */,
				23B237023B237023B2370000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "tokenizer-modularize";
			productName = "tokenizer-modularize";
		};
		23B9A8023B9A8023B9A80000 /* io-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 23BAB8023BAB8023BAB80000 /* Build configuration list for PBXAggregateTarget "io-modularize" */;
			buildPhases = (
				23B9D3023B9D3023B9D30000 /* CMake ReRun */,
				23BA4F023BA4F023BA4F0000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "io-modularize";
			productName = "io-modularize";
		};
		23C1BD023C1BD023C1BD0000 /* bind-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 23C304023C304023C3040000 /* Build configuration list for PBXAggregateTarget "bind-modularize" */;
			buildPhases = (
				23C1E8023C1E8023C1E80000 /* CMake ReRun */,
				23C264023C264023C2640000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "bind-modularize";
			productName = "bind-modularize";
		};
		23C9C5023C9C5023C9C50000 /* date_time-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 23CAD5023CAD5023CAD50000 /* Build configuration list for PBXAggregateTarget "date_time-modularize" */;
			buildPhases = (
				23C9F0023C9F0023C9F00000 /* CMake ReRun */,
				23CA6C023CA6C023CA6C0000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "date_time-modularize";
			productName = "date_time-modularize";
		};
		23D1CB023D1CB023D1CB0000 /* boost_date_time */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 23D2C1023D2C1023D2C10000 /* Build configuration list for PBXAggregateTarget "boost_date_time" */;
			buildPhases = (
				23D1EC023D1EC023D1EC0000 /* CMake ReRun */,
				23D26C023D26C023D26C0000 /* CMake Rules */,
			);
			dependencies = (
				2AADCB02AADCB02AADCB0000 /* PBXTargetDependency */,
				2AAE4402AAE4402AAE440000 /* PBXTargetDependency */,
				2AAEBD02AAEBD02AAEBD0000 /* PBXTargetDependency */,
				2AAF3202AAF3202AAF320000 /* PBXTargetDependency */,
			);
			name = boost_date_time;
			productName = boost_date_time;
		};
		241020024102002410200000 /* thread-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 241130024113002411300000 /* Build configuration list for PBXAggregateTarget "thread-modularize" */;
			buildPhases = (
				24104B024104B024104B0000 /* CMake ReRun */,
				2410C702410C702410C70000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "thread-modularize";
			productName = "thread-modularize";
		};
		241821024182102418210000 /* boost_thread */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 24191D024191D024191D0000 /* Build configuration list for PBXAggregateTarget "boost_thread" */;
			buildPhases = (
				241842024184202418420000 /* CMake ReRun */,
				2418C202418C202418C20000 /* CMake Rules */,
			);
			dependencies = (
				2AAFAF02AAFAF02AAFAF0000 /* PBXTargetDependency */,
				2AB02B02AB02B02AB02B0000 /* PBXTargetDependency */,
				2AB0A502AB0A502AB0A50000 /* PBXTargetDependency */,
				2AB11F02AB11F02AB11F0000 /* PBXTargetDependency */,
			);
			name = boost_thread;
			productName = boost_thread;
		};
		245237024523702452370000 /* regex-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 24534A024534A024534A0000 /* Build configuration list for PBXAggregateTarget "regex-modularize" */;
			buildPhases = (
				24526B024526B024526B0000 /* CMake ReRun */,
				2452E702452E702452E70000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "regex-modularize";
			productName = "regex-modularize";
		};
		245A360245A360245A360000 /* boost_regex */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 245B370245B370245B370000 /* Build configuration list for PBXAggregateTarget "boost_regex" */;
			buildPhases = (
				245A570245A570245A570000 /* CMake ReRun */,
				245AD70245AD70245AD70000 /* CMake Rules */,
			);
			dependencies = (
				2AB19902AB19902AB1990000 /* PBXTargetDependency */,
				2AB21202AB21202AB2120000 /* PBXTargetDependency */,
				2AB28B02AB28B02AB28B0000 /* PBXTargetDependency */,
				2AB30302AB30302AB3030000 /* PBXTargetDependency */,
			);
			name = boost_regex;
			productName = boost_regex;
		};
		24B47E024B47E024B47E0000 /* algorithm-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 24B58D024B58D024B58D0000 /* Build configuration list for PBXAggregateTarget "algorithm-modularize" */;
			buildPhases = (
				24B4A7024B4A7024B4A70000 /* CMake ReRun */,
				24B51F024B51F024B51F0000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "algorithm-modularize";
			productName = "algorithm-modularize";
		};
		24BC83024BC83024BC830000 /* range-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 24BD93024BD93024BD930000 /* Build configuration list for PBXAggregateTarget "range-modularize" */;
			buildPhases = (
				24BCAE024BCAE024BCAE0000 /* CMake ReRun */,
				24BD2A024BD2A024BD2A0000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "range-modularize";
			productName = "range-modularize";
		};
		24C485024C485024C4850000 /* foreach-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 24C594024C594024C5940000 /* Build configuration list for PBXAggregateTarget "foreach-modularize" */;
			buildPhases = (
				24C4AE024C4AE024C4AE0000 /* CMake ReRun */,
				24C526024C526024C5260000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "foreach-modularize";
			productName = "foreach-modularize";
		};
		24CC87024CC87024CC870000 /* array-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 24CD96024CD96024CD960000 /* Build configuration list for PBXAggregateTarget "array-modularize" */;
			buildPhases = (
				24CCB0024CCB0024CCB00000 /* CMake ReRun */,
				24CD28024CD28024CD280000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "array-modularize";
			productName = "array-modularize";
		};
		24D48F024D48F024D48F0000 /* functional-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 24D59F024D59F024D59F0000 /* Build configuration list for PBXAggregateTarget "functional-modularize" */;
			buildPhases = (
				24D4BA024D4BA024D4BA0000 /* CMake ReRun */,
				24D536024D536024D5360000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "functional-modularize";
			productName = "functional-modularize";
		};
		24DCA4024DCA4024DCA40000 /* unordered-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 24DDB4024DDB4024DDB40000 /* Build configuration list for PBXAggregateTarget "unordered-modularize" */;
			buildPhases = (
				24DCD1024DCD1024DCD10000 /* CMake ReRun */,
				24DD4D024DD4D024DD4D0000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "unordered-modularize";
			productName = "unordered-modularize";
		};
		24E4B2024E4B2024E4B20000 /* pool-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 24E5F3024E5F3024E5F30000 /* Build configuration list for PBXAggregateTarget "pool-modularize" */;
			buildPhases = (
				24E4DB024E4DB024E4DB0000 /* CMake ReRun */,
				24E553024E553024E5530000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "pool-modularize";
			productName = "pool-modularize";
		};
		24ECB9024ECB9024ECB90000 /* spirit-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 24EDC9024EDC9024EDC90000 /* Build configuration list for PBXAggregateTarget "spirit-modularize" */;
			buildPhases = (
				24ECE4024ECE4024ECE40000 /* CMake ReRun */,
				24ED60024ED60024ED600000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "spirit-modularize";
			productName = "spirit-modularize";
		};
		24F4BA024F4BA024F4BA0000 /* variant-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 24F5CA024F5CA024F5CA0000 /* Build configuration list for PBXAggregateTarget "variant-modularize" */;
			buildPhases = (
				24F4E5024F4E5024F4E50000 /* CMake ReRun */,
				24F561024F561024F5610000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "variant-modularize";
			productName = "variant-modularize";
		};
		2500C602500C602500C60000 /* serialization-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 2501DA02501DA02501DA0000 /* Build configuration list for PBXAggregateTarget "serialization-modularize" */;
			buildPhases = (
				2500F102500F102500F10000 /* CMake ReRun */,
				25016D025016D025016D0000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "serialization-modularize";
			productName = "serialization-modularize";
		};
		2508D402508D402508D40000 /* boost_serialization */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 2509E502509E502509E50000 /* Build configuration list for PBXAggregateTarget "boost_serialization" */;
			buildPhases = (
				2508F502508F502508F50000 /* CMake ReRun */,
				250975025097502509750000 /* CMake Rules */,
			);
			dependencies = (
				2AB37B02AB37B02AB37B0000 /* PBXTargetDependency */,
				2AB3F302AB3F302AB3F30000 /* PBXTargetDependency */,
				2AB46B02AB46B02AB46B0000 /* PBXTargetDependency */,
				2AB4E302AB4E302AB4E30000 /* PBXTargetDependency */,
			);
			name = boost_serialization;
			productName = boost_serialization;
		};
		257639025763902576390000 /* boost_wserialization */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 25773C025773C025773C0000 /* Build configuration list for PBXAggregateTarget "boost_wserialization" */;
			buildPhases = (
				25765A025765A025765A0000 /* CMake ReRun */,
				2576DA02576DA02576DA0000 /* CMake Rules */,
			);
			dependencies = (
				2AB55B02AB55B02AB55B0000 /* PBXTargetDependency */,
				2AB5D802AB5D802AB5D80000 /* PBXTargetDependency */,
				2AB65802AB65802AB6580000 /* PBXTargetDependency */,
				2AB6D102AB6D102AB6D10000 /* PBXTargetDependency */,
			);
			name = boost_wserialization;
			productName = boost_wserialization;
		};
		25BE68025BE68025BE680000 /* format-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 25BF78025BF78025BF780000 /* Build configuration list for PBXAggregateTarget "format-modularize" */;
			buildPhases = (
				25BE93025BE93025BE930000 /* CMake ReRun */,
				25BF0F025BF0F025BF0F0000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "format-modularize";
			productName = "format-modularize";
		};
		25C66D025C66D025C66D0000 /* math-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 25C690025C690025C6900000 /* Build configuration list for PBXAggregateTarget "math-modularize" */;
			buildPhases = (
				25C698025C698025C6980000 /* CMake ReRun */,
				25C714025C714025C7140000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "math-modularize";
			productName = "math-modularize";
		};
		25CE6D025CE6D025CE6D0000 /* multi_index-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 25CF81025CF81025CF810000 /* Build configuration list for PBXAggregateTarget "multi_index-modularize" */;
			buildPhases = (
				25CE9A025CE9A025CE9A0000 /* CMake ReRun */,
				25CF16025CF16025CF160000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "multi_index-modularize";
			productName = "multi_index-modularize";
		};
		25D673025D673025D6730000 /* any-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 25D782025D782025D7820000 /* Build configuration list for PBXAggregateTarget "any-modularize" */;
			buildPhases = (
				25D69C025D69C025D69C0000 /* CMake ReRun */,
				25D714025D714025D7140000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "any-modularize";
			productName = "any-modularize";
		};
		25DE7F025DE7F025DE7F0000 /* random-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 25DF8F025DF8F025DF8F0000 /* Build configuration list for PBXAggregateTarget "random-modularize" */;
			buildPhases = (
				25DEAA025DEAA025DEAA0000 /* CMake ReRun */,
				25DF26025DF26025DF260000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "random-modularize";
			productName = "random-modularize";
		};
		25E68D025E68D025E68D0000 /* graph-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 25E79C025E79C025E79C0000 /* Build configuration list for PBXAggregateTarget "graph-modularize" */;
			buildPhases = (
				25E6B6025E6B6025E6B60000 /* CMake ReRun */,
				25E72E025E72E025E72E0000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "graph-modularize";
			productName = "graph-modularize";
		};
		25EE93025EE93025EE930000 /* boost_graph */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 25EF94025EF94025EF940000 /* Build configuration list for PBXAggregateTarget "boost_graph" */;
			buildPhases = (
				25EEB4025EEB4025EEB40000 /* CMake ReRun */,
				25EF34025EF34025EF340000 /* CMake Rules */,
			);
			dependencies = (
				2AB74202AB74202AB7420000 /* PBXTargetDependency */,
				2AB7BA02AB7BA02AB7BA0000 /* PBXTargetDependency */,
				2AB83202AB83202AB8320000 /* PBXTargetDependency */,
				2AB8AA02AB8AA02AB8AA0000 /* PBXTargetDependency */,
			);
			name = boost_graph;
			productName = boost_graph;
		};
		262829026282902628290000 /* Python-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 262939026293902629390000 /* Build configuration list for PBXAggregateTarget "Python-modularize" */;
			buildPhases = (
				262854026285402628540000 /* CMake ReRun */,
				2628D002628D002628D00000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "Python-modularize";
			productName = "Python-modularize";
		};
		263032026303202630320000 /* boost_python */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 26312E026312E026312E0000 /* Build configuration list for PBXAggregateTarget "boost_python" */;
			buildPhases = (
				263053026305302630530000 /* CMake ReRun */,
				2630D302630D302630D30000 /* CMake Rules */,
			);
			dependencies = (
				2AB92202AB92202AB9220000 /* PBXTargetDependency */,
				2AB99A02AB99A02AB99A0000 /* PBXTargetDependency */,
				2ABA1202ABA1202ABA120000 /* PBXTargetDependency */,
				2ABA8A02ABA8A02ABA8A0000 /* PBXTargetDependency */,
			);
			name = boost_python;
			productName = boost_python;
		};
		26A399026A399026A3990000 /* parameter-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 26A536026A536026A5360000 /* Build configuration list for PBXAggregateTarget "parameter-modularize" */;
			buildPhases = (
				26A451026A451026A4510000 /* CMake ReRun */,
				26A4CD026A4CD026A4CD0000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "parameter-modularize";
			productName = "parameter-modularize";
		};
		26AC2F026AC2F026AC2F0000 /* accumulators-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 26AD3F026AD3F026AD3F0000 /* Build configuration list for PBXAggregateTarget "accumulators-modularize" */;
			buildPhases = (
				26AC58026AC58026AC580000 /* CMake ReRun */,
				26ACD0026ACD0026ACD00000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "accumulators-modularize";
			productName = "accumulators-modularize";
		};
		26BF35026BF35026BF350000 /* system-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 26C045026C045026C0450000 /* Build configuration list for PBXAggregateTarget "system-modularize" */;
			buildPhases = (
				26BF5F026BF5F026BF5F0000 /* CMake ReRun */,
				26BFD7026BFD7026BFD70000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "system-modularize";
			productName = "system-modularize";
		};
		26C740026C740026C7400000 /* boost_system */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 26C83C026C83C026C83C0000 /* Build configuration list for PBXAggregateTarget "boost_system" */;
			buildPhases = (
				26C761026C761026C7610000 /* CMake ReRun */,
				26C7E1026C7E1026C7E10000 /* CMake Rules */,
			);
			dependencies = (
				2ABB7A02ABB7A02ABB7A0000 /* PBXTargetDependency */,
				2ABBF202ABBF202ABBF20000 /* PBXTargetDependency */,
				2ABC6A02ABC6A02ABC6A0000 /* PBXTargetDependency */,
				2ABCE202ABCE202ABCE20000 /* PBXTargetDependency */,
			);
			name = boost_system;
			productName = boost_system;
		};
		2700CC02700CC02700CC0000 /* asio-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 270213027021302702130000 /* Build configuration list for PBXAggregateTarget "asio-modularize" */;
			buildPhases = (
				2700F702700F702700F70000 /* CMake ReRun */,
				270173027017302701730000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "asio-modularize";
			productName = "asio-modularize";
		};
		2708C902708C902708C90000 /* circular_buffer-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 2709DB02709DB02709DB0000 /* Build configuration list for PBXAggregateTarget "circular_buffer-modularize" */;
			buildPhases = (
				2708F602708F602708F60000 /* CMake ReRun */,
				270972027097202709720000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "circular_buffer-modularize";
			productName = "circular_buffer-modularize";
		};
		2710D202710D202710D20000 /* ptr_container-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 2711E202711E202711E20000 /* Build configuration list for PBXAggregateTarget "ptr_container-modularize" */;
			buildPhases = (
				2710FB02710FB02710FB0000 /* CMake ReRun */,
				271173027117302711730000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "ptr_container-modularize";
			productName = "ptr_container-modularize";
		};
		2718DD02718DD02718DD0000 /* assign-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 2719ED02719ED02719ED0000 /* Build configuration list for PBXAggregateTarget "assign-modularize" */;
			buildPhases = (
				271908027190802719080000 /* CMake ReRun */,
				271984027198402719840000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "assign-modularize";
			productName = "assign-modularize";
		};
		2720E202720E202720E20000 /* bimap-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 2721F202721F202721F20000 /* Build configuration list for PBXAggregateTarget "bimap-modularize" */;
			buildPhases = (
				27210D027210D027210D0000 /* CMake ReRun */,
				272189027218902721890000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "bimap-modularize";
			productName = "bimap-modularize";
		};
		2728EB02728EB02728EB0000 /* compatibility-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 2729FB02729FB02729FB0000 /* Build configuration list for PBXAggregateTarget "compatibility-modularize" */;
			buildPhases = (
				272914027291402729140000 /* CMake ReRun */,
				27298C027298C027298C0000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "compatibility-modularize";
			productName = "compatibility-modularize";
		};
		273130027313002731300000 /* crc-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 27323F027323F027323F0000 /* Build configuration list for PBXAggregateTarget "crc-modularize" */;
			buildPhases = (
				273159027315902731590000 /* CMake ReRun */,
				2731D102731D102731D10000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "crc-modularize";
			productName = "crc-modularize";
		};
		273939027393902739390000 /* timer-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 273A480273A480273A480000 /* Build configuration list for PBXAggregateTarget "timer-modularize" */;
			buildPhases = (
				273962027396202739620000 /* CMake ReRun */,
				2739DA02739DA02739DA0000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "timer-modularize";
			productName = "timer-modularize";
		};
		27418A027418A027418A0000 /* test-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 2742CB02742CB02742CB0000 /* Build configuration list for PBXAggregateTarget "test-modularize" */;
			buildPhases = (
				2741B302741B302741B30000 /* CMake ReRun */,
				27422B027422B027422B0000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "test-modularize";
			productName = "test-modularize";
		};
		27498C027498C027498C0000 /* boost_prg_exec_monitor */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 274A8D0274A8D0274A8D0000 /* Build configuration list for PBXAggregateTarget "boost_prg_exec_monitor" */;
			buildPhases = (
				2749AD02749AD02749AD0000 /* CMake ReRun */,
				274A2D0274A2D0274A2D0000 /* CMake Rules */,
			);
			dependencies = (
				2ABD6502ABD6502ABD650000 /* PBXTargetDependency */,
				2ABDDF02ABDDF02ABDDF0000 /* PBXTargetDependency */,
				2ABE6202ABE6202ABE620000 /* PBXTargetDependency */,
				2ABEDB02ABEDB02ABEDB0000 /* PBXTargetDependency */,
			);
			name = boost_prg_exec_monitor;
			productName = boost_prg_exec_monitor;
		};
		2783D702783D702783D70000 /* boost_test_exec_monitor */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 27851F027851F027851F0000 /* Build configuration list for PBXAggregateTarget "boost_test_exec_monitor" */;
			buildPhases = (
				2783F802783F802783F80000 /* CMake ReRun */,
				278478027847802784780000 /* CMake Rules */,
			);
			dependencies = (
				2ABF4C02ABF4C02ABF4C0000 /* PBXTargetDependency */,
				2ABFCC02ABFCC02ABFCC0000 /* PBXTargetDependency */,
			);
			name = boost_test_exec_monitor;
			productName = boost_test_exec_monitor;
		};
		27B532027B532027B5320000 /* boost_unit_test_framework */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 27B67A027B67A027B67A0000 /* Build configuration list for PBXAggregateTarget "boost_unit_test_framework" */;
			buildPhases = (
				27B553027B553027B5530000 /* CMake ReRun */,
				27B5D3027B5D3027B5D30000 /* CMake Rules */,
			);
			dependencies = (
				2AC03D02AC03D02AC03D0000 /* PBXTargetDependency */,
				2AC0B502AC0B502AC0B50000 /* PBXTargetDependency */,
				2AC13502AC13502AC1350000 /* PBXTargetDependency */,
				2AC1AE02AC1AE02AC1AE0000 /* PBXTargetDependency */,
			);
			name = boost_unit_test_framework;
			productName = boost_unit_test_framework;
		};
		2814D802814D802814D80000 /* dynamic_bitset-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 2815EA02815EA02815EA0000 /* Build configuration list for PBXAggregateTarget "dynamic_bitset-modularize" */;
			buildPhases = (
				281505028150502815050000 /* CMake ReRun */,
				281581028158102815810000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "dynamic_bitset-modularize";
			productName = "dynamic_bitset-modularize";
		};
		281CEE0281CEE0281CEE0000 /* filesystem-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 281DFE0281DFE0281DFE0000 /* Build configuration list for PBXAggregateTarget "filesystem-modularize" */;
			buildPhases = (
				281D190281D190281D190000 /* CMake ReRun */,
				281D950281D950281D950000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "filesystem-modularize";
			productName = "filesystem-modularize";
		};
		2824FD02824FD02824FD0000 /* boost_filesystem */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 2825F902825F902825F90000 /* Build configuration list for PBXAggregateTarget "boost_filesystem" */;
			buildPhases = (
				28251E028251E028251E0000 /* CMake ReRun */,
				28259E028259E028259E0000 /* CMake Rules */,
			);
			dependencies = (
				2AC21F02AC21F02AC21F0000 /* PBXTargetDependency */,
				2AC29702AC29702AC2970000 /* PBXTargetDependency */,
				2AC30F02AC30F02AC30F0000 /* PBXTargetDependency */,
				2AC38702AC38702AC3870000 /* PBXTargetDependency */,
			);
			name = boost_filesystem;
			productName = boost_filesystem;
		};
		286185028618502861850000 /* interprocess-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 286295028629502862950000 /* Build configuration list for PBXAggregateTarget "interprocess-modularize" */;
			buildPhases = (
				2861AE02861AE02861AE0000 /* CMake ReRun */,
				286226028622602862260000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "interprocess-modularize";
			productName = "interprocess-modularize";
		};
		286991028699102869910000 /* flyweight-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 286AA10286AA10286AA10000 /* Build configuration list for PBXAggregateTarget "flyweight-modularize" */;
			buildPhases = (
				2869BC02869BC02869BC0000 /* CMake ReRun */,
				286A380286A380286A380000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "flyweight-modularize";
			productName = "flyweight-modularize";
		};
		287196028719602871960000 /* gil-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 2872A502872A502872A50000 /* Build configuration list for PBXAggregateTarget "gil-modularize" */;
			buildPhases = (
				2871BF02871BF02871BF0000 /* CMake ReRun */,
				287237028723702872370000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "gil-modularize";
			productName = "gil-modularize";
		};
		2879AC02879AC02879AC0000 /* mpi-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 287ABC0287ABC0287ABC0000 /* Build configuration list for PBXAggregateTarget "mpi-modularize" */;
			buildPhases = (
				2879D702879D702879D70000 /* CMake ReRun */,
				287A530287A530287A530000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "mpi-modularize";
			productName = "mpi-modularize";
		};
		2881BA02881BA02881BA0000 /* boost_mpi */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 2882FD02882FD02882FD0000 /* Build configuration list for PBXAggregateTarget "boost_mpi" */;
			buildPhases = (
				2881DB02881DB02881DB0000 /* CMake ReRun */,
				28825B028825B028825B0000 /* CMake Rules */,
			);
			dependencies = (
				2AC40702AC40702AC4070000 /* PBXTargetDependency */,
				2AC47E02AC47E02AC47E0000 /* PBXTargetDependency */,
				2AC4ED02AC4ED02AC4ED0000 /* PBXTargetDependency */,
				2AC56502AC56502AC5650000 /* PBXTargetDependency */,
			);
			name = boost_mpi;
			productName = boost_mpi;
		};
		28DED4028DED4028DED40000 /* boost_graph_parallel */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 28E03C028E03C028E03C0000 /* Build configuration list for PBXAggregateTarget "boost_graph_parallel" */;
			buildPhases = (
				28DEF4028DEF4028DEF40000 /* CMake ReRun */,
				28DF74028DF74028DF740000 /* CMake Rules */,
			);
			dependencies = (
				2AC5DD02AC5DD02AC5DD0000 /* PBXTargetDependency */,
				2AC65502AC65502AC6550000 /* PBXTargetDependency */,
				2AC6D502AC6D502AC6D50000 /* PBXTargetDependency */,
				2AC74E02AC74E02AC74E0000 /* PBXTargetDependency */,
			);
			name = boost_graph_parallel;
			productName = boost_graph_parallel;
		};
		291AD10291AD10291AD10000 /* iostreams-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 291BDD0291BDD0291BDD0000 /* Build configuration list for PBXAggregateTarget "iostreams-modularize" */;
			buildPhases = (
				291AF60291AF60291AF60000 /* CMake ReRun */,
				291B720291B720291B720000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "iostreams-modularize";
			productName = "iostreams-modularize";
		};
		2922D202922D202922D20000 /* boost_iostreams */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 2923C802923C802923C80000 /* Build configuration list for PBXAggregateTarget "boost_iostreams" */;
			buildPhases = (
				2922F302922F302922F30000 /* CMake ReRun */,
				292373029237302923730000 /* CMake Rules */,
			);
			dependencies = (
				2AC7BF02AC7BF02AC7BF0000 /* PBXTargetDependency */,
				2AC83702AC83702AC8370000 /* PBXTargetDependency */,
				2AC8AF02AC8AF02AC8AF0000 /* PBXTargetDependency */,
				2AC92702AC92702AC9270000 /* PBXTargetDependency */,
			);
			name = boost_iostreams;
			productName = boost_iostreams;
		};
		295F430295F430295F430000 /* lambda-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 296052029605202960520000 /* Build configuration list for PBXAggregateTarget "lambda-modularize" */;
			buildPhases = (
				295F6C0295F6C0295F6C0000 /* CMake ReRun */,
				295FE40295FE40295FE40000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "lambda-modularize";
			productName = "lambda-modularize";
		};
		29674D029674D029674D0000 /* multi_array-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 29685F029685F029685F0000 /* Build configuration list for PBXAggregateTarget "multi_array-modularize" */;
			buildPhases = (
				296778029677802967780000 /* CMake ReRun */,
				2967F402967F402967F40000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "multi_array-modularize";
			productName = "multi_array-modularize";
		};
		296F6B0296F6B0296F6B0000 /* program_options-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 29707F029707F029707F0000 /* Build configuration list for PBXAggregateTarget "program_options-modularize" */;
			buildPhases = (
				296F960296F960296F960000 /* CMake ReRun */,
				297012029701202970120000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "program_options-modularize";
			productName = "program_options-modularize";
		};
		297777029777702977770000 /* boost_program_options */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 297873029787302978730000 /* Build configuration list for PBXAggregateTarget "boost_program_options" */;
			buildPhases = (
				297798029779802977980000 /* CMake ReRun */,
				297818029781802978180000 /* CMake Rules */,
			);
			dependencies = (
				2AC99F02AC99F02AC99F0000 /* PBXTargetDependency */,
				2ACA1702ACA1702ACA170000 /* PBXTargetDependency */,
				2ACA9702ACA9702ACA970000 /* PBXTargetDependency */,
				2ACB1002ACB1002ACB100000 /* PBXTargetDependency */,
			);
			name = boost_program_options;
			productName = boost_program_options;
		};
		29C20B029C20B029C20B0000 /* rational-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 29C31A029C31A029C31A0000 /* Build configuration list for PBXAggregateTarget "rational-modularize" */;
			buildPhases = (
				29C234029C234029C2340000 /* CMake ReRun */,
				29C2AC029C2AC029C2AC0000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "rational-modularize";
			productName = "rational-modularize";
		};
		29CA16029CA16029CA160000 /* signals-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 29CB26029CB26029CB260000 /* Build configuration list for PBXAggregateTarget "signals-modularize" */;
			buildPhases = (
				29CA43029CA43029CA430000 /* CMake ReRun */,
				29CABF029CABF029CABF0000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "signals-modularize";
			productName = "signals-modularize";
		};
		29D219029D219029D2190000 /* boost_signals */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 29D318029D318029D3180000 /* Build configuration list for PBXAggregateTarget "boost_signals" */;
			buildPhases = (
				29D23A029D23A029D23A0000 /* CMake ReRun */,
				29D2BA029D2BA029D2BA0000 /* CMake Rules */,
			);
			dependencies = (
				2ACB8102ACB8102ACB810000 /* PBXTargetDependency */,
				2ACBF902ACBF902ACBF90000 /* PBXTargetDependency */,
				2ACC6102ACC6102ACC610000 /* PBXTargetDependency */,
				2ACCDB02ACCDB02ACCDB0000 /* PBXTargetDependency */,
			);
			name = boost_signals;
			productName = boost_signals;
		};
		2A14D202A14D202A14D20000 /* signals2-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 2A15E202A15E202A15E20000 /* Build configuration list for PBXAggregateTarget "signals2-modularize" */;
			buildPhases = (
				2A14FD02A14FD02A14FD0000 /* CMake ReRun */,
				2A157902A157902A15790000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "signals2-modularize";
			productName = "signals2-modularize";
		};
		2A1CD602A1CD602A1CD60000 /* statechart-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 2A1DE502A1DE502A1DE50000 /* Build configuration list for PBXAggregateTarget "statechart-modularize" */;
			buildPhases = (
				2A1CFF02A1CFF02A1CFF0000 /* CMake ReRun */,
				2A1D7702A1D7702A1D770000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "statechart-modularize";
			productName = "statechart-modularize";
		};
		2A24DD02A24DD02A24DD0000 /* tr1-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 2A25EC02A25EC02A25EC0000 /* Build configuration list for PBXAggregateTarget "tr1-modularize" */;
			buildPhases = (
				2A250602A250602A25060000 /* CMake ReRun */,
				2A257E02A257E02A257E0000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "tr1-modularize";
			productName = "tr1-modularize";
		};
		2A2CE402A2CE402A2CE40000 /* units-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 2A2DF302A2DF302A2DF30000 /* Build configuration list for PBXAggregateTarget "units-modularize" */;
			buildPhases = (
				2A2D0D02A2D0D02A2D0D0000 /* CMake ReRun */,
				2A2D8502A2D8502A2D850000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "units-modularize";
			productName = "units-modularize";
		};
		2A34F202A34F202A34F20000 /* wave-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 2A363902A363902A36390000 /* Build configuration list for PBXAggregateTarget "wave-modularize" */;
			buildPhases = (
				2A351D02A351D02A351D0000 /* CMake ReRun */,
				2A359902A359902A35990000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "wave-modularize";
			productName = "wave-modularize";
		};
		2A3D0002A3D0002A3D000000 /* boost_wave */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 2A3E1202A3E1202A3E120000 /* Build configuration list for PBXAggregateTarget "boost_wave" */;
			buildPhases = (
				2A3D2102A3D2102A3D210000 /* CMake ReRun */,
				2A3DA102A3DA102A3DA10000 /* CMake Rules */,
			);
			dependencies = (
				2ACD5502ACD5502ACD550000 /* PBXTargetDependency */,
				2ACDCF02ACDCF02ACDCF0000 /* PBXTargetDependency */,
				2ACE4902ACE4902ACE490000 /* PBXTargetDependency */,
				2ACEC302ACEC302ACEC30000 /* PBXTargetDependency */,
			);
			name = boost_wave;
			productName = boost_wave;
		};
/* End PBXAggregateTarget section */

/* Begin PBXBuildFile section */
		23D9BA023D9BA023D9BA0000 /* greg_month.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 23D93B023D93B023D93B0000 /* greg_month.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_ALL_DYN_LINK=1     "; }; };
		23DA77023DA77023DA770000 /* greg_weekday.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 23DA21023DA21023DA210000 /* greg_weekday.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_ALL_DYN_LINK=1     "; }; };
		23DB1C023DB1C023DB1C0000 /* date_generators.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 23DADE023DADE023DADE0000 /* date_generators.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_ALL_DYN_LINK=1     "; }; };
		23E72C023E72C023E72C0000 /* greg_month.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 23D93B023D93B023D93B0000 /* greg_month.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_ALL_DYN_LINK=1     "; }; };
		23E7A0023E7A0023E7A00000 /* greg_weekday.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 23DA21023DA21023DA210000 /* greg_weekday.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_ALL_DYN_LINK=1     "; }; };
		23E824023E824023E8240000 /* date_generators.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 23DADE023DADE023DADE0000 /* date_generators.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_ALL_DYN_LINK=1     "; }; };
		23F408023F408023F4080000 /* greg_month.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 23D93B023D93B023D93B0000 /* greg_month.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_DATE_TIME_STATIC_LINK     "; }; };
		23F48F023F48F023F48F0000 /* greg_weekday.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 23DA21023DA21023DA210000 /* greg_weekday.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_DATE_TIME_STATIC_LINK     "; }; };
		23F51A023F51A023F51A0000 /* date_generators.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 23DADE023DADE023DADE0000 /* date_generators.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_DATE_TIME_STATIC_LINK     "; }; };
		2403F802403F802403F80000 /* greg_month.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 23D93B023D93B023D93B0000 /* greg_month.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_DATE_TIME_STATIC_LINK     "; }; };
		2404AE02404AE02404AE0000 /* greg_weekday.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 23DA21023DA21023DA210000 /* greg_weekday.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_DATE_TIME_STATIC_LINK     "; }; };
		240511024051102405110000 /* date_generators.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 23DADE023DADE023DADE0000 /* date_generators.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_DATE_TIME_STATIC_LINK     "; }; };
		24200B024200B024200B0000 /* thread.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 241F830241F830241F830000 /* thread.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_THREAD_BUILD_DLL=1     "; }; };
		2420C702420C702420C70000 /* exceptions.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 242074024207402420740000 /* exceptions.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_THREAD_BUILD_DLL=1     "; }; };
		242182024218202421820000 /* once.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 24212D024212D024212D0000 /* once.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_THREAD_BUILD_DLL=1     "; }; };
		242D650242D650242D650000 /* thread.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 241F830241F830241F830000 /* thread.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_THREAD_BUILD_DLL=1     "; }; };
		242E170242E170242E170000 /* exceptions.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 242074024207402420740000 /* exceptions.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_THREAD_BUILD_DLL=1     "; }; };
		242E6B0242E6B0242E6B0000 /* once.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 24212D024212D024212D0000 /* once.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_THREAD_BUILD_DLL=1     "; }; };
		243A470243A470243A470000 /* thread.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 241F830241F830241F830000 /* thread.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_THREAD_BUILD_LIB=1     "; }; };
		243ABD0243ABD0243ABD0000 /* exceptions.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 242074024207402420740000 /* exceptions.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_THREAD_BUILD_LIB=1     "; }; };
		243B440243B440243B440000 /* once.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 24212D024212D024212D0000 /* once.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_THREAD_BUILD_LIB=1     "; }; };
		24462D024462D024462D0000 /* thread.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 241F830241F830241F830000 /* thread.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_THREAD_BUILD_LIB=1     "; }; };
		2446DE02446DE02446DE0000 /* exceptions.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 242074024207402420740000 /* exceptions.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_THREAD_BUILD_LIB=1     "; }; };
		244764024476402447640000 /* once.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 24212D024212D024212D0000 /* once.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_THREAD_BUILD_LIB=1     "; }; };
		246221024622102462210000 /* c_regex_traits.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2461EC02461EC02461EC0000 /* c_regex_traits.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_REGEX_DYN_LINK=1     "; }; };
		2462DB02462DB02462DB0000 /* cpp_regex_traits.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 24629C024629C024629C0000 /* cpp_regex_traits.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_REGEX_DYN_LINK=1     "; }; };
		246395024639502463950000 /* cregex.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 246357024635702463570000 /* cregex.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_REGEX_DYN_LINK=1     "; }; };
		246450024645002464500000 /* fileiter.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 246411024641102464110000 /* fileiter.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_REGEX_DYN_LINK=1     "; }; };
		246509024650902465090000 /* icu.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2464C902464C902464C90000 /* icu.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_REGEX_DYN_LINK=1     "; }; };
		2465C502465C502465C50000 /* instances.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 24658A024658A024658A0000 /* instances.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_REGEX_DYN_LINK=1     "; }; };
		24667E024667E024667E0000 /* posix_api.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 24663F024663F024663F0000 /* posix_api.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_REGEX_DYN_LINK=1     "; }; };
		246735024673502467350000 /* regex.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2466F702466F702466F70000 /* regex.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_REGEX_DYN_LINK=1     "; }; };
		2467F102467F102467F10000 /* regex_debug.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2467B102467B102467B10000 /* regex_debug.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_REGEX_DYN_LINK=1     "; }; };
		2468AF02468AF02468AF0000 /* regex_raw_buffer.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 246870024687002468700000 /* regex_raw_buffer.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_REGEX_DYN_LINK=1     "; }; };
		24696E024696E024696E0000 /* regex_traits_defaults.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 24692F024692F024692F0000 /* regex_traits_defaults.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_REGEX_DYN_LINK=1     "; }; };
		246A2C0246A2C0246A2C0000 /* static_mutex.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2469ED02469ED02469ED0000 /* static_mutex.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_REGEX_DYN_LINK=1     "; }; };
		246AE50246AE50246AE50000 /* w32_regex_traits.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 246AA60246AA60246AA60000 /* w32_regex_traits.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_REGEX_DYN_LINK=1     "; }; };
		246BE90246BE90246BE90000 /* wc_regex_traits.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 246B620246B620246B620000 /* wc_regex_traits.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_REGEX_DYN_LINK=1     "; }; };
		246CA40246CA40246CA40000 /* wide_posix_api.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 246C1D0246C1D0246C1D0000 /* wide_posix_api.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_REGEX_DYN_LINK=1     "; }; };
		246D160246D160246D160000 /* winstances.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 246CD70246CD70246CD70000 /* winstances.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_REGEX_DYN_LINK=1     "; }; };
		246DD10246DD10246DD10000 /* usinstances.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 246D8F0246D8F0246D8F0000 /* usinstances.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_REGEX_DYN_LINK=1     "; }; };
		2479BC02479BC02479BC0000 /* c_regex_traits.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2461EC02461EC02461EC0000 /* c_regex_traits.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_REGEX_DYN_LINK=1     "; }; };
		247A420247A420247A420000 /* cpp_regex_traits.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 24629C024629C024629C0000 /* cpp_regex_traits.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_REGEX_DYN_LINK=1     "; }; };
		247ADB0247ADB0247ADB0000 /* cregex.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 246357024635702463570000 /* cregex.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_REGEX_DYN_LINK=1     "; }; };
		247B5F0247B5F0247B5F0000 /* fileiter.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 246411024641102464110000 /* fileiter.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_REGEX_DYN_LINK=1     "; }; };
		247BD30247BD30247BD30000 /* icu.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2464C902464C902464C90000 /* icu.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_REGEX_DYN_LINK=1     "; }; };
		247C560247C560247C560000 /* instances.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 24658A024658A024658A0000 /* instances.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_REGEX_DYN_LINK=1     "; }; };
		247CD60247CD60247CD60000 /* posix_api.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 24663F024663F024663F0000 /* posix_api.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_REGEX_DYN_LINK=1     "; }; };
		247D580247D580247D580000 /* regex.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2466F702466F702466F70000 /* regex.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_REGEX_DYN_LINK=1     "; }; };
		247DDF0247DDF0247DDF0000 /* regex_debug.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2467B102467B102467B10000 /* regex_debug.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_REGEX_DYN_LINK=1     "; }; };
		247E610247E610247E610000 /* regex_raw_buffer.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 246870024687002468700000 /* regex_raw_buffer.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_REGEX_DYN_LINK=1     "; }; };
		247F260247F260247F260000 /* regex_traits_defaults.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 24692F024692F024692F0000 /* regex_traits_defaults.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_REGEX_DYN_LINK=1     "; }; };
		247F6B0247F6B0247F6B0000 /* static_mutex.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2469ED02469ED02469ED0000 /* static_mutex.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_REGEX_DYN_LINK=1     "; }; };
		247FEF0247FEF0247FEF0000 /* w32_regex_traits.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 246AA60246AA60246AA60000 /* w32_regex_traits.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_REGEX_DYN_LINK=1     "; }; };
		248076024807602480760000 /* wc_regex_traits.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 246B620246B620246B620000 /* wc_regex_traits.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_REGEX_DYN_LINK=1     "; }; };
		2480FC02480FC02480FC0000 /* wide_posix_api.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 246C1D0246C1D0246C1D0000 /* wide_posix_api.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_REGEX_DYN_LINK=1     "; }; };
		248194024819402481940000 /* winstances.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 246CD70246CD70246CD70000 /* winstances.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_REGEX_DYN_LINK=1     "; }; };
		24820A024820A024820A0000 /* usinstances.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 246D8F0246D8F0246D8F0000 /* usinstances.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_REGEX_DYN_LINK=1     "; }; };
		248DE50248DE50248DE50000 /* c_regex_traits.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2461EC02461EC02461EC0000 /* c_regex_traits.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		248E6D0248E6D0248E6D0000 /* cpp_regex_traits.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 24629C024629C024629C0000 /* cpp_regex_traits.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		248F060248F060248F060000 /* cregex.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 246357024635702463570000 /* cregex.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		248F8B0248F8B0248F8B0000 /* fileiter.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 246411024641102464110000 /* fileiter.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		249011024901102490110000 /* icu.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2464C902464C902464C90000 /* icu.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		2490C102490C102490C10000 /* instances.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 24658A024658A024658A0000 /* instances.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		249143024914302491430000 /* posix_api.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 24663F024663F024663F0000 /* posix_api.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		249188024918802491880000 /* regex.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2466F702466F702466F70000 /* regex.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		249209024920902492090000 /* regex_debug.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2467B102467B102467B10000 /* regex_debug.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		24928D024928D024928D0000 /* regex_raw_buffer.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 246870024687002468700000 /* regex_raw_buffer.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		249315024931502493150000 /* regex_traits_defaults.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 24692F024692F024692F0000 /* regex_traits_defaults.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		2493AF02493AF02493AF0000 /* static_mutex.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2469ED02469ED02469ED0000 /* static_mutex.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		249421024942102494210000 /* w32_regex_traits.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 246AA60246AA60246AA60000 /* w32_regex_traits.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		2494A902494A902494A90000 /* wc_regex_traits.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 246B620246B620246B620000 /* wc_regex_traits.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		24952F024952F024952F0000 /* wide_posix_api.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 246C1D0246C1D0246C1D0000 /* wide_posix_api.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		2495C702495C702495C70000 /* winstances.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 246CD70246CD70246CD70000 /* winstances.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		24963D024963D024963D0000 /* usinstances.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 246D8F0246D8F0246D8F0000 /* usinstances.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		24A112024A112024A1120000 /* c_regex_traits.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2461EC02461EC02461EC0000 /* c_regex_traits.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		24A197024A197024A1970000 /* cpp_regex_traits.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 24629C024629C024629C0000 /* cpp_regex_traits.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		24A231024A231024A2310000 /* cregex.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 246357024635702463570000 /* cregex.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		24A2DD024A2DD024A2DD0000 /* fileiter.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 246411024641102464110000 /* fileiter.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		24A363024A363024A3630000 /* icu.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2464C902464C902464C90000 /* icu.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		24A3E8024A3E8024A3E80000 /* instances.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 24658A024658A024658A0000 /* instances.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		24A432024A432024A4320000 /* posix_api.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 24663F024663F024663F0000 /* posix_api.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		24A4B0024A4B0024A4B00000 /* regex.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2466F702466F702466F70000 /* regex.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		24A532024A532024A5320000 /* regex_debug.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2467B102467B102467B10000 /* regex_debug.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		24A5B5024A5B5024A5B50000 /* regex_raw_buffer.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 246870024687002468700000 /* regex_raw_buffer.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		24A63D024A63D024A63D0000 /* regex_traits_defaults.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 24692F024692F024692F0000 /* regex_traits_defaults.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		24A6C1024A6C1024A6C10000 /* static_mutex.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2469ED02469ED02469ED0000 /* static_mutex.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		24A744024A744024A7440000 /* w32_regex_traits.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 246AA60246AA60246AA60000 /* w32_regex_traits.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		24A801024A801024A8010000 /* wc_regex_traits.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 246B620246B620246B620000 /* wc_regex_traits.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		24A883024A883024A8830000 /* wide_posix_api.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 246C1D0246C1D0246C1D0000 /* wide_posix_api.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		24A8CB024A8CB024A8CB0000 /* winstances.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 246CD70246CD70246CD70000 /* winstances.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		24A98E024A98E024A98E0000 /* usinstances.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 246D8F0246D8F0246D8F0000 /* usinstances.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		2510C802510C802510C80000 /* basic_archive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 251069025106902510690000 /* basic_archive.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_SERIALIZATION_DYN_LINK=1     "; }; };
		251189025118902511890000 /* basic_iarchive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 251135025113502511350000 /* basic_iarchive.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_SERIALIZATION_DYN_LINK=1     "; }; };
		251233025123302512330000 /* basic_iserializer.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2511F002511F002511F00000 /* basic_iserializer.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_SERIALIZATION_DYN_LINK=1     "; }; };
		2512EA02512EA02512EA0000 /* basic_oarchive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2512B002512B002512B00000 /* basic_oarchive.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_SERIALIZATION_DYN_LINK=1     "; }; };
		2513AD02513AD02513AD0000 /* basic_oserializer.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 25136C025136C025136C0000 /* basic_oserializer.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_SERIALIZATION_DYN_LINK=1     "; }; };
		251485025148502514850000 /* basic_pointer_iserializer.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 25142D025142D025142D0000 /* basic_pointer_iserializer.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_SERIALIZATION_DYN_LINK=1     "; }; };
		251540025154002515400000 /* basic_pointer_oserializer.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2514F202514F202514F20000 /* basic_pointer_oserializer.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_SERIALIZATION_DYN_LINK=1     "; }; };
		2515F202515F202515F20000 /* basic_serializer_map.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2515AC02515AC02515AC0000 /* basic_serializer_map.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_SERIALIZATION_DYN_LINK=1     "; }; };
		2516C602516C602516C60000 /* basic_text_iprimitive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 251670025167002516700000 /* basic_text_iprimitive.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_SERIALIZATION_DYN_LINK=1     "; }; };
		25178B025178B025178B0000 /* basic_text_oprimitive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 251733025173302517330000 /* basic_text_oprimitive.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_SERIALIZATION_DYN_LINK=1     "; }; };
		25183B025183B025183B0000 /* basic_xml_archive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2517F702517F702517F70000 /* basic_xml_archive.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_SERIALIZATION_DYN_LINK=1     "; }; };
		25190C025190C025190C0000 /* binary_iarchive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2518B802518B802518B80000 /* binary_iarchive.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_SERIALIZATION_DYN_LINK=1     "; }; };
		2519C702519C702519C70000 /* binary_oarchive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 251973025197302519730000 /* binary_oarchive.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_SERIALIZATION_DYN_LINK=1     "; }; };
		251A720251A720251A720000 /* extended_type_info.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 251A2E0251A2E0251A2E0000 /* extended_type_info.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_SERIALIZATION_DYN_LINK=1     "; }; };
		251B470251B470251B470000 /* extended_type_info_typeid.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 251AF00251AF00251AF00000 /* extended_type_info_typeid.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_SERIALIZATION_DYN_LINK=1     "; }; };
		251C020251C020251C020000 /* extended_type_info_no_rtti.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 251BB40251BB40251BB40000 /* extended_type_info_no_rtti.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_SERIALIZATION_DYN_LINK=1     "; }; };
		251CB90251CB90251CB90000 /* polymorphic_iarchive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 251C6E0251C6E0251C6E0000 /* polymorphic_iarchive.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_SERIALIZATION_DYN_LINK=1     "; }; };
		251D7B0251D7B0251D7B0000 /* polymorphic_oarchive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 251D390251D390251D390000 /* polymorphic_oarchive.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_SERIALIZATION_DYN_LINK=1     "; }; };
		251E320251E320251E320000 /* stl_port.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 251DF80251DF80251DF80000 /* stl_port.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_SERIALIZATION_DYN_LINK=1     "; }; };
		251F080251F080251F080000 /* text_iarchive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 251EB40251EB40251EB40000 /* text_iarchive.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_SERIALIZATION_DYN_LINK=1     "; }; };
		251FC30251FC30251FC30000 /* text_oarchive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 251F6F0251F6F0251F6F0000 /* text_oarchive.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_SERIALIZATION_DYN_LINK=1     "; }; };
		25207E025207E025207E0000 /* void_cast.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 25202A025202A025202A0000 /* void_cast.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_SERIALIZATION_DYN_LINK=1     "; }; };
		252139025213902521390000 /* xml_grammar.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2520E502520E502520E50000 /* xml_grammar.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_SERIALIZATION_DYN_LINK=1     "; }; };
		2521F402521F402521F40000 /* xml_iarchive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2521A002521A002521A00000 /* xml_iarchive.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_SERIALIZATION_DYN_LINK=1     "; }; };
		2522AF02522AF02522AF0000 /* xml_oarchive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 25225B025225B025225B0000 /* xml_oarchive.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_SERIALIZATION_DYN_LINK=1     "; }; };
		252E960252E960252E960000 /* basic_archive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 251069025106902510690000 /* basic_archive.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_SERIALIZATION_DYN_LINK=1     "; }; };
		252F1E0252F1E0252F1E0000 /* basic_iarchive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 251135025113502511350000 /* basic_iarchive.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_SERIALIZATION_DYN_LINK=1     "; }; };
		252F940252F940252F940000 /* basic_iserializer.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2511F002511F002511F00000 /* basic_iserializer.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_SERIALIZATION_DYN_LINK=1     "; }; };
		253058025305802530580000 /* basic_oarchive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2512B002512B002512B00000 /* basic_oarchive.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_SERIALIZATION_DYN_LINK=1     "; }; };
		2530A302530A302530A30000 /* basic_oserializer.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 25136C025136C025136C0000 /* basic_oserializer.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_SERIALIZATION_DYN_LINK=1     "; }; };
		253143025314302531430000 /* basic_pointer_iserializer.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 25142D025142D025142D0000 /* basic_pointer_iserializer.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_SERIALIZATION_DYN_LINK=1     "; }; };
		2531CD02531CD02531CD0000 /* basic_pointer_oserializer.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2514F202514F202514F20000 /* basic_pointer_oserializer.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_SERIALIZATION_DYN_LINK=1     "; }; };
		253254025325402532540000 /* basic_serializer_map.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2515AC02515AC02515AC0000 /* basic_serializer_map.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_SERIALIZATION_DYN_LINK=1     "; }; };
		2532DF02532DF02532DF0000 /* basic_text_iprimitive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 251670025167002516700000 /* basic_text_iprimitive.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_SERIALIZATION_DYN_LINK=1     "; }; };
		25336A025336A025336A0000 /* basic_text_oprimitive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 251733025173302517330000 /* basic_text_oprimitive.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_SERIALIZATION_DYN_LINK=1     "; }; };
		2533F302533F302533F30000 /* basic_xml_archive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2517F702517F702517F70000 /* basic_xml_archive.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_SERIALIZATION_DYN_LINK=1     "; }; };
		25347A025347A025347A0000 /* binary_iarchive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2518B802518B802518B80000 /* binary_iarchive.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_SERIALIZATION_DYN_LINK=1     "; }; };
		253500025350002535000000 /* binary_oarchive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 251973025197302519730000 /* binary_oarchive.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_SERIALIZATION_DYN_LINK=1     "; }; };
		253588025358802535880000 /* extended_type_info.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 251A2E0251A2E0251A2E0000 /* extended_type_info.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_SERIALIZATION_DYN_LINK=1     "; }; };
		2535FE02535FE02535FE0000 /* extended_type_info_typeid.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 251AF00251AF00251AF00000 /* extended_type_info_typeid.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_SERIALIZATION_DYN_LINK=1     "; }; };
		25369C025369C025369C0000 /* extended_type_info_no_rtti.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 251BB40251BB40251BB40000 /* extended_type_info_no_rtti.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_SERIALIZATION_DYN_LINK=1     "; }; };
		253717025371702537170000 /* polymorphic_iarchive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 251C6E0251C6E0251C6E0000 /* polymorphic_iarchive.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_SERIALIZATION_DYN_LINK=1     "; }; };
		2537B502537B502537B50000 /* polymorphic_oarchive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 251D390251D390251D390000 /* polymorphic_oarchive.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_SERIALIZATION_DYN_LINK=1     "; }; };
		25383A025383A025383A0000 /* stl_port.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 251DF80251DF80251DF80000 /* stl_port.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_SERIALIZATION_DYN_LINK=1     "; }; };
		2538BF02538BF02538BF0000 /* text_iarchive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 251EB40251EB40251EB40000 /* text_iarchive.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_SERIALIZATION_DYN_LINK=1     "; }; };
		253944025394402539440000 /* text_oarchive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 251F6F0251F6F0251F6F0000 /* text_oarchive.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_SERIALIZATION_DYN_LINK=1     "; }; };
		2539C902539C902539C90000 /* void_cast.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 25202A025202A025202A0000 /* void_cast.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_SERIALIZATION_DYN_LINK=1     "; }; };
		253A4E0253A4E0253A4E0000 /* xml_grammar.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2520E502520E502520E50000 /* xml_grammar.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_SERIALIZATION_DYN_LINK=1     "; }; };
		253AD30253AD30253AD30000 /* xml_iarchive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2521A002521A002521A00000 /* xml_iarchive.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_SERIALIZATION_DYN_LINK=1     "; }; };
		253B580253B580253B580000 /* xml_oarchive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 25225B025225B025225B0000 /* xml_oarchive.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_SERIALIZATION_DYN_LINK=1     "; }; };
		254736025473602547360000 /* basic_archive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 251069025106902510690000 /* basic_archive.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		2547EB02547EB02547EB0000 /* basic_iarchive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 251135025113502511350000 /* basic_iarchive.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		254834025483402548340000 /* basic_iserializer.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2511F002511F002511F00000 /* basic_iserializer.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		2548F802548F802548F80000 /* basic_oarchive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2512B002512B002512B00000 /* basic_oarchive.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		254955025495502549550000 /* basic_oserializer.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 25136C025136C025136C0000 /* basic_oserializer.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		2549E402549E402549E40000 /* basic_pointer_iserializer.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 25142D025142D025142D0000 /* basic_pointer_iserializer.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		254A670254A670254A670000 /* basic_pointer_oserializer.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2514F202514F202514F20000 /* basic_pointer_oserializer.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		254AED0254AED0254AED0000 /* basic_serializer_map.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2515AC02515AC02515AC0000 /* basic_serializer_map.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		254B760254B760254B760000 /* basic_text_iprimitive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 251670025167002516700000 /* basic_text_iprimitive.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		254BEC0254BEC0254BEC0000 /* basic_text_oprimitive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 251733025173302517330000 /* basic_text_oprimitive.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		254C800254C800254C800000 /* basic_xml_archive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2517F702517F702517F70000 /* basic_xml_archive.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		254CF80254CF80254CF80000 /* binary_iarchive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2518B802518B802518B80000 /* binary_iarchive.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		254D7E0254D7E0254D7E0000 /* binary_oarchive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 251973025197302519730000 /* binary_oarchive.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		254E020254E020254E020000 /* extended_type_info.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 251A2E0251A2E0251A2E0000 /* extended_type_info.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		254EA00254EA00254EA00000 /* extended_type_info_typeid.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 251AF00251AF00251AF00000 /* extended_type_info_typeid.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		254F2B0254F2B0254F2B0000 /* extended_type_info_no_rtti.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 251BB40251BB40251BB40000 /* extended_type_info_no_rtti.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		254F9F0254F9F0254F9F0000 /* polymorphic_iarchive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 251C6E0251C6E0251C6E0000 /* polymorphic_iarchive.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		25502B025502B025502B0000 /* polymorphic_oarchive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 251D390251D390251D390000 /* polymorphic_oarchive.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		2550ED02550ED02550ED0000 /* stl_port.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 251DF80251DF80251DF80000 /* stl_port.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		255171025517102551710000 /* text_iarchive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 251EB40251EB40251EB40000 /* text_iarchive.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		2551F502551F502551F50000 /* text_oarchive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 251F6F0251F6F0251F6F0000 /* text_oarchive.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		255279025527902552790000 /* void_cast.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 25202A025202A025202A0000 /* void_cast.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		2552FD02552FD02552FD0000 /* xml_grammar.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2520E502520E502520E50000 /* xml_grammar.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		255381025538102553810000 /* xml_iarchive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2521A002521A002521A00000 /* xml_iarchive.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		255405025540502554050000 /* xml_oarchive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 25225B025225B025225B0000 /* xml_oarchive.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		255E980255E980255E980000 /* basic_archive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 251069025106902510690000 /* basic_archive.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		255F200255F200255F200000 /* basic_iarchive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 251135025113502511350000 /* basic_iarchive.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		255FB50255FB50255FB50000 /* basic_iserializer.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2511F002511F002511F00000 /* basic_iserializer.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		256027025602702560270000 /* basic_oarchive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2512B002512B002512B00000 /* basic_oarchive.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		2560BF02560BF02560BF0000 /* basic_oserializer.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 25136C025136C025136C0000 /* basic_oserializer.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		256145025614502561450000 /* basic_pointer_iserializer.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 25142D025142D025142D0000 /* basic_pointer_iserializer.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		2561CD02561CD02561CD0000 /* basic_pointer_oserializer.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2514F202514F202514F20000 /* basic_pointer_oserializer.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		256240025624002562400000 /* basic_serializer_map.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2515AC02515AC02515AC0000 /* basic_serializer_map.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		2562DA02562DA02562DA0000 /* basic_text_iprimitive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 251670025167002516700000 /* basic_text_iprimitive.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		256360025636002563600000 /* basic_text_oprimitive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 251733025173302517330000 /* basic_text_oprimitive.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		2563D302563D302563D30000 /* basic_xml_archive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2517F702517F702517F70000 /* basic_xml_archive.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		256493025649302564930000 /* binary_iarchive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2518B802518B802518B80000 /* binary_iarchive.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		2564ED02564ED02564ED0000 /* binary_oarchive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 251973025197302519730000 /* binary_oarchive.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		25655E025655E025655E0000 /* extended_type_info.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 251A2E0251A2E0251A2E0000 /* extended_type_info.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		2565F802565F802565F80000 /* extended_type_info_typeid.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 251AF00251AF00251AF00000 /* extended_type_info_typeid.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		256669025666902566690000 /* extended_type_info_no_rtti.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 251BB40251BB40251BB40000 /* extended_type_info_no_rtti.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		25670A025670A025670A0000 /* polymorphic_iarchive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 251C6E0251C6E0251C6E0000 /* polymorphic_iarchive.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		256780025678002567800000 /* polymorphic_oarchive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 251D390251D390251D390000 /* polymorphic_oarchive.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		256807025680702568070000 /* stl_port.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 251DF80251DF80251DF80000 /* stl_port.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		25689D025689D025689D0000 /* text_iarchive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 251EB40251EB40251EB40000 /* text_iarchive.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		25690D025690D025690D0000 /* text_oarchive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 251F6F0251F6F0251F6F0000 /* text_oarchive.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		2569A302569A302569A30000 /* void_cast.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 25202A025202A025202A0000 /* void_cast.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		256A130256A130256A130000 /* xml_grammar.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2520E502520E502520E50000 /* xml_grammar.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		256AA90256AA90256AA90000 /* xml_iarchive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2521A002521A002521A00000 /* xml_iarchive.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		256B190256B190256B190000 /* xml_oarchive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 25225B025225B025225B0000 /* xml_oarchive.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		257E030257E030257E030000 /* basic_text_wiprimitive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 257D8E0257D8E0257D8E0000 /* basic_text_wiprimitive.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_SERIALIZATION_DYN_LINK=1 -DBOOST_WSERIALIZATION_DYN_LINK=1     "; }; };
		257EC70257EC70257EC70000 /* basic_text_woprimitive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 257D1A0257D1A0257D1A0000 /* basic_text_woprimitive.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_SERIALIZATION_DYN_LINK=1 -DBOOST_WSERIALIZATION_DYN_LINK=1     "; }; };
		257F870257F870257F870000 /* text_wiarchive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 257E620257E620257E620000 /* text_wiarchive.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_SERIALIZATION_DYN_LINK=1 -DBOOST_WSERIALIZATION_DYN_LINK=1     "; }; };
		258044025804402580440000 /* text_woarchive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 257FEF0257FEF0257FEF0000 /* text_woarchive.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_SERIALIZATION_DYN_LINK=1 -DBOOST_WSERIALIZATION_DYN_LINK=1     "; }; };
		2580EF02580EF02580EF0000 /* utf8_codecvt_facet.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 257FE80257FE80257FE80000 /* utf8_codecvt_facet.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_SERIALIZATION_DYN_LINK=1 -DBOOST_WSERIALIZATION_DYN_LINK=1     "; }; };
		2581C702581C702581C70000 /* xml_wgrammar.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2580A502580A502580A50000 /* xml_wgrammar.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_SERIALIZATION_DYN_LINK=1 -DBOOST_WSERIALIZATION_DYN_LINK=1     "; }; };
		258285025828502582850000 /* xml_wiarchive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 258168025816802581680000 /* xml_wiarchive.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_SERIALIZATION_DYN_LINK=1 -DBOOST_WSERIALIZATION_DYN_LINK=1     "; }; };
		258343025834302583430000 /* xml_woarchive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 258228025822802582280000 /* xml_woarchive.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_SERIALIZATION_DYN_LINK=1 -DBOOST_WSERIALIZATION_DYN_LINK=1     "; }; };
		2583FC02583FC02583FC0000 /* codecvt_null.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2582E602582E602582E60000 /* codecvt_null.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_SERIALIZATION_DYN_LINK=1 -DBOOST_WSERIALIZATION_DYN_LINK=1     "; }; };
		258FE40258FE40258FE40000 /* basic_text_wiprimitive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 257D8E0257D8E0257D8E0000 /* basic_text_wiprimitive.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_SERIALIZATION_DYN_LINK=1 -DBOOST_WSERIALIZATION_DYN_LINK=1     "; }; };
		259076025907602590760000 /* basic_text_woprimitive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 257D1A0257D1A0257D1A0000 /* basic_text_woprimitive.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_SERIALIZATION_DYN_LINK=1 -DBOOST_WSERIALIZATION_DYN_LINK=1     "; }; };
		2590FF02590FF02590FF0000 /* text_wiarchive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 257E620257E620257E620000 /* text_wiarchive.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_SERIALIZATION_DYN_LINK=1 -DBOOST_WSERIALIZATION_DYN_LINK=1     "; }; };
		259173025917302591730000 /* text_woarchive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 257FEF0257FEF0257FEF0000 /* text_woarchive.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_SERIALIZATION_DYN_LINK=1 -DBOOST_WSERIALIZATION_DYN_LINK=1     "; }; };
		259216025921602592160000 /* utf8_codecvt_facet.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 257FE80257FE80257FE80000 /* utf8_codecvt_facet.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_SERIALIZATION_DYN_LINK=1 -DBOOST_WSERIALIZATION_DYN_LINK=1     "; }; };
		25928D025928D025928D0000 /* xml_wgrammar.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2580A502580A502580A50000 /* xml_wgrammar.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_SERIALIZATION_DYN_LINK=1 -DBOOST_WSERIALIZATION_DYN_LINK=1     "; }; };
		259356025935602593560000 /* xml_wiarchive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 258168025816802581680000 /* xml_wiarchive.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_SERIALIZATION_DYN_LINK=1 -DBOOST_WSERIALIZATION_DYN_LINK=1     "; }; };
		2593DE02593DE02593DE0000 /* xml_woarchive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 258228025822802582280000 /* xml_woarchive.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_SERIALIZATION_DYN_LINK=1 -DBOOST_WSERIALIZATION_DYN_LINK=1     "; }; };
		259469025946902594690000 /* codecvt_null.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2582E602582E602582E60000 /* codecvt_null.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_SERIALIZATION_DYN_LINK=1 -DBOOST_WSERIALIZATION_DYN_LINK=1     "; }; };
		25A025025A025025A0250000 /* basic_text_wiprimitive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 257D8E0257D8E0257D8E0000 /* basic_text_wiprimitive.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		25A0AF025A0AF025A0AF0000 /* basic_text_woprimitive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 257D1A0257D1A0257D1A0000 /* basic_text_woprimitive.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		25A15C025A15C025A15C0000 /* text_wiarchive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 257E620257E620257E620000 /* text_wiarchive.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		25A1E0025A1E0025A1E00000 /* text_woarchive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 257FEF0257FEF0257FEF0000 /* text_woarchive.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		25A23D025A23D025A23D0000 /* utf8_codecvt_facet.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 257FE80257FE80257FE80000 /* utf8_codecvt_facet.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		25A2F0025A2F0025A2F00000 /* xml_wgrammar.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2580A502580A502580A50000 /* xml_wgrammar.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		25A374025A374025A3740000 /* xml_wiarchive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 258168025816802581680000 /* xml_wiarchive.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		25A3F8025A3F8025A3F80000 /* xml_woarchive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 258228025822802582280000 /* xml_woarchive.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		25A441025A441025A4410000 /* codecvt_null.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2582E602582E602582E60000 /* codecvt_null.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		25AF10025AF10025AF100000 /* basic_text_wiprimitive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 257D8E0257D8E0257D8E0000 /* basic_text_wiprimitive.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		25AFAB025AFAB025AFAB0000 /* basic_text_woprimitive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 257D1A0257D1A0257D1A0000 /* basic_text_woprimitive.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		25B01B025B01B025B01B0000 /* text_wiarchive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 257E620257E620257E620000 /* text_wiarchive.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		25B0A4025B0A4025B0A40000 /* text_woarchive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 257FEF0257FEF0257FEF0000 /* text_woarchive.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		25B13D025B13D025B13D0000 /* utf8_codecvt_facet.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 257FE80257FE80257FE80000 /* utf8_codecvt_facet.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		25B1B0025B1B0025B1B00000 /* xml_wgrammar.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2580A502580A502580A50000 /* xml_wgrammar.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		25B239025B239025B2390000 /* xml_wiarchive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 258168025816802581680000 /* xml_wiarchive.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		25B2BD025B2BD025B2BD0000 /* xml_woarchive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 258228025822802582280000 /* xml_woarchive.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		25B343025B343025B3430000 /* codecvt_null.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2582E602582E602582E60000 /* codecvt_null.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		25F673025F673025F6730000 /* read_graphviz_spirit.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 25F584025F584025F5840000 /* read_graphviz_spirit.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_GRAPH_DYN_LINK=1     "; }; };
		2605DC02605DC02605DC0000 /* read_graphviz_spirit.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 25F584025F584025F5840000 /* read_graphviz_spirit.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_GRAPH_DYN_LINK=1     "; }; };
		2611C502611C502611C50000 /* read_graphviz_spirit.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 25F584025F584025F5840000 /* read_graphviz_spirit.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		261C7D0261C7D0261C7D0000 /* read_graphviz_spirit.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 25F584025F584025F5840000 /* read_graphviz_spirit.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		26380C026380C026380C0000 /* numeric.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 263721026372102637210000 /* numeric.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_PYTHON_SOURCE       "; }; };
		2638C302638C302638C30000 /* list.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 263885026388502638850000 /* list.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_PYTHON_SOURCE       "; }; };
		26397D026397D026397D0000 /* long.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 26393F026393F026393F0000 /* long.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_PYTHON_SOURCE       "; }; };
		263A350263A350263A350000 /* dict.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2639F902639F902639F90000 /* dict.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_PYTHON_SOURCE       "; }; };
		263AF30263AF30263AF30000 /* tuple.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 263AB20263AB20263AB20000 /* tuple.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_PYTHON_SOURCE       "; }; };
		263BAC0263BAC0263BAC0000 /* str.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 263B700263B700263B700000 /* str.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_PYTHON_SOURCE       "; }; };
		263C680263C680263C680000 /* slice.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 263C290263C290263C290000 /* slice.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_PYTHON_SOURCE       "; }; };
		263D380263D380263D380000 /* from_python.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 263CE20263CE20263CE20000 /* from_python.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_PYTHON_SOURCE       "; }; };
		263DDE0263DDE0263DDE0000 /* registry.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 263D9E0263D9E0263D9E0000 /* registry.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_PYTHON_SOURCE       "; }; };
		263E990263E990263E990000 /* type_id.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 263E5F0263E5F0263E5F0000 /* type_id.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_PYTHON_SOURCE       "; }; };
		263F5D0263F5D0263F5D0000 /* enum.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 263F1C0263F1C0263F1C0000 /* enum.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_PYTHON_SOURCE       "; }; };
		264027026402702640270000 /* class.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 263FD20263FD20263FD20000 /* class.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_PYTHON_SOURCE       "; }; };
		2640E202640E202640E20000 /* function.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 26408D026408D026408D0000 /* function.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_PYTHON_SOURCE       "; }; };
		26419D026419D026419D0000 /* inheritance.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 264148026414802641480000 /* inheritance.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_PYTHON_SOURCE       "; }; };
		264258026425802642580000 /* life_support.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 264203026420302642030000 /* life_support.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_PYTHON_SOURCE       "; }; };
		264314026431402643140000 /* pickle_support.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2642BE02642BE02642BE0000 /* pickle_support.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_PYTHON_SOURCE       "; }; };
		2643BA02643BA02643BA0000 /* errors.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 264379026437902643790000 /* errors.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_PYTHON_SOURCE       "; }; };
		264473026447302644730000 /* module.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 26443A026443A026443A0000 /* module.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_PYTHON_SOURCE       "; }; };
		26454E026454E026454E0000 /* builtin_converters.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2644F602644F602644F60000 /* builtin_converters.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_PYTHON_SOURCE       "; }; };
		26460D026460D026460D0000 /* arg_to_python_base.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2645B302645B302645B30000 /* arg_to_python_base.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_PYTHON_SOURCE       "; }; };
		2646AF02646AF02646AF0000 /* iterator.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 264674026467402646740000 /* iterator.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_PYTHON_SOURCE       "; }; };
		2647B802647B802647B80000 /* stl_iterator.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 264733026473302647330000 /* stl_iterator.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_PYTHON_SOURCE       "; }; };
		264872026487202648720000 /* object_protocol.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2647EB02647EB02647EB0000 /* object_protocol.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_PYTHON_SOURCE       "; }; };
		2648E502648E502648E50000 /* object_operators.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2648A602648A602648A60000 /* object_operators.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_PYTHON_SOURCE       "; }; };
		2649A302649A302649A30000 /* wrapper.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 264964026496402649640000 /* wrapper.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_PYTHON_SOURCE       "; }; };
		264A590264A590264A590000 /* import.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 264A1C0264A1C0264A1C0000 /* import.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_PYTHON_SOURCE       "; }; };
		264B110264B110264B110000 /* exec.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 264AD30264AD30264AD30000 /* exec.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_PYTHON_SOURCE       "; }; };
		264BE90264BE90264BE90000 /* function_doc_signature.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 264B8F0264B8F0264B8F0000 /* function_doc_signature.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_PYTHON_SOURCE       "; }; };
		2655A302655A302655A30000 /* numeric.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 263721026372102637210000 /* numeric.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_PYTHON_SOURCE       "; }; };
		265849026584902658490000 /* list.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 263885026388502638850000 /* list.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_PYTHON_SOURCE       "; }; };
		2658CA02658CA02658CA0000 /* long.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 26393F026393F026393F0000 /* long.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_PYTHON_SOURCE       "; }; };
		265948026594802659480000 /* dict.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2639F902639F902639F90000 /* dict.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_PYTHON_SOURCE       "; }; };
		2659E202659E202659E20000 /* tuple.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 263AB20263AB20263AB20000 /* tuple.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_PYTHON_SOURCE       "; }; };
		265A620265A620265A620000 /* str.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 263B700263B700263B700000 /* str.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_PYTHON_SOURCE       "; }; };
		265AD50265AD50265AD50000 /* slice.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 263C290263C290263C290000 /* slice.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_PYTHON_SOURCE       "; }; };
		265B960265B960265B960000 /* from_python.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 263CE20263CE20263CE20000 /* from_python.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_PYTHON_SOURCE       "; }; };
		265BDF0265BDF0265BDF0000 /* registry.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 263D9E0263D9E0263D9E0000 /* registry.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_PYTHON_SOURCE       "; }; };
		265C650265C650265C650000 /* type_id.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 263E5F0263E5F0263E5F0000 /* type_id.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_PYTHON_SOURCE       "; }; };
		265CE60265CE60265CE60000 /* enum.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 263F1C0263F1C0263F1C0000 /* enum.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_PYTHON_SOURCE       "; }; };
		265D690265D690265D690000 /* class.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 263FD20263FD20263FD20000 /* class.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_PYTHON_SOURCE       "; }; };
		265DEF0265DEF0265DEF0000 /* function.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 26408D026408D026408D0000 /* function.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_PYTHON_SOURCE       "; }; };
		265EB10265EB10265EB10000 /* inheritance.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 264148026414802641480000 /* inheritance.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_PYTHON_SOURCE       "; }; };
		265F350265F350265F350000 /* life_support.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 264203026420302642030000 /* life_support.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_PYTHON_SOURCE       "; }; };
		265FB90265FB90265FB90000 /* pickle_support.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2642BE02642BE02642BE0000 /* pickle_support.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_PYTHON_SOURCE       "; }; };
		26603F026603F026603F0000 /* errors.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 264379026437902643790000 /* errors.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_PYTHON_SOURCE       "; }; };
		2660C802660C802660C80000 /* module.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 26443A026443A026443A0000 /* module.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_PYTHON_SOURCE       "; }; };
		266126026612602661260000 /* builtin_converters.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2644F602644F602644F60000 /* builtin_converters.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_PYTHON_SOURCE       "; }; };
		2661AB02661AB02661AB0000 /* arg_to_python_base.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2645B302645B302645B30000 /* arg_to_python_base.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_PYTHON_SOURCE       "; }; };
		266222026622202662220000 /* iterator.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 264674026467402646740000 /* iterator.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_PYTHON_SOURCE       "; }; };
		2662E402662E402662E40000 /* stl_iterator.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 264733026473302647330000 /* stl_iterator.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_PYTHON_SOURCE       "; }; };
		266368026636802663680000 /* object_protocol.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2647EB02647EB02647EB0000 /* object_protocol.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_PYTHON_SOURCE       "; }; };
		2663B002663B002663B00000 /* object_operators.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2648A602648A602648A60000 /* object_operators.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_PYTHON_SOURCE       "; }; };
		266470026647002664700000 /* wrapper.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 264964026496402649640000 /* wrapper.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_PYTHON_SOURCE       "; }; };
		2664B702664B702664B70000 /* import.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 264A1C0264A1C0264A1C0000 /* import.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_PYTHON_SOURCE       "; }; };
		26654D026654D026654D0000 /* exec.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 264AD30264AD30264AD30000 /* exec.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_PYTHON_SOURCE       "; }; };
		2665D402665D402665D40000 /* function_doc_signature.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 264B8F0264B8F0264B8F0000 /* function_doc_signature.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_PYTHON_SOURCE       "; }; };
		266DE80266DE80266DE80000 /* numeric.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 263721026372102637210000 /* numeric.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_PYTHON_SOURCE -DBOOST_PYTHON_STATIC_LIB       "; }; };
		267227026722702672270000 /* list.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 263885026388502638850000 /* list.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_PYTHON_SOURCE -DBOOST_PYTHON_STATIC_LIB       "; }; };
		2672B102672B102672B10000 /* long.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 26393F026393F026393F0000 /* long.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_PYTHON_SOURCE -DBOOST_PYTHON_STATIC_LIB       "; }; };
		26733B026733B026733B0000 /* dict.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2639F902639F902639F90000 /* dict.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_PYTHON_SOURCE -DBOOST_PYTHON_STATIC_LIB       "; }; };
		2673C702673C702673C70000 /* tuple.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 263AB20263AB20263AB20000 /* tuple.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_PYTHON_SOURCE -DBOOST_PYTHON_STATIC_LIB       "; }; };
		26744A026744A026744A0000 /* str.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 263B700263B700263B700000 /* str.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_PYTHON_SOURCE -DBOOST_PYTHON_STATIC_LIB       "; }; };
		2674D302674D302674D30000 /* slice.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 263C290263C290263C290000 /* slice.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_PYTHON_SOURCE -DBOOST_PYTHON_STATIC_LIB       "; }; };
		26755C026755C026755C0000 /* from_python.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 263CE20263CE20263CE20000 /* from_python.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_PYTHON_SOURCE -DBOOST_PYTHON_STATIC_LIB       "; }; };
		267622026762202676220000 /* registry.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 263D9E0263D9E0263D9E0000 /* registry.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_PYTHON_SOURCE -DBOOST_PYTHON_STATIC_LIB       "; }; };
		267686026768602676860000 /* type_id.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 263E5F0263E5F0263E5F0000 /* type_id.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_PYTHON_SOURCE -DBOOST_PYTHON_STATIC_LIB       "; }; };
		267709026770902677090000 /* enum.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 263F1C0263F1C0263F1C0000 /* enum.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_PYTHON_SOURCE -DBOOST_PYTHON_STATIC_LIB       "; }; };
		26777B026777B026777B0000 /* class.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 263FD20263FD20263FD20000 /* class.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_PYTHON_SOURCE -DBOOST_PYTHON_STATIC_LIB       "; }; };
		267817026781702678170000 /* function.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 26408D026408D026408D0000 /* function.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_PYTHON_SOURCE -DBOOST_PYTHON_STATIC_LIB       "; }; };
		26788B026788B026788B0000 /* inheritance.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 264148026414802641480000 /* inheritance.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_PYTHON_SOURCE -DBOOST_PYTHON_STATIC_LIB       "; }; };
		267912026791202679120000 /* life_support.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 264203026420302642030000 /* life_support.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_PYTHON_SOURCE -DBOOST_PYTHON_STATIC_LIB       "; }; };
		2679AF02679AF02679AF0000 /* pickle_support.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2642BE02642BE02642BE0000 /* pickle_support.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_PYTHON_SOURCE -DBOOST_PYTHON_STATIC_LIB       "; }; };
		267A640267A640267A640000 /* errors.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 264379026437902643790000 /* errors.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_PYTHON_SOURCE -DBOOST_PYTHON_STATIC_LIB       "; }; };
		267AED0267AED0267AED0000 /* module.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 26443A026443A026443A0000 /* module.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_PYTHON_SOURCE -DBOOST_PYTHON_STATIC_LIB       "; }; };
		267B4F0267B4F0267B4F0000 /* builtin_converters.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2644F602644F602644F60000 /* builtin_converters.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_PYTHON_SOURCE -DBOOST_PYTHON_STATIC_LIB       "; }; };
		267BDA0267BDA0267BDA0000 /* arg_to_python_base.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2645B302645B302645B30000 /* arg_to_python_base.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_PYTHON_SOURCE -DBOOST_PYTHON_STATIC_LIB       "; }; };
		267C500267C500267C500000 /* iterator.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 264674026467402646740000 /* iterator.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_PYTHON_SOURCE -DBOOST_PYTHON_STATIC_LIB       "; }; };
		267CD70267CD70267CD70000 /* stl_iterator.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 264733026473302647330000 /* stl_iterator.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_PYTHON_SOURCE -DBOOST_PYTHON_STATIC_LIB       "; }; };
		267D5C0267D5C0267D5C0000 /* object_protocol.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2647EB02647EB02647EB0000 /* object_protocol.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_PYTHON_SOURCE -DBOOST_PYTHON_STATIC_LIB       "; }; };
		267DFB0267DFB0267DFB0000 /* object_operators.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2648A602648A602648A60000 /* object_operators.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_PYTHON_SOURCE -DBOOST_PYTHON_STATIC_LIB       "; }; };
		267E6F0267E6F0267E6F0000 /* wrapper.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 264964026496402649640000 /* wrapper.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_PYTHON_SOURCE -DBOOST_PYTHON_STATIC_LIB       "; }; };
		267EF60267EF60267EF60000 /* import.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 264A1C0264A1C0264A1C0000 /* import.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_PYTHON_SOURCE -DBOOST_PYTHON_STATIC_LIB       "; }; };
		267F790267F790267F790000 /* exec.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 264AD30264AD30264AD30000 /* exec.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_PYTHON_SOURCE -DBOOST_PYTHON_STATIC_LIB       "; }; };
		268018026801802680180000 /* function_doc_signature.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 264B8F0264B8F0264B8F0000 /* function_doc_signature.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_PYTHON_SOURCE -DBOOST_PYTHON_STATIC_LIB       "; }; };
		268A4F0268A4F0268A4F0000 /* numeric.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 263721026372102637210000 /* numeric.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_PYTHON_SOURCE -DBOOST_PYTHON_STATIC_LIB       "; }; };
		268B6F0268B6F0268B6F0000 /* list.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 263885026388502638850000 /* list.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_PYTHON_SOURCE -DBOOST_PYTHON_STATIC_LIB       "; }; };
		268BF30268BF30268BF30000 /* long.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 26393F026393F026393F0000 /* long.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_PYTHON_SOURCE -DBOOST_PYTHON_STATIC_LIB       "; }; };
		268C690268C690268C690000 /* dict.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2639F902639F902639F90000 /* dict.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_PYTHON_SOURCE -DBOOST_PYTHON_STATIC_LIB       "; }; };
		268CFF0268CFF0268CFF0000 /* tuple.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 263AB20263AB20263AB20000 /* tuple.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_PYTHON_SOURCE -DBOOST_PYTHON_STATIC_LIB       "; }; };
		268D740268D740268D740000 /* str.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 263B700263B700263B700000 /* str.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_PYTHON_SOURCE -DBOOST_PYTHON_STATIC_LIB       "; }; };
		268DF80268DF80268DF80000 /* slice.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 263C290263C290263C290000 /* slice.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_PYTHON_SOURCE -DBOOST_PYTHON_STATIC_LIB       "; }; };
		268EBC0268EBC0268EBC0000 /* from_python.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 263CE20263CE20263CE20000 /* from_python.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_PYTHON_SOURCE -DBOOST_PYTHON_STATIC_LIB       "; }; };
		268F080268F080268F080000 /* registry.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 263D9E0263D9E0263D9E0000 /* registry.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_PYTHON_SOURCE -DBOOST_PYTHON_STATIC_LIB       "; }; };
		268FD20268FD20268FD20000 /* type_id.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 263E5F0263E5F0263E5F0000 /* type_id.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_PYTHON_SOURCE -DBOOST_PYTHON_STATIC_LIB       "; }; };
		26901D026901D026901D0000 /* enum.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 263F1C0263F1C0263F1C0000 /* enum.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_PYTHON_SOURCE -DBOOST_PYTHON_STATIC_LIB       "; }; };
		2690DD02690DD02690DD0000 /* class.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 263FD20263FD20263FD20000 /* class.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_PYTHON_SOURCE -DBOOST_PYTHON_STATIC_LIB       "; }; };
		269129026912902691290000 /* function.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 26408D026408D026408D0000 /* function.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_PYTHON_SOURCE -DBOOST_PYTHON_STATIC_LIB       "; }; };
		2691ED02691ED02691ED0000 /* inheritance.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 264148026414802641480000 /* inheritance.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_PYTHON_SOURCE -DBOOST_PYTHON_STATIC_LIB       "; }; };
		269239026923902692390000 /* life_support.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 264203026420302642030000 /* life_support.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_PYTHON_SOURCE -DBOOST_PYTHON_STATIC_LIB       "; }; };
		2692FD02692FD02692FD0000 /* pickle_support.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2642BE02642BE02642BE0000 /* pickle_support.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_PYTHON_SOURCE -DBOOST_PYTHON_STATIC_LIB       "; }; };
		269385026938502693850000 /* errors.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 264379026437902643790000 /* errors.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_PYTHON_SOURCE -DBOOST_PYTHON_STATIC_LIB       "; }; };
		2693D202693D202693D20000 /* module.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 26443A026443A026443A0000 /* module.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_PYTHON_SOURCE -DBOOST_PYTHON_STATIC_LIB       "; }; };
		269468026946802694680000 /* builtin_converters.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2644F602644F602644F60000 /* builtin_converters.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_PYTHON_SOURCE -DBOOST_PYTHON_STATIC_LIB       "; }; };
		2694F402694F402694F40000 /* arg_to_python_base.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2645B302645B302645B30000 /* arg_to_python_base.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_PYTHON_SOURCE -DBOOST_PYTHON_STATIC_LIB       "; }; };
		2695A402695A402695A40000 /* iterator.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 264674026467402646740000 /* iterator.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_PYTHON_SOURCE -DBOOST_PYTHON_STATIC_LIB       "; }; };
		2695F002695F002695F00000 /* stl_iterator.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 264733026473302647330000 /* stl_iterator.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_PYTHON_SOURCE -DBOOST_PYTHON_STATIC_LIB       "; }; };
		2696B402696B402696B40000 /* object_protocol.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2647EB02647EB02647EB0000 /* object_protocol.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_PYTHON_SOURCE -DBOOST_PYTHON_STATIC_LIB       "; }; };
		2696FD02696FD02696FD0000 /* object_operators.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2648A602648A602648A60000 /* object_operators.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_PYTHON_SOURCE -DBOOST_PYTHON_STATIC_LIB       "; }; };
		269783026978302697830000 /* wrapper.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 264964026496402649640000 /* wrapper.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_PYTHON_SOURCE -DBOOST_PYTHON_STATIC_LIB       "; }; };
		269807026980702698070000 /* import.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 264A1C0264A1C0264A1C0000 /* import.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_PYTHON_SOURCE -DBOOST_PYTHON_STATIC_LIB       "; }; };
		26988B026988B026988B0000 /* exec.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 264AD30264AD30264AD30000 /* exec.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_PYTHON_SOURCE -DBOOST_PYTHON_STATIC_LIB       "; }; };
		269925026992502699250000 /* function_doc_signature.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 264B8F0264B8F0264B8F0000 /* function_doc_signature.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_PYTHON_SOURCE -DBOOST_PYTHON_STATIC_LIB       "; }; };
		26B428026B428026B4280000 /* main.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 26B334026B334026B3340000 /* main.cpp */; settings = {COMPILER_FLAGS = "        "; }; };
		26CF1E026CF1E026CF1E0000 /* error_code.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 26CEEF026CEEF026CEEF0000 /* error_code.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_SYSTEM_DYN_LINK=1     "; }; };
		26DB42026DB42026DB420000 /* error_code.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 26CEEF026CEEF026CEEF0000 /* error_code.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_SYSTEM_DYN_LINK=1     "; }; };
		26E6DA026E6DA026E6DA0000 /* error_code.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 26CEEF026CEEF026CEEF0000 /* error_code.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_SYSTEM_STATIC_LINK=1     "; }; };
		26F1A7026F1A7026F1A70000 /* error_code.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 26CEEF026CEEF026CEEF0000 /* error_code.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_SYSTEM_STATIC_LINK=1     "; }; };
		27518A027518A027518A0000 /* execution_monitor.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2750C602750C602750C60000 /* execution_monitor.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_TEST_DYN_LINK=1     "; }; };
		275243027524302752430000 /* cpp_main.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 275208027520802752080000 /* cpp_main.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_TEST_DYN_LINK=1     "; }; };
		2752FB02752FB02752FB0000 /* debug.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2752BD02752BD02752BD0000 /* debug.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_TEST_DYN_LINK=1     "; }; };
		275EDB0275EDB0275EDB0000 /* execution_monitor.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2750C602750C602750C60000 /* execution_monitor.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_TEST_DYN_LINK=1     "; }; };
		275F740275F740275F740000 /* cpp_main.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 275208027520802752080000 /* cpp_main.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_TEST_DYN_LINK=1     "; }; };
		275FE10275FE10275FE10000 /* debug.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2752BD02752BD02752BD0000 /* debug.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_TEST_DYN_LINK=1     "; }; };
		276C030276C030276C030000 /* execution_monitor.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2750C602750C602750C60000 /* execution_monitor.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		276C4B0276C4B0276C4B0000 /* cpp_main.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 275208027520802752080000 /* cpp_main.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		276CCC0276CCC0276CCC0000 /* debug.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2752BD02752BD02752BD0000 /* debug.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		277754027775402777540000 /* execution_monitor.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2750C602750C602750C60000 /* execution_monitor.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		277829027782902778290000 /* cpp_main.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 275208027520802752080000 /* cpp_main.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		2778A802778A802778A80000 /* debug.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2752BD02752BD02752BD0000 /* debug.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		278B9C0278B9C0278B9C0000 /* compiler_log_formatter.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 278AEC0278AEC0278AEC0000 /* compiler_log_formatter.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		278C2F0278C2F0278C2F0000 /* debug.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2752BD02752BD02752BD0000 /* debug.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		278CB10278CB10278CB10000 /* execution_monitor.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2750C602750C602750C60000 /* execution_monitor.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		278D5C0278D5C0278D5C0000 /* framework.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 278D1F0278D1F0278D1F0000 /* framework.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		278E240278E240278E240000 /* plain_report_formatter.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 278DD50278DD50278DD50000 /* plain_report_formatter.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		278ED10278ED10278ED10000 /* progress_monitor.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 278E8E0278E8E0278E8E0000 /* progress_monitor.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		278F8E0278F8E0278F8E0000 /* results_collector.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 278F4D0278F4D0278F4D0000 /* results_collector.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		27904B027904B027904B0000 /* results_reporter.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 27900A027900A027900A0000 /* results_reporter.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		279107027910702791070000 /* test_main.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2790C602790C602790C60000 /* test_main.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		2791C002791C002791C00000 /* test_tools.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 27917F027917F027917F0000 /* test_tools.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		279278027927802792780000 /* unit_test_log.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 279239027923902792390000 /* unit_test_log.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		27937B027937B027937B0000 /* unit_test_main.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2792F202792F202792F20000 /* unit_test_main.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		2793EC02793EC02793EC0000 /* unit_test_monitor.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2793AD02793AD02793AD0000 /* unit_test_monitor.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		2794B402794B402794B40000 /* unit_test_parameters.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 279469027946902794690000 /* unit_test_parameters.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		2795A902795A902795A90000 /* unit_test_suite.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 27951E027951E027951E0000 /* unit_test_suite.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		27961A027961A027961A0000 /* xml_log_formatter.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2795DB02795DB02795DB0000 /* xml_log_formatter.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		2796E602796E602796E60000 /* xml_report_formatter.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 279697027969702796970000 /* xml_report_formatter.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		27A16E027A16E027A16E0000 /* compiler_log_formatter.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 278AEC0278AEC0278AEC0000 /* compiler_log_formatter.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		27A236027A236027A2360000 /* debug.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2752BD02752BD02752BD0000 /* debug.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		27A2FF027A2FF027A2FF0000 /* execution_monitor.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2750C602750C602750C60000 /* execution_monitor.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		27A33E027A33E027A33E0000 /* framework.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 278D1F0278D1F0278D1F0000 /* framework.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		27A3CA027A3CA027A3CA0000 /* plain_report_formatter.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 278DD50278DD50278DD50000 /* plain_report_formatter.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		27A454027A454027A4540000 /* progress_monitor.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 278E8E0278E8E0278E8E0000 /* progress_monitor.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		27A4DA027A4DA027A4DA0000 /* results_collector.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 278F4D0278F4D0278F4D0000 /* results_collector.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		27A560027A560027A5600000 /* results_reporter.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 27900A027900A027900A0000 /* results_reporter.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		27A5E7027A5E7027A5E70000 /* test_main.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2790C602790C602790C60000 /* test_main.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		27A664027A664027A6640000 /* test_tools.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 27917F027917F027917F0000 /* test_tools.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		27A6EE027A6EE027A6EE0000 /* unit_test_log.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 279239027923902792390000 /* unit_test_log.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		27A7AB027A7AB027A7AB0000 /* unit_test_main.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2792F202792F202792F20000 /* unit_test_main.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		27A82F027A82F027A82F0000 /* unit_test_monitor.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2793AD02793AD02793AD0000 /* unit_test_monitor.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		27A876027A876027A8760000 /* unit_test_parameters.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 279469027946902794690000 /* unit_test_parameters.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		27A910027A910027A9100000 /* unit_test_suite.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 27951E027951E027951E0000 /* unit_test_suite.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		27A980027A980027A9800000 /* xml_log_formatter.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2795DB02795DB02795DB0000 /* xml_log_formatter.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		27AA08027AA08027AA080000 /* xml_report_formatter.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 279697027969702796970000 /* xml_report_formatter.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		27BB62027BB62027BB620000 /* compiler_log_formatter.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 278AEC0278AEC0278AEC0000 /* compiler_log_formatter.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_TEST_DYN_LINK=1     "; }; };
		27BD7C027BD7C027BD7C0000 /* debug.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2752BD02752BD02752BD0000 /* debug.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_TEST_DYN_LINK=1     "; }; };
		27BDFF027BDFF027BDFF0000 /* exception_safety.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 27BDB0027BDB0027BDB00000 /* exception_safety.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_TEST_DYN_LINK=1     "; }; };
		27BEC2027BEC2027BEC20000 /* execution_monitor.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2750C602750C602750C60000 /* execution_monitor.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_TEST_DYN_LINK=1     "; }; };
		27BF1F027BF1F027BF1F0000 /* framework.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 278D1F0278D1F0278D1F0000 /* framework.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_TEST_DYN_LINK=1     "; }; };
		27BFBE027BFBE027BFBE0000 /* interaction_based.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 27BF80027BF80027BF800000 /* interaction_based.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_TEST_DYN_LINK=1     "; }; };
		27C08A027C08A027C08A0000 /* logged_expectations.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 27C03B027C03B027C03B0000 /* logged_expectations.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_TEST_DYN_LINK=1     "; }; };
		27C14F027C14F027C14F0000 /* plain_report_formatter.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 278DD50278DD50278DD50000 /* plain_report_formatter.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_TEST_DYN_LINK=1     "; }; };
		27C1B0027C1B0027C1B00000 /* progress_monitor.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 278E8E0278E8E0278E8E0000 /* progress_monitor.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_TEST_DYN_LINK=1     "; }; };
		27C265027C265027C2650000 /* results_collector.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 278F4D0278F4D0278F4D0000 /* results_collector.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_TEST_DYN_LINK=1     "; }; };
		27C2C3027C2C3027C2C30000 /* results_reporter.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 27900A027900A027900A0000 /* results_reporter.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_TEST_DYN_LINK=1     "; }; };
		27C343027C343027C3430000 /* test_tools.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 27917F027917F027917F0000 /* test_tools.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_TEST_DYN_LINK=1     "; }; };
		27C3F6027C3F6027C3F60000 /* unit_test_log.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 279239027923902792390000 /* unit_test_log.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_TEST_DYN_LINK=1     "; }; };
		27C43B027C43B027C43B0000 /* unit_test_main.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2792F202792F202792F20000 /* unit_test_main.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_TEST_DYN_LINK=1     "; }; };
		27C506027C506027C5060000 /* unit_test_monitor.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2793AD02793AD02793AD0000 /* unit_test_monitor.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_TEST_DYN_LINK=1     "; }; };
		27C564027C564027C5640000 /* unit_test_parameters.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 279469027946902794690000 /* unit_test_parameters.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_TEST_DYN_LINK=1     "; }; };
		27C5E9027C5E9027C5E90000 /* unit_test_suite.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 27951E027951E027951E0000 /* unit_test_suite.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_TEST_DYN_LINK=1     "; }; };
		27C6A8027C6A8027C6A80000 /* xml_log_formatter.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2795DB02795DB02795DB0000 /* xml_log_formatter.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_TEST_DYN_LINK=1     "; }; };
		27C706027C706027C7060000 /* xml_report_formatter.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 279697027969702796970000 /* xml_report_formatter.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_TEST_DYN_LINK=1     "; }; };
		27D2DA027D2DA027D2DA0000 /* compiler_log_formatter.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 278AEC0278AEC0278AEC0000 /* compiler_log_formatter.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_TEST_DYN_LINK=1     "; }; };
		27D35F027D35F027D35F0000 /* debug.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2752BD02752BD02752BD0000 /* debug.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_TEST_DYN_LINK=1     "; }; };
		27D422027D422027D4220000 /* exception_safety.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 27BDB0027BDB0027BDB00000 /* exception_safety.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_TEST_DYN_LINK=1     "; }; };
		27D468027D468027D4680000 /* execution_monitor.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2750C602750C602750C60000 /* execution_monitor.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_TEST_DYN_LINK=1     "; }; };
		27D502027D502027D5020000 /* framework.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 278D1F0278D1F0278D1F0000 /* framework.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_TEST_DYN_LINK=1     "; }; };
		27D5B3027D5B3027D5B30000 /* interaction_based.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 27BF80027BF80027BF800000 /* interaction_based.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_TEST_DYN_LINK=1     "; }; };
		27D63A027D63A027D63A0000 /* logged_expectations.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 27C03B027C03B027C03B0000 /* logged_expectations.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_TEST_DYN_LINK=1     "; }; };
		27D681027D681027D6810000 /* plain_report_formatter.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 278DD50278DD50278DD50000 /* plain_report_formatter.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_TEST_DYN_LINK=1     "; }; };
		27D706027D706027D7060000 /* progress_monitor.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 278E8E0278E8E0278E8E0000 /* progress_monitor.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_TEST_DYN_LINK=1     "; }; };
		27D78E027D78E027D78E0000 /* results_collector.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 278F4D0278F4D0278F4D0000 /* results_collector.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_TEST_DYN_LINK=1     "; }; };
		27D813027D813027D8130000 /* results_reporter.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 27900A027900A027900A0000 /* results_reporter.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_TEST_DYN_LINK=1     "; }; };
		27D897027D897027D8970000 /* test_tools.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 27917F027917F027917F0000 /* test_tools.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_TEST_DYN_LINK=1     "; }; };
		27D91C027D91C027D91C0000 /* unit_test_log.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 279239027923902792390000 /* unit_test_log.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_TEST_DYN_LINK=1     "; }; };
		27D9DB027D9DB027D9DB0000 /* unit_test_main.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2792F202792F202792F20000 /* unit_test_main.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_TEST_DYN_LINK=1     "; }; };
		27DA24027DA24027DA240000 /* unit_test_monitor.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2793AD02793AD02793AD0000 /* unit_test_monitor.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_TEST_DYN_LINK=1     "; }; };
		27DAA9027DAA9027DAA90000 /* unit_test_parameters.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 279469027946902794690000 /* unit_test_parameters.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_TEST_DYN_LINK=1     "; }; };
		27DB32027DB32027DB320000 /* unit_test_suite.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 27951E027951E027951E0000 /* unit_test_suite.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_TEST_DYN_LINK=1     "; }; };
		27DBBA027DBBA027DBBA0000 /* xml_log_formatter.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2795DB02795DB02795DB0000 /* xml_log_formatter.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_TEST_DYN_LINK=1     "; }; };
		27DC54027DC54027DC540000 /* xml_report_formatter.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 279697027969702796970000 /* xml_report_formatter.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_TEST_DYN_LINK=1     "; }; };
		27E830027E830027E8300000 /* compiler_log_formatter.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 278AEC0278AEC0278AEC0000 /* compiler_log_formatter.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		27E8E4027E8E4027E8E40000 /* debug.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2752BD02752BD02752BD0000 /* debug.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		27E92B027E92B027E92B0000 /* exception_safety.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 27BDB0027BDB0027BDB00000 /* exception_safety.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		27E9AF027E9AF027E9AF0000 /* execution_monitor.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2750C602750C602750C60000 /* execution_monitor.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		27EA3A027EA3A027EA3A0000 /* framework.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 278D1F0278D1F0278D1F0000 /* framework.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		27EAC1027EAC1027EAC10000 /* interaction_based.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 27BF80027BF80027BF800000 /* interaction_based.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		27EB59027EB59027EB590000 /* logged_expectations.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 27C03B027C03B027C03B0000 /* logged_expectations.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		27EC0B027EC0B027EC0B0000 /* plain_report_formatter.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 278DD50278DD50278DD50000 /* plain_report_formatter.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		27EC55027EC55027EC550000 /* progress_monitor.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 278E8E0278E8E0278E8E0000 /* progress_monitor.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		27ECDB027ECDB027ECDB0000 /* results_collector.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 278F4D0278F4D0278F4D0000 /* results_collector.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		27ED5F027ED5F027ED5F0000 /* results_reporter.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 27900A027900A027900A0000 /* results_reporter.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		27EE23027EE23027EE230000 /* test_tools.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 27917F027917F027917F0000 /* test_tools.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		27EEA5027EEA5027EEA50000 /* unit_test_log.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 279239027923902792390000 /* unit_test_log.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		27EEEB027EEEB027EEEB0000 /* unit_test_main.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2792F202792F202792F20000 /* unit_test_main.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		27EF83027EF83027EF830000 /* unit_test_monitor.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2793AD02793AD02793AD0000 /* unit_test_monitor.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		27F035027F035027F0350000 /* unit_test_parameters.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 279469027946902794690000 /* unit_test_parameters.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		27F081027F081027F0810000 /* unit_test_suite.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 27951E027951E027951E0000 /* unit_test_suite.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		27F108027F108027F1080000 /* xml_log_formatter.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2795DB02795DB02795DB0000 /* xml_log_formatter.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		27F18C027F18C027F18C0000 /* xml_report_formatter.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 279697027969702796970000 /* xml_report_formatter.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		27FBEA027FBEA027FBEA0000 /* compiler_log_formatter.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 278AEC0278AEC0278AEC0000 /* compiler_log_formatter.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		2800D902800D902800D90000 /* debug.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2752BD02752BD02752BD0000 /* debug.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		280163028016302801630000 /* exception_safety.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 27BDB0027BDB0027BDB00000 /* exception_safety.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		2801EA02801EA02801EA0000 /* execution_monitor.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2750C602750C602750C60000 /* execution_monitor.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		28026D028026D028026D0000 /* framework.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 278D1F0278D1F0278D1F0000 /* framework.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		2802EE02802EE02802EE0000 /* interaction_based.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 27BF80027BF80027BF800000 /* interaction_based.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		280374028037402803740000 /* logged_expectations.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 27C03B027C03B027C03B0000 /* logged_expectations.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		2803FB02803FB02803FB0000 /* plain_report_formatter.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 278DD50278DD50278DD50000 /* plain_report_formatter.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		280481028048102804810000 /* progress_monitor.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 278E8E0278E8E0278E8E0000 /* progress_monitor.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		280546028054602805460000 /* results_collector.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 278F4D0278F4D0278F4D0000 /* results_collector.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		28058E028058E028058E0000 /* results_reporter.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 27900A027900A027900A0000 /* results_reporter.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		280610028061002806100000 /* test_tools.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 27917F027917F027917F0000 /* test_tools.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		280693028069302806930000 /* unit_test_log.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 279239027923902792390000 /* unit_test_log.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		280710028071002807100000 /* unit_test_main.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2792F202792F202792F20000 /* unit_test_main.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		2807D802807D802807D80000 /* unit_test_monitor.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2793AD02793AD02793AD0000 /* unit_test_monitor.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		28081E028081E028081E0000 /* unit_test_parameters.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 279469027946902794690000 /* unit_test_parameters.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		2808A702808A702808A70000 /* unit_test_suite.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 27951E027951E027951E0000 /* unit_test_suite.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		280931028093102809310000 /* xml_log_formatter.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2795DB02795DB02795DB0000 /* xml_log_formatter.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		2809B602809B602809B60000 /* xml_report_formatter.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 279697027969702796970000 /* xml_report_formatter.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		282CE60282CE60282CE60000 /* operations.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 282BFD0282BFD0282BFD0000 /* operations.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_FILESYSTEM_DYN_LINK=1     "; }; };
		282D920282D920282D920000 /* path.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 282D510282D510282D510000 /* path.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_FILESYSTEM_DYN_LINK=1     "; }; };
		282E5D0282E5D0282E5D0000 /* portability.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 282E070282E070282E070000 /* portability.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_FILESYSTEM_DYN_LINK=1     "; }; };
		282F090282F090282F090000 /* utf8_codecvt_facet.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 282EC30282EC30282EC30000 /* utf8_codecvt_facet.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_FILESYSTEM_DYN_LINK=1     "; }; };
		283AE50283AE50283AE50000 /* operations.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 282BFD0282BFD0282BFD0000 /* operations.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_FILESYSTEM_DYN_LINK=1     "; }; };
		283B6E0283B6E0283B6E0000 /* path.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 282D510282D510282D510000 /* path.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_FILESYSTEM_DYN_LINK=1     "; }; };
		283BFD0283BFD0283BFD0000 /* portability.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 282E070282E070282E070000 /* portability.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_FILESYSTEM_DYN_LINK=1     "; }; };
		283C890283C890283C890000 /* utf8_codecvt_facet.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 282EC30282EC30282EC30000 /* utf8_codecvt_facet.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_FILESYSTEM_DYN_LINK=1     "; }; };
		284863028486302848630000 /* operations.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 282BFD0282BFD0282BFD0000 /* operations.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_FILESYSTEM_STATIC_LINK=1     "; }; };
		2848D402848D402848D40000 /* path.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 282D510282D510282D510000 /* path.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_FILESYSTEM_STATIC_LINK=1     "; }; };
		284959028495902849590000 /* portability.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 282E070282E070282E070000 /* portability.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_FILESYSTEM_STATIC_LINK=1     "; }; };
		2849E202849E202849E20000 /* utf8_codecvt_facet.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 282EC30282EC30282EC30000 /* utf8_codecvt_facet.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_FILESYSTEM_STATIC_LINK=1     "; }; };
		2854D402854D402854D40000 /* operations.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 282BFD0282BFD0282BFD0000 /* operations.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_FILESYSTEM_STATIC_LINK=1     "; }; };
		28554A028554A028554A0000 /* path.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 282D510282D510282D510000 /* path.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_FILESYSTEM_STATIC_LINK=1     "; }; };
		28560B028560B028560B0000 /* portability.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 282E070282E070282E070000 /* portability.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_FILESYSTEM_STATIC_LINK=1     "; }; };
		285654028565402856540000 /* utf8_codecvt_facet.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 282EC30282EC30282EC30000 /* utf8_codecvt_facet.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_FILESYSTEM_STATIC_LINK=1     "; }; };
		2889A702889A702889A70000 /* broadcast.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 28869A028869A028869A0000 /* broadcast.cpp */; settings = {COMPILER_FLAGS = "-D_REENTRANT  -O3 -DNDEBUG -DBOOST_MPI_DYN_LINK=1     "; }; };
		288A610288A610288A610000 /* communicator.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 288A260288A260288A260000 /* communicator.cpp */; settings = {COMPILER_FLAGS = "-D_REENTRANT  -O3 -DNDEBUG -DBOOST_MPI_DYN_LINK=1     "; }; };
		288B1C0288B1C0288B1C0000 /* computation_tree.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 288ADD0288ADD0288ADD0000 /* computation_tree.cpp */; settings = {COMPILER_FLAGS = "-D_REENTRANT  -O3 -DNDEBUG -DBOOST_MPI_DYN_LINK=1     "; }; };
		288BD90288BD90288BD90000 /* content_oarchive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 288B9A0288B9A0288B9A0000 /* content_oarchive.cpp */; settings = {COMPILER_FLAGS = "-D_REENTRANT  -O3 -DNDEBUG -DBOOST_MPI_DYN_LINK=1     "; }; };
		288C920288C920288C920000 /* environment.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 288C560288C560288C560000 /* environment.cpp */; settings = {COMPILER_FLAGS = "-D_REENTRANT  -O3 -DNDEBUG -DBOOST_MPI_DYN_LINK=1     "; }; };
		288D500288D500288D500000 /* exception.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 288D140288D140288D140000 /* exception.cpp */; settings = {COMPILER_FLAGS = "-D_REENTRANT  -O3 -DNDEBUG -DBOOST_MPI_DYN_LINK=1     "; }; };
		288E0E0288E0E0288E0E0000 /* graph_communicator.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 288DCF0288DCF0288DCF0000 /* graph_communicator.cpp */; settings = {COMPILER_FLAGS = "-D_REENTRANT  -O3 -DNDEBUG -DBOOST_MPI_DYN_LINK=1     "; }; };
		288EC70288EC70288EC70000 /* group.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 288E8B0288E8B0288E8B0000 /* group.cpp */; settings = {COMPILER_FLAGS = "-D_REENTRANT  -O3 -DNDEBUG -DBOOST_MPI_DYN_LINK=1     "; }; };
		288F880288F880288F880000 /* intercommunicator.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 288F460288F460288F460000 /* intercommunicator.cpp */; settings = {COMPILER_FLAGS = "-D_REENTRANT  -O3 -DNDEBUG -DBOOST_MPI_DYN_LINK=1     "; }; };
		289048028904802890480000 /* mpi_datatype_cache.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 28900B028900B028900B0000 /* mpi_datatype_cache.cpp */; settings = {COMPILER_FLAGS = "-D_REENTRANT  -O3 -DNDEBUG -DBOOST_MPI_DYN_LINK=1     "; }; };
		289108028910802891080000 /* mpi_datatype_oarchive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2890C902890C902890C90000 /* mpi_datatype_oarchive.cpp */; settings = {COMPILER_FLAGS = "-D_REENTRANT  -O3 -DNDEBUG -DBOOST_MPI_DYN_LINK=1     "; }; };
		28920D028920D028920D0000 /* packed_iarchive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 289186028918602891860000 /* packed_iarchive.cpp */; settings = {COMPILER_FLAGS = "-D_REENTRANT  -O3 -DNDEBUG -DBOOST_MPI_DYN_LINK=1     "; }; };
		2892C902892C902892C90000 /* packed_oarchive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 289242028924202892420000 /* packed_oarchive.cpp */; settings = {COMPILER_FLAGS = "-D_REENTRANT  -O3 -DNDEBUG -DBOOST_MPI_DYN_LINK=1     "; }; };
		28933D028933D028933D0000 /* packed_skeleton_iarchive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2892FE02892FE02892FE0000 /* packed_skeleton_iarchive.cpp */; settings = {COMPILER_FLAGS = "-D_REENTRANT  -O3 -DNDEBUG -DBOOST_MPI_DYN_LINK=1     "; }; };
		2893FA02893FA02893FA0000 /* packed_skeleton_oarchive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2893BB02893BB02893BB0000 /* packed_skeleton_oarchive.cpp */; settings = {COMPILER_FLAGS = "-D_REENTRANT  -O3 -DNDEBUG -DBOOST_MPI_DYN_LINK=1     "; }; };
		2894B402894B402894B40000 /* point_to_point.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 289477028947702894770000 /* point_to_point.cpp */; settings = {COMPILER_FLAGS = "-D_REENTRANT  -O3 -DNDEBUG -DBOOST_MPI_DYN_LINK=1     "; }; };
		289571028957102895710000 /* request.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 28952F028952F028952F0000 /* request.cpp */; settings = {COMPILER_FLAGS = "-D_REENTRANT  -O3 -DNDEBUG -DBOOST_MPI_DYN_LINK=1     "; }; };
		289632028963202896320000 /* text_skeleton_oarchive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2895F802895F802895F80000 /* text_skeleton_oarchive.cpp */; settings = {COMPILER_FLAGS = "-D_REENTRANT  -O3 -DNDEBUG -DBOOST_MPI_DYN_LINK=1     "; }; };
		28A015028A015028A0150000 /* broadcast.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 28869A028869A028869A0000 /* broadcast.cpp */; settings = {COMPILER_FLAGS = "-D_REENTRANT  -g -DBOOST_MPI_DYN_LINK=1     "; }; };
		28A2B5028A2B5028A2B50000 /* communicator.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 288A260288A260288A260000 /* communicator.cpp */; settings = {COMPILER_FLAGS = "-D_REENTRANT  -g -DBOOST_MPI_DYN_LINK=1     "; }; };
		28A34E028A34E028A34E0000 /* computation_tree.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 288ADD0288ADD0288ADD0000 /* computation_tree.cpp */; settings = {COMPILER_FLAGS = "-D_REENTRANT  -g -DBOOST_MPI_DYN_LINK=1     "; }; };
		28A3C5028A3C5028A3C50000 /* content_oarchive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 288B9A0288B9A0288B9A0000 /* content_oarchive.cpp */; settings = {COMPILER_FLAGS = "-D_REENTRANT  -g -DBOOST_MPI_DYN_LINK=1     "; }; };
		28A450028A450028A4500000 /* environment.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 288C560288C560288C560000 /* environment.cpp */; settings = {COMPILER_FLAGS = "-D_REENTRANT  -g -DBOOST_MPI_DYN_LINK=1     "; }; };
		28A4D3028A4D3028A4D30000 /* exception.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 288D140288D140288D140000 /* exception.cpp */; settings = {COMPILER_FLAGS = "-D_REENTRANT  -g -DBOOST_MPI_DYN_LINK=1     "; }; };
		28A599028A599028A5990000 /* graph_communicator.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 288DCF0288DCF0288DCF0000 /* graph_communicator.cpp */; settings = {COMPILER_FLAGS = "-D_REENTRANT  -g -DBOOST_MPI_DYN_LINK=1     "; }; };
		28A5DF028A5DF028A5DF0000 /* group.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 288E8B0288E8B0288E8B0000 /* group.cpp */; settings = {COMPILER_FLAGS = "-D_REENTRANT  -g -DBOOST_MPI_DYN_LINK=1     "; }; };
		28A666028A666028A6660000 /* intercommunicator.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 288F460288F460288F460000 /* intercommunicator.cpp */; settings = {COMPILER_FLAGS = "-D_REENTRANT  -g -DBOOST_MPI_DYN_LINK=1     "; }; };
		28A6FD028A6FD028A6FD0000 /* mpi_datatype_cache.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 28900B028900B028900B0000 /* mpi_datatype_cache.cpp */; settings = {COMPILER_FLAGS = "-D_REENTRANT  -g -DBOOST_MPI_DYN_LINK=1     "; }; };
		28A783028A783028A7830000 /* mpi_datatype_oarchive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2890C902890C902890C90000 /* mpi_datatype_oarchive.cpp */; settings = {COMPILER_FLAGS = "-D_REENTRANT  -g -DBOOST_MPI_DYN_LINK=1     "; }; };
		28A7D5028A7D5028A7D50000 /* packed_iarchive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 289186028918602891860000 /* packed_iarchive.cpp */; settings = {COMPILER_FLAGS = "-D_REENTRANT  -g -DBOOST_MPI_DYN_LINK=1     "; }; };
		28A884028A884028A8840000 /* packed_oarchive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 289242028924202892420000 /* packed_oarchive.cpp */; settings = {COMPILER_FLAGS = "-D_REENTRANT  -g -DBOOST_MPI_DYN_LINK=1     "; }; };
		28A90B028A90B028A90B0000 /* packed_skeleton_iarchive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2892FE02892FE02892FE0000 /* packed_skeleton_iarchive.cpp */; settings = {COMPILER_FLAGS = "-D_REENTRANT  -g -DBOOST_MPI_DYN_LINK=1     "; }; };
		28A9D3028A9D3028A9D30000 /* packed_skeleton_oarchive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2893BB02893BB02893BB0000 /* packed_skeleton_oarchive.cpp */; settings = {COMPILER_FLAGS = "-D_REENTRANT  -g -DBOOST_MPI_DYN_LINK=1     "; }; };
		28AA19028AA19028AA190000 /* point_to_point.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 289477028947702894770000 /* point_to_point.cpp */; settings = {COMPILER_FLAGS = "-D_REENTRANT  -g -DBOOST_MPI_DYN_LINK=1     "; }; };
		28AAA3028AAA3028AAA30000 /* request.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 28952F028952F028952F0000 /* request.cpp */; settings = {COMPILER_FLAGS = "-D_REENTRANT  -g -DBOOST_MPI_DYN_LINK=1     "; }; };
		28AB2D028AB2D028AB2D0000 /* text_skeleton_oarchive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2895F802895F802895F80000 /* text_skeleton_oarchive.cpp */; settings = {COMPILER_FLAGS = "-D_REENTRANT  -g -DBOOST_MPI_DYN_LINK=1     "; }; };
		28B4FF028B4FF028B4FF0000 /* broadcast.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 28869A028869A028869A0000 /* broadcast.cpp */; settings = {COMPILER_FLAGS = "-D_REENTRANT  -O3 -DNDEBUG      "; }; };
		28B7B2028B7B2028B7B20000 /* communicator.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 288A260288A260288A260000 /* communicator.cpp */; settings = {COMPILER_FLAGS = "-D_REENTRANT  -O3 -DNDEBUG      "; }; };
		28B827028B827028B8270000 /* computation_tree.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 288ADD0288ADD0288ADD0000 /* computation_tree.cpp */; settings = {COMPILER_FLAGS = "-D_REENTRANT  -O3 -DNDEBUG      "; }; };
		28B8EA028B8EA028B8EA0000 /* content_oarchive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 288B9A0288B9A0288B9A0000 /* content_oarchive.cpp */; settings = {COMPILER_FLAGS = "-D_REENTRANT  -O3 -DNDEBUG      "; }; };
		28B946028B946028B9460000 /* environment.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 288C560288C560288C560000 /* environment.cpp */; settings = {COMPILER_FLAGS = "-D_REENTRANT  -O3 -DNDEBUG      "; }; };
		28B9B9028B9B9028B9B90000 /* exception.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 288D140288D140288D140000 /* exception.cpp */; settings = {COMPILER_FLAGS = "-D_REENTRANT  -O3 -DNDEBUG      "; }; };
		28BA3B028BA3B028BA3B0000 /* graph_communicator.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 288DCF0288DCF0288DCF0000 /* graph_communicator.cpp */; settings = {COMPILER_FLAGS = "-D_REENTRANT  -O3 -DNDEBUG      "; }; };
		28BAD4028BAD4028BAD40000 /* group.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 288E8B0288E8B0288E8B0000 /* group.cpp */; settings = {COMPILER_FLAGS = "-D_REENTRANT  -O3 -DNDEBUG      "; }; };
		28BB48028BB48028BB480000 /* intercommunicator.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 288F460288F460288F460000 /* intercommunicator.cpp */; settings = {COMPILER_FLAGS = "-D_REENTRANT  -O3 -DNDEBUG      "; }; };
		28BBCF028BBCF028BBCF0000 /* mpi_datatype_cache.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 28900B028900B028900B0000 /* mpi_datatype_cache.cpp */; settings = {COMPILER_FLAGS = "-D_REENTRANT  -O3 -DNDEBUG      "; }; };
		28BC54028BC54028BC540000 /* mpi_datatype_oarchive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2890C902890C902890C90000 /* mpi_datatype_oarchive.cpp */; settings = {COMPILER_FLAGS = "-D_REENTRANT  -O3 -DNDEBUG      "; }; };
		28BCDB028BCDB028BCDB0000 /* packed_iarchive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 289186028918602891860000 /* packed_iarchive.cpp */; settings = {COMPILER_FLAGS = "-D_REENTRANT  -O3 -DNDEBUG      "; }; };
		28BD61028BD61028BD610000 /* packed_oarchive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 289242028924202892420000 /* packed_oarchive.cpp */; settings = {COMPILER_FLAGS = "-D_REENTRANT  -O3 -DNDEBUG      "; }; };
		28BDE7028BDE7028BDE70000 /* packed_skeleton_iarchive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2892FE02892FE02892FE0000 /* packed_skeleton_iarchive.cpp */; settings = {COMPILER_FLAGS = "-D_REENTRANT  -O3 -DNDEBUG      "; }; };
		28BE6F028BE6F028BE6F0000 /* packed_skeleton_oarchive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2893BB02893BB02893BB0000 /* packed_skeleton_oarchive.cpp */; settings = {COMPILER_FLAGS = "-D_REENTRANT  -O3 -DNDEBUG      "; }; };
		28BF09028BF09028BF090000 /* point_to_point.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 289477028947702894770000 /* point_to_point.cpp */; settings = {COMPILER_FLAGS = "-D_REENTRANT  -O3 -DNDEBUG      "; }; };
		28BF7E028BF7E028BF7E0000 /* request.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 28952F028952F028952F0000 /* request.cpp */; settings = {COMPILER_FLAGS = "-D_REENTRANT  -O3 -DNDEBUG      "; }; };
		28C009028C009028C0090000 /* text_skeleton_oarchive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2895F802895F802895F80000 /* text_skeleton_oarchive.cpp */; settings = {COMPILER_FLAGS = "-D_REENTRANT  -O3 -DNDEBUG      "; }; };
		28CA7C028CA7C028CA7C0000 /* broadcast.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 28869A028869A028869A0000 /* broadcast.cpp */; settings = {COMPILER_FLAGS = "-D_REENTRANT  -g      "; }; };
		28CB55028CB55028CB550000 /* communicator.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 288A260288A260288A260000 /* communicator.cpp */; settings = {COMPILER_FLAGS = "-D_REENTRANT  -g      "; }; };
		28CBE1028CBE1028CBE10000 /* computation_tree.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 288ADD0288ADD0288ADD0000 /* computation_tree.cpp */; settings = {COMPILER_FLAGS = "-D_REENTRANT  -g      "; }; };
		28CC7B028CC7B028CC7B0000 /* content_oarchive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 288B9A0288B9A0288B9A0000 /* content_oarchive.cpp */; settings = {COMPILER_FLAGS = "-D_REENTRANT  -g      "; }; };
		28CD00028CD00028CD000000 /* environment.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 288C560288C560288C560000 /* environment.cpp */; settings = {COMPILER_FLAGS = "-D_REENTRANT  -g      "; }; };
		28CD75028CD75028CD750000 /* exception.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 288D140288D140288D140000 /* exception.cpp */; settings = {COMPILER_FLAGS = "-D_REENTRANT  -g      "; }; };
		28CDF3028CDF3028CDF30000 /* graph_communicator.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 288DCF0288DCF0288DCF0000 /* graph_communicator.cpp */; settings = {COMPILER_FLAGS = "-D_REENTRANT  -g      "; }; };
		28CE77028CE77028CE770000 /* group.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 288E8B0288E8B0288E8B0000 /* group.cpp */; settings = {COMPILER_FLAGS = "-D_REENTRANT  -g      "; }; };
		28CEFC028CEFC028CEFC0000 /* intercommunicator.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 288F460288F460288F460000 /* intercommunicator.cpp */; settings = {COMPILER_FLAGS = "-D_REENTRANT  -g      "; }; };
		28CF88028CF88028CF880000 /* mpi_datatype_cache.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 28900B028900B028900B0000 /* mpi_datatype_cache.cpp */; settings = {COMPILER_FLAGS = "-D_REENTRANT  -g      "; }; };
		28D00E028D00E028D00E0000 /* mpi_datatype_oarchive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2890C902890C902890C90000 /* mpi_datatype_oarchive.cpp */; settings = {COMPILER_FLAGS = "-D_REENTRANT  -g      "; }; };
		28D0D0028D0D0028D0D00000 /* packed_iarchive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 289186028918602891860000 /* packed_iarchive.cpp */; settings = {COMPILER_FLAGS = "-D_REENTRANT  -g      "; }; };
		28D118028D118028D1180000 /* packed_oarchive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 289242028924202892420000 /* packed_oarchive.cpp */; settings = {COMPILER_FLAGS = "-D_REENTRANT  -g      "; }; };
		28D19D028D19D028D19D0000 /* packed_skeleton_iarchive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2892FE02892FE02892FE0000 /* packed_skeleton_iarchive.cpp */; settings = {COMPILER_FLAGS = "-D_REENTRANT  -g      "; }; };
		28D236028D236028D2360000 /* packed_skeleton_oarchive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2893BB02893BB02893BB0000 /* packed_skeleton_oarchive.cpp */; settings = {COMPILER_FLAGS = "-D_REENTRANT  -g      "; }; };
		28D2E1028D2E1028D2E10000 /* point_to_point.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 289477028947702894770000 /* point_to_point.cpp */; settings = {COMPILER_FLAGS = "-D_REENTRANT  -g      "; }; };
		28D329028D329028D3290000 /* request.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 28952F028952F028952F0000 /* request.cpp */; settings = {COMPILER_FLAGS = "-D_REENTRANT  -g      "; }; };
		28D3B2028D3B2028D3B20000 /* text_skeleton_oarchive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2895F802895F802895F80000 /* text_skeleton_oarchive.cpp */; settings = {COMPILER_FLAGS = "-D_REENTRANT  -g      "; }; };
		28E6C7028E6C7028E6C70000 /* mpi_process_group.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 28E5DB028E5DB028E5DB0000 /* mpi_process_group.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_GRAPH_DYN_LINK=1     "; }; };
		28E797028E797028E7970000 /* tag_allocator.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 28E743028E743028E7430000 /* tag_allocator.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_GRAPH_DYN_LINK=1     "; }; };
		28F157028F157028F1570000 /* mpi_process_group.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 28E5DB028E5DB028E5DB0000 /* mpi_process_group.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_GRAPH_DYN_LINK=1     "; }; };
		28F3F8028F3F8028F3F80000 /* tag_allocator.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 28E743028E743028E7430000 /* tag_allocator.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_GRAPH_DYN_LINK=1     "; }; };
		2901CE02901CE02901CE0000 /* mpi_process_group.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 28E5DB028E5DB028E5DB0000 /* mpi_process_group.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		290457029045702904570000 /* tag_allocator.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 28E743028E743028E7430000 /* tag_allocator.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		290EE10290EE10290EE10000 /* mpi_process_group.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 28E5DB028E5DB028E5DB0000 /* mpi_process_group.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		290FAC0290FAC0290FAC0000 /* tag_allocator.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 28E743028E743028E7430000 /* tag_allocator.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		292AC40292AC40292AC40000 /* file_descriptor.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 292A540292A540292A540000 /* file_descriptor.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_IOSTREAMS_DYN_LINK=1     "; }; };
		292B800292B800292B800000 /* mapped_file.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 292B2B0292B2B0292B2B0000 /* mapped_file.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_IOSTREAMS_DYN_LINK=1     "; }; };
		292C280292C280292C280000 /* zlib.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 292BE50292BE50292BE50000 /* zlib.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_IOSTREAMS_DYN_LINK=1     "; }; };
		292CEB0292CEB0292CEB0000 /* bzip2.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 292C9C0292C9C0292C9C0000 /* bzip2.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_IOSTREAMS_DYN_LINK=1     "; }; };
		29390D029390D029390D0000 /* file_descriptor.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 292A540292A540292A540000 /* file_descriptor.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_IOSTREAMS_DYN_LINK=1     "; }; };
		293993029399302939930000 /* mapped_file.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 292B2B0292B2B0292B2B0000 /* mapped_file.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_IOSTREAMS_DYN_LINK=1     "; }; };
		2939DB02939DB02939DB0000 /* zlib.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 292BE50292BE50292BE50000 /* zlib.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_IOSTREAMS_DYN_LINK=1     "; }; };
		293A5E0293A5E0293A5E0000 /* bzip2.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 292C9C0292C9C0292C9C0000 /* bzip2.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_IOSTREAMS_DYN_LINK=1     "; }; };
		29463A029463A029463A0000 /* file_descriptor.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 292A540292A540292A540000 /* file_descriptor.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		2946C502946C502946C50000 /* mapped_file.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 292B2B0292B2B0292B2B0000 /* mapped_file.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		29474B029474B029474B0000 /* zlib.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 292BE50292BE50292BE50000 /* zlib.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		2947DF02947DF02947DF0000 /* bzip2.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 292C9C0292C9C0292C9C0000 /* bzip2.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		295299029529902952990000 /* file_descriptor.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 292A540292A540292A540000 /* file_descriptor.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		295320029532002953200000 /* mapped_file.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 292B2B0292B2B0292B2B0000 /* mapped_file.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		29539F029539F029539F0000 /* zlib.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 292BE50292BE50292BE50000 /* zlib.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		295420029542002954200000 /* bzip2.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 292C9C0292C9C0292C9C0000 /* bzip2.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		297F740297F740297F740000 /* cmdline.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 297F2C0297F2C0297F2C0000 /* cmdline.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_PROGRAM_OPTIONS_DYN_LINK=1     "; }; };
		298035029803502980350000 /* config_file.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 297FE10297FE10297FE10000 /* config_file.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_PROGRAM_OPTIONS_DYN_LINK=1     "; }; };
		2980F302980F302980F30000 /* options_description.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 29809D029809D029809D0000 /* options_description.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_PROGRAM_OPTIONS_DYN_LINK=1     "; }; };
		298199029819902981990000 /* parsers.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 29815F029815F029815F0000 /* parsers.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_PROGRAM_OPTIONS_DYN_LINK=1     "; }; };
		29825C029825C029825C0000 /* variables_map.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 29821B029821B029821B0000 /* variables_map.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_PROGRAM_OPTIONS_DYN_LINK=1     "; }; };
		298333029833302983330000 /* value_semantic.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2982DE02982DE02982DE0000 /* value_semantic.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_PROGRAM_OPTIONS_DYN_LINK=1     "; }; };
		2983DE02983DE02983DE0000 /* positional_options.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 29839A029839A029839A0000 /* positional_options.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_PROGRAM_OPTIONS_DYN_LINK=1     "; }; };
		29849F029849F029849F0000 /* utf8_codecvt_facet.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 29845B029845B029845B0000 /* utf8_codecvt_facet.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_PROGRAM_OPTIONS_DYN_LINK=1     "; }; };
		29856E029856E029856E0000 /* convert.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 29851C029851C029851C0000 /* convert.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_PROGRAM_OPTIONS_DYN_LINK=1     "; }; };
		29862B029862B029862B0000 /* winmain.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2985D502985D502985D50000 /* winmain.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_PROGRAM_OPTIONS_DYN_LINK=1     "; }; };
		299214029921402992140000 /* cmdline.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 297F2C0297F2C0297F2C0000 /* cmdline.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_PROGRAM_OPTIONS_DYN_LINK=1     "; }; };
		299288029928802992880000 /* config_file.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 297FE10297FE10297FE10000 /* config_file.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_PROGRAM_OPTIONS_DYN_LINK=1     "; }; };
		299321029932102993210000 /* options_description.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 29809D029809D029809D0000 /* options_description.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_PROGRAM_OPTIONS_DYN_LINK=1     "; }; };
		2993AA02993AA02993AA0000 /* parsers.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 29815F029815F029815F0000 /* parsers.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_PROGRAM_OPTIONS_DYN_LINK=1     "; }; };
		299436029943602994360000 /* variables_map.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 29821B029821B029821B0000 /* variables_map.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_PROGRAM_OPTIONS_DYN_LINK=1     "; }; };
		2994BC02994BC02994BC0000 /* value_semantic.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2982DE02982DE02982DE0000 /* value_semantic.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_PROGRAM_OPTIONS_DYN_LINK=1     "; }; };
		299542029954202995420000 /* positional_options.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 29839A029839A029839A0000 /* positional_options.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_PROGRAM_OPTIONS_DYN_LINK=1     "; }; };
		2995CB02995CB02995CB0000 /* utf8_codecvt_facet.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 29845B029845B029845B0000 /* utf8_codecvt_facet.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_PROGRAM_OPTIONS_DYN_LINK=1     "; }; };
		299653029965302996530000 /* convert.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 29851C029851C029851C0000 /* convert.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_PROGRAM_OPTIONS_DYN_LINK=1     "; }; };
		29970A029970A029970A0000 /* winmain.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2985D502985D502985D50000 /* winmain.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_PROGRAM_OPTIONS_DYN_LINK=1     "; }; };
		29A2C1029A2C1029A2C10000 /* cmdline.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 297F2C0297F2C0297F2C0000 /* cmdline.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		29A331029A331029A3310000 /* config_file.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 297FE10297FE10297FE10000 /* config_file.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		29A3CB029A3CB029A3CB0000 /* options_description.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 29809D029809D029809D0000 /* options_description.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		29A44F029A44F029A44F0000 /* parsers.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 29815F029815F029815F0000 /* parsers.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		29A4C4029A4C4029A4C40000 /* variables_map.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 29821B029821B029821B0000 /* variables_map.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		29A589029A589029A5890000 /* value_semantic.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2982DE02982DE02982DE0000 /* value_semantic.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		29A5CF029A5CF029A5CF0000 /* positional_options.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 29839A029839A029839A0000 /* positional_options.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		29A667029A667029A6670000 /* utf8_codecvt_facet.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 29845B029845B029845B0000 /* utf8_codecvt_facet.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		29A6F6029A6F6029A6F60000 /* convert.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 29851C029851C029851C0000 /* convert.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		29A7A6029A7A6029A7A60000 /* winmain.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2985D502985D502985D50000 /* winmain.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		29B1D9029B1D9029B1D90000 /* cmdline.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 297F2C0297F2C0297F2C0000 /* cmdline.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		29B2BE029B2BE029B2BE0000 /* config_file.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 297FE10297FE10297FE10000 /* config_file.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		29B33E029B33E029B33E0000 /* options_description.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 29809D029809D029809D0000 /* options_description.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		29B3C5029B3C5029B3C50000 /* parsers.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 29815F029815F029815F0000 /* parsers.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		29B44B029B44B029B44B0000 /* variables_map.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 29821B029821B029821B0000 /* variables_map.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		29B511029B511029B5110000 /* value_semantic.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2982DE02982DE02982DE0000 /* value_semantic.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		29B56B029B56B029B56B0000 /* positional_options.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 29839A029839A029839A0000 /* positional_options.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		29B5F0029B5F0029B5F00000 /* utf8_codecvt_facet.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 29845B029845B029845B0000 /* utf8_codecvt_facet.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		29B6A5029B6A5029B6A50000 /* convert.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 29851C029851C029851C0000 /* convert.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		29B72A029B72A029B72A0000 /* winmain.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2985D502985D502985D50000 /* winmain.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		29DA01029DA01029DA010000 /* trackable.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 29D981029D981029D9810000 /* trackable.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_SIGNALS_DYN_LINK=1     "; }; };
		29DAB1029DAB1029DAB10000 /* connection.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 29DA6E029DA6E029DA6E0000 /* connection.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_SIGNALS_DYN_LINK=1     "; }; };
		29DB7B029DB7B029DB7B0000 /* named_slot_map.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 29DB26029DB26029DB260000 /* named_slot_map.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_SIGNALS_DYN_LINK=1     "; }; };
		29DC36029DC36029DC360000 /* signal_base.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 29DBE1029DBE1029DBE10000 /* signal_base.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_SIGNALS_DYN_LINK=1     "; }; };
		29DCDC029DCDC029DCDC0000 /* slot.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 29DC9B029DC9B029DC9B0000 /* slot.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_SIGNALS_DYN_LINK=1     "; }; };
		29E8C1029E8C1029E8C10000 /* trackable.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 29D981029D981029D9810000 /* trackable.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_SIGNALS_DYN_LINK=1     "; }; };
		29E944029E944029E9440000 /* connection.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 29DA6E029DA6E029DA6E0000 /* connection.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_SIGNALS_DYN_LINK=1     "; }; };
		29E9D6029E9D6029E9D60000 /* named_slot_map.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 29DB26029DB26029DB260000 /* named_slot_map.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_SIGNALS_DYN_LINK=1     "; }; };
		29EA51029EA51029EA510000 /* signal_base.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 29DBE1029DBE1029DBE10000 /* signal_base.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_SIGNALS_DYN_LINK=1     "; }; };
		29EAEB029EAEB029EAEB0000 /* slot.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 29DC9B029DC9B029DC9B0000 /* slot.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_SIGNALS_DYN_LINK=1     "; }; };
		29F6B9029F6B9029F6B90000 /* trackable.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 29D981029D981029D9810000 /* trackable.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		29F74E029F74E029F74E0000 /* connection.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 29DA6E029DA6E029DA6E0000 /* connection.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		29F7C0029F7C0029F7C00000 /* named_slot_map.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 29DB26029DB26029DB260000 /* named_slot_map.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		29F859029F859029F8590000 /* signal_base.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 29DBE1029DBE1029DBE10000 /* signal_base.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		29F8DA029F8DA029F8DA0000 /* slot.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 29DC9B029DC9B029DC9B0000 /* slot.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		2A079C02A079C02A079C0000 /* trackable.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 29D981029D981029D9810000 /* trackable.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		2A081B02A081B02A081B0000 /* connection.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 29DA6E029DA6E029DA6E0000 /* connection.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		2A089E02A089E02A089E0000 /* named_slot_map.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 29DB26029DB26029DB260000 /* named_slot_map.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		2A096002A096002A09600000 /* signal_base.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 29DBE1029DBE1029DBE10000 /* signal_base.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		2A09A702A09A702A09A70000 /* slot.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 29DC9B029DC9B029DC9B0000 /* slot.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		2A44F002A44F002A44F00000 /* instantiate_cpp_exprgrammar.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2A447A02A447A02A447A0000 /* instantiate_cpp_exprgrammar.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_ALL_DYN_LINK=1     "; }; };
		2A45AD02A45AD02A45AD0000 /* instantiate_cpp_grammar.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2A456E02A456E02A456E0000 /* instantiate_cpp_grammar.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_ALL_DYN_LINK=1     "; }; };
		2A466A02A466A02A466A0000 /* instantiate_cpp_literalgrs.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2A462A02A462A02A462A0000 /* instantiate_cpp_literalgrs.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_ALL_DYN_LINK=1     "; }; };
		2A472702A472702A47270000 /* instantiate_defined_grammar.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2A46E702A46E702A46E70000 /* instantiate_defined_grammar.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_ALL_DYN_LINK=1     "; }; };
		2A47E602A47E602A47E60000 /* instantiate_predef_macros.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2A47A402A47A402A47A40000 /* instantiate_predef_macros.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_ALL_DYN_LINK=1     "; }; };
		2A48B402A48B402A48B40000 /* instantiate_re2c_lexer.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2A486702A486702A48670000 /* instantiate_re2c_lexer.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_ALL_DYN_LINK=1     "; }; };
		2A497002A497002A49700000 /* instantiate_re2c_lexer_str.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2A492202A492202A49220000 /* instantiate_re2c_lexer_str.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_ALL_DYN_LINK=1     "; }; };
		2A4A1602A4A1602A4A160000 /* token_ids.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2A49DD02A49DD02A49DD0000 /* token_ids.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_ALL_DYN_LINK=1     "; }; };
		2A4AE702A4AE702A4AE70000 /* wave_config_constant.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2A4A9802A4A9802A4A980000 /* wave_config_constant.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_ALL_DYN_LINK=1     "; }; };
		2A4BAA02A4BAA02A4BAA0000 /* aq.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2A4B5502A4B5502A4B550000 /* aq.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_ALL_DYN_LINK=1     "; }; };
		2A4C6502A4C6502A4C650000 /* cpp_re.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2A4C1002A4C1002A4C100000 /* cpp_re.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_ALL_DYN_LINK=1     "; }; };
		2A583302A583302A58330000 /* instantiate_cpp_exprgrammar.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2A447A02A447A02A447A0000 /* instantiate_cpp_exprgrammar.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_ALL_DYN_LINK=1     "; }; };
		2A58B902A58B902A58B90000 /* instantiate_cpp_grammar.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2A456E02A456E02A456E0000 /* instantiate_cpp_grammar.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_ALL_DYN_LINK=1     "; }; };
		2A593E02A593E02A593E0000 /* instantiate_cpp_literalgrs.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2A462A02A462A02A462A0000 /* instantiate_cpp_literalgrs.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_ALL_DYN_LINK=1     "; }; };
		2A59C202A59C202A59C20000 /* instantiate_defined_grammar.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2A46E702A46E702A46E70000 /* instantiate_defined_grammar.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_ALL_DYN_LINK=1     "; }; };
		2A5A4C02A5A4C02A5A4C0000 /* instantiate_predef_macros.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2A47A402A47A402A47A40000 /* instantiate_predef_macros.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_ALL_DYN_LINK=1     "; }; };
		2A5AD102A5AD102A5AD10000 /* instantiate_re2c_lexer.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2A486702A486702A48670000 /* instantiate_re2c_lexer.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_ALL_DYN_LINK=1     "; }; };
		2A5B5502A5B5502A5B550000 /* instantiate_re2c_lexer_str.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2A492202A492202A49220000 /* instantiate_re2c_lexer_str.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_ALL_DYN_LINK=1     "; }; };
		2A5BED02A5BED02A5BED0000 /* token_ids.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2A49DD02A49DD02A49DD0000 /* token_ids.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_ALL_DYN_LINK=1     "; }; };
		2A5CA202A5CA202A5CA20000 /* wave_config_constant.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2A4A9802A4A9802A4A980000 /* wave_config_constant.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_ALL_DYN_LINK=1     "; }; };
		2A5CEB02A5CEB02A5CEB0000 /* aq.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2A4B5502A4B5502A4B550000 /* aq.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_ALL_DYN_LINK=1     "; }; };
		2A5DAB02A5DAB02A5DAB0000 /* cpp_re.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2A4C1002A4C1002A4C100000 /* cpp_re.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_ALL_DYN_LINK=1     "; }; };
		2A693A02A693A02A693A0000 /* instantiate_cpp_exprgrammar.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2A447A02A447A02A447A0000 /* instantiate_cpp_exprgrammar.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		2A69C002A69C002A69C00000 /* instantiate_cpp_grammar.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2A456E02A456E02A456E0000 /* instantiate_cpp_grammar.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		2A6A4702A6A4702A6A470000 /* instantiate_cpp_literalgrs.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2A462A02A462A02A462A0000 /* instantiate_cpp_literalgrs.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		2A6ACE02A6ACE02A6ACE0000 /* instantiate_defined_grammar.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2A46E702A46E702A46E70000 /* instantiate_defined_grammar.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		2A6B6B02A6B6B02A6B6B0000 /* instantiate_predef_macros.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2A47A402A47A402A47A40000 /* instantiate_predef_macros.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		2A6BE102A6BE102A6BE10000 /* instantiate_re2c_lexer.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2A486702A486702A48670000 /* instantiate_re2c_lexer.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		2A6C7A02A6C7A02A6C7A0000 /* instantiate_re2c_lexer_str.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2A492202A492202A49220000 /* instantiate_re2c_lexer_str.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		2A6D2502A6D2502A6D250000 /* token_ids.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2A49DD02A49DD02A49DD0000 /* token_ids.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		2A6D6B02A6D6B02A6D6B0000 /* wave_config_constant.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2A4A9802A4A9802A4A980000 /* wave_config_constant.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		2A6E3102A6E3102A6E310000 /* aq.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2A4B5502A4B5502A4B550000 /* aq.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		2A6E7902A6E7902A6E790000 /* cpp_re.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2A4C1002A4C1002A4C100000 /* cpp_re.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		2A794302A794302A79430000 /* instantiate_cpp_exprgrammar.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2A447A02A447A02A447A0000 /* instantiate_cpp_exprgrammar.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		2A79CB02A79CB02A79CB0000 /* instantiate_cpp_grammar.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2A456E02A456E02A456E0000 /* instantiate_cpp_grammar.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		2A7A5102A7A5102A7A510000 /* instantiate_cpp_literalgrs.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2A462A02A462A02A462A0000 /* instantiate_cpp_literalgrs.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		2A7AEA02A7AEA02A7AEA0000 /* instantiate_defined_grammar.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2A46E702A46E702A46E70000 /* instantiate_defined_grammar.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		2A7B6F02A7B6F02A7B6F0000 /* instantiate_predef_macros.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2A47A402A47A402A47A40000 /* instantiate_predef_macros.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		2A7BF402A7BF402A7BF40000 /* instantiate_re2c_lexer.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2A486702A486702A48670000 /* instantiate_re2c_lexer.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		2A7C6602A7C6602A7C660000 /* instantiate_re2c_lexer_str.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2A492202A492202A49220000 /* instantiate_re2c_lexer_str.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		2A7CEA02A7CEA02A7CEA0000 /* token_ids.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2A49DD02A49DD02A49DD0000 /* token_ids.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		2A7D8602A7D8602A7D860000 /* wave_config_constant.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2A4A9802A4A9802A4A980000 /* wave_config_constant.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		2A7E0C02A7E0C02A7E0C0000 /* aq.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2A4B5502A4B5502A4B550000 /* aq.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		2A7EBA02A7EBA02A7EBA0000 /* cpp_re.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2A4C1002A4C1002A4C100000 /* cpp_re.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		2A894002A894002A89400000 /* add_path.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2A893202A893202A89320000 /* add_path.cpp */; settings = {COMPILER_FLAGS = "        "; }; };
		2A89F502A89F502A89F50000 /* bcp_imp.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2A89DF02A89DF02A89DF0000 /* bcp_imp.cpp */; settings = {COMPILER_FLAGS = "        "; }; };
		2A8AAC02A8AAC02A8AAC0000 /* copy_path.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2A8A9602A8A9602A8A960000 /* copy_path.cpp */; settings = {COMPILER_FLAGS = "        "; }; };
		2A8B6302A8B6302A8B630000 /* file_types.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2A8B4D02A8B4D02A8B4D0000 /* file_types.cpp */; settings = {COMPILER_FLAGS = "        "; }; };
		2A8C1A02A8C1A02A8C1A0000 /* fileview.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2A8C0402A8C0402A8C040000 /* fileview.cpp */; settings = {COMPILER_FLAGS = "        "; }; };
		2A8CD702A8CD702A8CD70000 /* main.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2A8CBE02A8CBE02A8CBE0000 /* main.cpp */; settings = {COMPILER_FLAGS = "        "; }; };
		2A8DB702A8DB702A8DB70000 /* path_operations.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2A8D7802A8D7802A8D780000 /* path_operations.cpp */; settings = {COMPILER_FLAGS = "        "; }; };
		2A8E4602A8E4602A8E460000 /* scan_cvs_path.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2A8E3002A8E3002A8E300000 /* scan_cvs_path.cpp */; settings = {COMPILER_FLAGS = "        "; }; };
		2A8EFD02A8EFD02A8EFD0000 /* licence_info.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2A8EE702A8EE702A8EE70000 /* licence_info.cpp */; settings = {COMPILER_FLAGS = "        "; }; };
		2A8FBB02A8FBB02A8FBB0000 /* scan_licence.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2A8FA402A8FA402A8FA40000 /* scan_licence.cpp */; settings = {COMPILER_FLAGS = "        "; }; };
		2A909702A909702A90970000 /* output_licence_info.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2A905702A905702A90570000 /* output_licence_info.cpp */; settings = {COMPILER_FLAGS = "        "; }; };
		2A9AFE02A9AFE02A9AFE0000 /* inspect.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2A9AC202A9AC202A9AC20000 /* inspect.cpp */; settings = {COMPILER_FLAGS = "        "; }; };
		2A9C2202A9C2202A9C220000 /* license_check.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2A9BE302A9BE302A9BE30000 /* license_check.cpp */; settings = {COMPILER_FLAGS = "        "; }; };
		2A9CDA02A9CDA02A9CDA0000 /* link_check.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2A9C9B02A9C9B02A9C9B0000 /* link_check.cpp */; settings = {COMPILER_FLAGS = "        "; }; };
		2A9DDC02A9DDC02A9DDC0000 /* path_name_check.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2A9D5402A9D5402A9D540000 /* path_name_check.cpp */; settings = {COMPILER_FLAGS = "        "; }; };
		2A9E4E02A9E4E02A9E4E0000 /* tab_check.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2A9E0A02A9E0A02A9E0A0000 /* tab_check.cpp */; settings = {COMPILER_FLAGS = "        "; }; };
		2A9F0902A9F0902A9F090000 /* crlf_check.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2A9EC702A9EC702A9EC70000 /* crlf_check.cpp */; settings = {COMPILER_FLAGS = "        "; }; };
		2A9FC102A9FC102A9FC10000 /* end_check.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2A9F8202A9F8202A9F820000 /* end_check.cpp */; settings = {COMPILER_FLAGS = "        "; }; };
		2AA07C02AA07C02AA07C0000 /* unnamed_namespace_check.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2AA03B02AA03B02AA03B0000 /* unnamed_namespace_check.cpp */; settings = {COMPILER_FLAGS = "        "; }; };
		2AA13402AA13402AA1340000 /* ascii_check.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2AA0F802AA0F802AA0F80000 /* ascii_check.cpp */; settings = {COMPILER_FLAGS = "        "; }; };
		2AA1EF02AA1EF02AA1EF0000 /* copyright_check.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2AA1B302AA1B302AA1B30000 /* copyright_check.cpp */; settings = {COMPILER_FLAGS = "        "; }; };
		2AA2A702AA2A702AA2A70000 /* minmax_check.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2AA26802AA26802AA2680000 /* minmax_check.cpp */; settings = {COMPILER_FLAGS = "        "; }; };
/* End PBXBuildFile section */

/* Begin PBXContainerItemProxy section */
		2AAD8C02AAD8C02AAD8C0000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 23F7A6023F7A6023F7A60000;
			remoteInfo = "boost_date_time-mt-static";
		};
		2AADFD02AADFD02AADFD0000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 23DDB7023DDB7023DDB70000;
			remoteInfo = "boost_date_time-mt-shared";
		};
		2AAE7302AAE7302AAE730000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 24077A024077A024077A0000;
			remoteInfo = "boost_date_time-mt-static-debug";
		};
		2AAEEB02AAEEB02AAEEB0000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 23EAA8023EAA8023EAA80000;
			remoteInfo = "boost_date_time-mt-shared-debug";
		};
		2AAF6802AAF6802AAF680000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 243DD30243DD30243DD30000;
			remoteInfo = "boost_thread-mt-static";
		};
		2AAFE002AAFE002AAFE00000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 242409024240902424090000;
			remoteInfo = "boost_thread-mt-shared";
		};
		2AB06102AB06102AB0610000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 2449AE02449AE02449AE0000;
			remoteInfo = "boost_thread-mt-static-debug";
		};
		2AB0DB02AB0DB02AB0DB0000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 2430E902430E902430E90000;
			remoteInfo = "boost_thread-mt-shared-debug";
		};
		2AB15502AB15502AB1550000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 2498D702498D702498D70000;
			remoteInfo = "boost_regex-mt-static";
		};
		2AB1CF02AB1CF02AB1CF0000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 24707B024707B024707B0000;
			remoteInfo = "boost_regex-mt-shared";
		};
		2AB24402AB24402AB2440000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 24ABE7024ABE7024ABE70000;
			remoteInfo = "boost_regex-mt-static-debug";
		};
		2AB2BC02AB2BC02AB2BC0000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 24849D024849D024849D0000;
			remoteInfo = "boost_regex-mt-shared-debug";
		};
		2AB33402AB33402AB3340000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 255652025565202556520000;
			remoteInfo = "boost_serialization-mt-static";
		};
		2AB3AC02AB3AC02AB3AC0000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 252539025253902525390000;
			remoteInfo = "boost_serialization-mt-shared";
		};
		2AB42402AB42402AB4240000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 256DA00256DA00256DA00000;
			remoteInfo = "boost_serialization-mt-static-debug";
		};
		2AB49C02AB49C02AB49C0000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 253DD50253DD50253DD50000;
			remoteInfo = "boost_serialization-mt-shared-debug";
		};
		2AB51402AB51402AB5140000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 25A6C7025A6C7025A6C70000;
			remoteInfo = "boost_wserialization-mt-static";
		};
		2AB58A02AB58A02AB58A0000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 258687025868702586870000;
			remoteInfo = "boost_wserialization-mt-shared";
		};
		2AB59302AB59302AB5930000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 276F4D0276F4D0276F4D0000;
			remoteInfo = "boost_prg_exec_monitor-mt-static";
		};
		2AB60902AB60902AB6090000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 25B5CC025B5CC025B5CC0000;
			remoteInfo = "boost_wserialization-mt-static-debug";
		};
		2AB68202AB68202AB6820000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 2596BC02596BC02596BC0000;
			remoteInfo = "boost_wserialization-mt-shared-debug";
		};
		2AB6FB02AB6FB02AB6FB0000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 2614BD02614BD02614BD0000;
			remoteInfo = "boost_graph-mt-static";
		};
		2AB77302AB77302AB7730000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 25F90F025F90F025F90F0000;
			remoteInfo = "boost_graph-mt-shared";
		};
		2AB7EB02AB7EB02AB7EB0000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 261F850261F850261F850000;
			remoteInfo = "boost_graph-mt-static-debug";
		};
		2AB86302AB86302AB8630000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 2608DD02608DD02608DD0000;
			remoteInfo = "boost_graph-mt-shared-debug";
		};
		2AB8DB02AB8DB02AB8DB0000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 26829B026829B026829B0000;
			remoteInfo = "boost_python-mt-static";
		};
		2AB95302AB95302AB9530000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 264E780264E780264E780000;
			remoteInfo = "boost_python-mt-shared";
		};
		2AB9CB02AB9CB02AB9CB0000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 269BA60269BA60269BA60000;
			remoteInfo = "boost_python-mt-static-debug";
		};
		2ABA4302ABA4302ABA430000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 266851026685102668510000;
			remoteInfo = "boost_python-mt-shared-debug";
		};
		2ABABB02ABABB02ABABB0000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 26B6D3026B6D3026B6D30000;
			remoteInfo = "accumulators-accumulators_example";
		};
		2ABB3302ABB3302ABB330000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 26E960026E960026E9600000;
			remoteInfo = "boost_system-mt-static";
		};
		2ABBAB02ABBAB02ABBAB0000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 26D1BD026D1BD026D1BD0000;
			remoteInfo = "boost_system-mt-shared";
		};
		2ABC2302ABC2302ABC230000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 26F436026F436026F4360000;
			remoteInfo = "boost_system-mt-static-debug";
		};
		2ABC9B02ABC9B02ABC9B0000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 26DD8C026DD8C026DD8C0000;
			remoteInfo = "boost_system-mt-shared-debug";
		};
		2ABD9B02ABD9B02ABD9B0000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 27558F027558F027558F0000;
			remoteInfo = "boost_prg_exec_monitor-mt-shared";
		};
		2ABE1502ABE1502ABE150000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 277B2B0277B2B0277B2B0000;
			remoteInfo = "boost_prg_exec_monitor-mt-static-debug";
		};
		2ABE8C02ABE8C02ABE8C0000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 27626D027626D027626D0000;
			remoteInfo = "boost_prg_exec_monitor-mt-shared-debug";
		};
		2ABF0502ABF0502ABF050000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 279979027997902799790000;
			remoteInfo = "boost_test_exec_monitor-mt-static";
		};
		2ABF7D02ABF7D02ABF7D0000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 27AC9D027AC9D027AC9D0000;
			remoteInfo = "boost_test_exec_monitor-mt-static-debug";
		};
		2ABFF602ABFF602ABFF60000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 27F422027F422027F4220000;
			remoteInfo = "boost_unit_test_framework-mt-static";
		};
		2AC06E02AC06E02AC06E0000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 27C987027C987027C9870000;
			remoteInfo = "boost_unit_test_framework-mt-shared";
		};
		2AC0E602AC0E602AC0E60000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 280C460280C460280C460000;
			remoteInfo = "boost_unit_test_framework-mt-static-debug";
		};
		2AC15F02AC15F02AC15F0000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 27DED2027DED2027DED20000;
			remoteInfo = "boost_unit_test_framework-mt-shared-debug";
		};
		2AC1D802AC1D802AC1D80000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 284C6D0284C6D0284C6D0000;
			remoteInfo = "boost_filesystem-mt-static";
		};
		2AC25002AC25002AC2500000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 283193028319302831930000;
			remoteInfo = "boost_filesystem-mt-shared";
		};
		2AC2C802AC2C802AC2C80000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 2858DC02858DC02858DC0000;
			remoteInfo = "boost_filesystem-mt-static-debug";
		};
		2AC34002AC34002AC3400000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 283EFE0283EFE0283EFE0000;
			remoteInfo = "boost_filesystem-mt-shared-debug";
		};
		2AC3B802AC3B802AC3B80000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 28C29B028C29B028C29B0000;
			remoteInfo = "boost_mpi-mt-static";
		};
		2AC42F02AC42F02AC42F0000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 2898D702898D702898D70000;
			remoteInfo = "boost_mpi-mt-shared";
		};
		2AC4A602AC4A602AC4A60000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 28D640028D640028D6400000;
			remoteInfo = "boost_mpi-mt-static-debug";
		};
		2AC51E02AC51E02AC51E0000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 28ADC4028ADC4028ADC40000;
			remoteInfo = "boost_mpi-mt-shared-debug";
		};
		2AC59602AC59602AC5960000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 2906D802906D802906D80000;
			remoteInfo = "boost_graph_parallel-mt-static";
		};
		2AC60E02AC60E02AC60E0000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 28EA10028EA10028EA100000;
			remoteInfo = "boost_graph_parallel-mt-shared";
		};
		2AC68602AC68602AC6860000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 29122A029122A029122A0000;
			remoteInfo = "boost_graph_parallel-mt-static-debug";
		};
		2AC6FF02AC6FF02AC6FF0000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 28F67B028F67B028F67B0000;
			remoteInfo = "boost_graph_parallel-mt-shared-debug";
		};
		2AC77802AC77802AC7780000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 294A4F0294A4F0294A4F0000;
			remoteInfo = "boost_iostreams-mt-static";
		};
		2AC7F002AC7F002AC7F00000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 292F750292F750292F750000;
			remoteInfo = "boost_iostreams-mt-shared";
		};
		2AC86802AC86802AC8680000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 29569F029569F029569F0000;
			remoteInfo = "boost_iostreams-mt-static-debug";
		};
		2AC8E002AC8E002AC8E00000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 293CE30293CE30293CE30000;
			remoteInfo = "boost_iostreams-mt-shared-debug";
		};
		2AC95802AC95802AC9580000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 29A9F0029A9F0029A9F00000;
			remoteInfo = "boost_program_options-mt-static";
		};
		2AC9D002AC9D002AC9D00000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 2988B002988B002988B00000;
			remoteInfo = "boost_program_options-mt-shared";
		};
		2ACA4802ACA4802ACA480000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 29B96E029B96E029B96E0000;
			remoteInfo = "boost_program_options-mt-static-debug";
		};
		2ACAC102ACAC102ACAC10000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 299954029995402999540000;
			remoteInfo = "boost_program_options-mt-shared-debug";
		};
		2ACB3A02ACB3A02ACB3A0000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 29FB4B029FB4B029FB4B0000;
			remoteInfo = "boost_signals-mt-static";
		};
		2ACBB202ACBB202ACBB20000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 29DF71029DF71029DF710000;
			remoteInfo = "boost_signals-mt-shared";
		};
		2ACC2A02ACC2A02ACC2A0000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 2A0C2902A0C2902A0C290000;
			remoteInfo = "boost_signals-mt-static-debug";
		};
		2ACC9702ACC9702ACC970000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 29ED59029ED59029ED590000;
			remoteInfo = "boost_signals-mt-shared-debug";
		};
		2ACD1102ACD1102ACD110000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 2A710902A710902A71090000;
			remoteInfo = "boost_wave-mt-static";
		};
		2ACD8B02ACD8B02ACD8B0000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 2A4EEE02A4EEE02A4EEE0000;
			remoteInfo = "boost_wave-mt-shared";
		};
		2ACE0502ACE0502ACE050000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 2A810602A810602A81060000;
			remoteInfo = "boost_wave-mt-static-debug";
		};
		2ACE7F02ACE7F02ACE7F0000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 2A5FF702A5FF702A5FF70000;
			remoteInfo = "boost_wave-mt-shared-debug";
		};
		2ACEF902ACEF902ACEF90000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 2A936502A936502A93650000;
			remoteInfo = bcp;
		};
		2ACF6C02ACF6C02ACF6C0000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 2AA57702AA57702AA5770000;
			remoteInfo = inspect;
		};
		2ACFE502ACFE502ACFE50000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 22A632022A632022A6320000;
			remoteInfo = ALL_BUILD;
		};
		2AD0C002AD0C002AD0C00000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 22EB34022EB34022EB340000;
			remoteInfo = "preprocessor-modularize";
		};
		2AD14A02AD14A02AD14A0000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 22F37A022F37A022F37A0000;
			remoteInfo = "concept_check-modularize";
		};
		2AD1C002AD1C002AD1C00000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 22FBDE022FBDE022FBDE0000;
			remoteInfo = "property_map-modularize";
		};
		2AD23802AD23802AD2380000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 230857023085702308570000;
			remoteInfo = "config-modularize";
		};
		2AD2B202AD2B202AD2B20000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 23109C023109C023109C0000;
			remoteInfo = "mpl-modularize";
		};
		2AD32902AD32902AD3290000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 2318A802318A802318A80000;
			remoteInfo = "type_traits-modularize";
		};
		2AD3AA02AD3AA02AD3AA0000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 2320BC02320BC02320BC0000;
			remoteInfo = "function-modularize";
		};
		2AD41F02AD41F02AD41F0000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 2328CB02328CB02328CB0000;
			remoteInfo = "iterator-modularize";
		};
		2AD49602AD49602AD4960000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 2330DF02330DF02330DF0000;
			remoteInfo = "smart_ptr-modularize";
		};
		2AD51502AD51502AD5150000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 2338EB02338EB02338EB0000;
			remoteInfo = "exception-modularize";
		};
		2AD58A02AD58A02AD58A0000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 2340FD02340FD02340FD0000;
			remoteInfo = "utility-modularize";
		};
		2AD60102AD60102AD6010000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 234902023490202349020000;
			remoteInfo = "integer-modularize";
		};
		2AD67802AD67802AD6780000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 23510D023510D023510D0000;
			remoteInfo = "detail-modularize";
		};
		2AD6EF02AD6EF02AD6EF0000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 235913023591302359130000;
			remoteInfo = "static_assert-modularize";
		};
		2AD76702AD76702AD7670000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 236127023612702361270000;
			remoteInfo = "tuple-modularize";
		};
		2AD7DE02AD7DE02AD7DE0000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 236931023693102369310000;
			remoteInfo = "function_types-modularize";
		};
		2AD85602AD85602AD8560000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 237149023714902371490000;
			remoteInfo = "fusion-modularize";
		};
		2AD8CB02AD8CB02AD8CB0000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 23794A023794A023794A0000;
			remoteInfo = "typeof-modularize";
		};
		2AD8D402AD8D402AD8D40000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 24CC87024CC87024CC870000;
			remoteInfo = "array-modularize";
		};
		2AD94902AD94902AD9490000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 238154023815402381540000;
			remoteInfo = "proto-modularize";
		};
		2AD9C002AD9C002AD9C00000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 238955023895502389550000;
			remoteInfo = "intrusive-modularize";
		};
		2ADA3802ADA3802ADA380000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 239169023916902391690000;
			remoteInfo = "logic-modularize";
		};
		2ADAAF02ADAAF02ADAAF0000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 23996F023996F023996F0000;
			remoteInfo = "numeric-modularize";
		};
		2ADB2602ADB2602ADB260000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 23A171023A171023A1710000;
			remoteInfo = "xpressive-modularize";
		};
		2ADB9E02ADB9E02ADB9E0000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 23A97A023A97A023A97A0000;
			remoteInfo = "optional-modularize";
		};
		2ADC1502ADC1502ADC150000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 23B196023B196023B1960000;
			remoteInfo = "tokenizer-modularize";
		};
		2ADC8F02ADC8F02ADC8F0000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 23B9A8023B9A8023B9A80000;
			remoteInfo = "io-modularize";
		};
		2ADD0802ADD0802ADD080000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 23C1BD023C1BD023C1BD0000;
			remoteInfo = "bind-modularize";
		};
		2ADD8102ADD8102ADD810000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 23C9C5023C9C5023C9C50000;
			remoteInfo = "date_time-modularize";
		};
		2ADDFB02ADDFB02ADDFB0000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 241020024102002410200000;
			remoteInfo = "thread-modularize";
		};
		2ADE7402ADE7402ADE740000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 245237024523702452370000;
			remoteInfo = "regex-modularize";
		};
		2ADEED02ADEED02ADEED0000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 24B47E024B47E024B47E0000;
			remoteInfo = "algorithm-modularize";
		};
		2ADF6702ADF6702ADF670000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 24BC83024BC83024BC830000;
			remoteInfo = "range-modularize";
		};
		2ADFE002ADFE002ADFE00000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 24C485024C485024C4850000;
			remoteInfo = "foreach-modularize";
		};
		2AE0DC02AE0DC02AE0DC0000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 24D48F024D48F024D48F0000;
			remoteInfo = "functional-modularize";
		};
		2AE15402AE15402AE1540000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 24DCA4024DCA4024DCA40000;
			remoteInfo = "unordered-modularize";
		};
		2AE1CE02AE1CE02AE1CE0000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 24E4B2024E4B2024E4B20000;
			remoteInfo = "pool-modularize";
		};
		2AE24702AE24702AE2470000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 24ECB9024ECB9024ECB90000;
			remoteInfo = "spirit-modularize";
		};
		2AE2C002AE2C002AE2C00000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 24F4BA024F4BA024F4BA0000;
			remoteInfo = "variant-modularize";
		};
		2AE33902AE33902AE3390000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 2500C602500C602500C60000;
			remoteInfo = "serialization-modularize";
		};
		2AE3B302AE3B302AE3B30000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 25BE68025BE68025BE680000;
			remoteInfo = "format-modularize";
		};
		2AE42C02AE42C02AE42C0000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 25C66D025C66D025C66D0000;
			remoteInfo = "math-modularize";
		};
		2AE4A502AE4A502AE4A50000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 25CE6D025CE6D025CE6D0000;
			remoteInfo = "multi_index-modularize";
		};
		2AE51F02AE51F02AE51F0000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 25D673025D673025D6730000;
			remoteInfo = "any-modularize";
		};
		2AE59802AE59802AE5980000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 25DE7F025DE7F025DE7F0000;
			remoteInfo = "random-modularize";
		};
		2AE61102AE61102AE6110000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 25E68D025E68D025E68D0000;
			remoteInfo = "graph-modularize";
		};
		2AE68A02AE68A02AE68A0000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 262829026282902628290000;
			remoteInfo = "Python-modularize";
		};
		2AE70302AE70302AE7030000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 26A399026A399026A3990000;
			remoteInfo = "parameter-modularize";
		};
		2AE77D02AE77D02AE77D0000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 26AC2F026AC2F026AC2F0000;
			remoteInfo = "accumulators-modularize";
		};
		2AE7F702AE7F702AE7F70000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 26BF35026BF35026BF350000;
			remoteInfo = "system-modularize";
		};
		2AE87002AE87002AE8700000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 2700CC02700CC02700CC0000;
			remoteInfo = "asio-modularize";
		};
		2AE8E902AE8E902AE8E90000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 2708C902708C902708C90000;
			remoteInfo = "circular_buffer-modularize";
		};
		2AE96302AE96302AE9630000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 2710D202710D202710D20000;
			remoteInfo = "ptr_container-modularize";
		};
		2AE9DD02AE9DD02AE9DD0000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 2718DD02718DD02718DD0000;
			remoteInfo = "assign-modularize";
		};
		2AEA5602AEA5602AEA560000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 2720E202720E202720E20000;
			remoteInfo = "bimap-modularize";
		};
		2AEACF02AEACF02AEACF0000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 2728EB02728EB02728EB0000;
			remoteInfo = "compatibility-modularize";
		};
		2AEB4902AEB4902AEB490000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 273130027313002731300000;
			remoteInfo = "crc-modularize";
		};
		2AEBC202AEBC202AEBC20000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 273939027393902739390000;
			remoteInfo = "timer-modularize";
		};
		2AEC3B02AEC3B02AEC3B0000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 27418A027418A027418A0000;
			remoteInfo = "test-modularize";
		};
		2AECB402AECB402AECB40000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 2814D802814D802814D80000;
			remoteInfo = "dynamic_bitset-modularize";
		};
		2AED2E02AED2E02AED2E0000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 281CEE0281CEE0281CEE0000;
			remoteInfo = "filesystem-modularize";
		};
		2AEDA802AEDA802AEDA80000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 286185028618502861850000;
			remoteInfo = "interprocess-modularize";
		};
		2AEE2202AEE2202AEE220000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 286991028699102869910000;
			remoteInfo = "flyweight-modularize";
		};
		2AEE9C02AEE9C02AEE9C0000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 287196028719602871960000;
			remoteInfo = "gil-modularize";
		};
		2AEF1502AEF1502AEF150000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 2879AC02879AC02879AC0000;
			remoteInfo = "mpi-modularize";
		};
		2AEF8E02AEF8E02AEF8E0000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 291AD10291AD10291AD10000;
			remoteInfo = "iostreams-modularize";
		};
		2AEFF902AEFF902AEFF90000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 295F430295F430295F430000;
			remoteInfo = "lambda-modularize";
		};
		2AF07202AF07202AF0720000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 29674D029674D029674D0000;
			remoteInfo = "multi_array-modularize";
		};
		2AF0EC02AF0EC02AF0EC0000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 296F6B0296F6B0296F6B0000;
			remoteInfo = "program_options-modularize";
		};
		2AF16602AF16602AF1660000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 29C20B029C20B029C20B0000;
			remoteInfo = "rational-modularize";
		};
		2AF1DF02AF1DF02AF1DF0000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 29CA16029CA16029CA160000;
			remoteInfo = "signals-modularize";
		};
		2AF25802AF25802AF2580000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 2A14D202A14D202A14D20000;
			remoteInfo = "signals2-modularize";
		};
		2AF2D102AF2D102AF2D10000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 2A1CD602A1CD602A1CD60000;
			remoteInfo = "statechart-modularize";
		};
		2AF34B02AF34B02AF34B0000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 2A24DD02A24DD02A24DD0000;
			remoteInfo = "tr1-modularize";
		};
		2AF3C402AF3C402AF3C40000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 2A2CE402A2CE402A2CE40000;
			remoteInfo = "units-modularize";
		};
		2AF43D02AF43D02AF43D0000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 22A47E022A47E022A47E0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 2A34F202A34F202A34F20000;
			remoteInfo = "wave-modularize";
		};
/* End PBXContainerItemProxy section */

/* Begin PBXFileReference section */
		22AD3C022AD3C022AD3C0000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeLists.txt; sourceTree = "<absolute>"; };
		22F25E022F25E022F25E0000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/CMakeLists.txt; sourceTree = "<absolute>"; };
		22FAC1022FAC1022FAC10000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/CMakeLists.txt; sourceTree = "<absolute>"; };
		23073B023073B023073B0000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/CMakeLists.txt; sourceTree = "<absolute>"; };
		230F7E0230F7E0230F7E0000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/CMakeLists.txt; sourceTree = "<absolute>"; };
		23178A023178A023178A0000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/CMakeLists.txt; sourceTree = "<absolute>"; };
		231FA00231FA00231FA00000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/CMakeLists.txt; sourceTree = "<absolute>"; };
		2327B002327B002327B00000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/CMakeLists.txt; sourceTree = "<absolute>"; };
		232FBF0232FBF0232FBF0000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/CMakeLists.txt; sourceTree = "<absolute>"; };
		2337D102337D102337D10000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/CMakeLists.txt; sourceTree = "<absolute>"; };
		233FE30233FE30233FE30000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/CMakeLists.txt; sourceTree = "<absolute>"; };
		2347DF02347DF02347DF0000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/CMakeLists.txt; sourceTree = "<absolute>"; };
		234FF00234FF00234FF00000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/CMakeLists.txt; sourceTree = "<absolute>"; };
		2357F802357F802357F80000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/CMakeLists.txt; sourceTree = "<absolute>"; };
		23600B023600B023600B0000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/CMakeLists.txt; sourceTree = "<absolute>"; };
		236816023681602368160000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/CMakeLists.txt; sourceTree = "<absolute>"; };
		23702D023702D023702D0000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/CMakeLists.txt; sourceTree = "<absolute>"; };
		237825023782502378250000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/CMakeLists.txt; sourceTree = "<absolute>"; };
		238039023803902380390000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/CMakeLists.txt; sourceTree = "<absolute>"; };
		23883A023883A023883A0000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/CMakeLists.txt; sourceTree = "<absolute>"; };
		23904F023904F023904F0000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/CMakeLists.txt; sourceTree = "<absolute>"; };
		239854023985402398540000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/CMakeLists.txt; sourceTree = "<absolute>"; };
		23A04B023A04B023A04B0000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/CMakeLists.txt; sourceTree = "<absolute>"; };
		23A825023A825023A8250000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/CMakeLists.txt; sourceTree = "<absolute>"; };
		23B067023B067023B0670000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/CMakeLists.txt; sourceTree = "<absolute>"; };
		23B890023B890023B8900000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/CMakeLists.txt; sourceTree = "<absolute>"; };
		23C097023C097023C0970000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/CMakeLists.txt; sourceTree = "<absolute>"; };
		23C8AA023C8AA023C8AA0000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/CMakeLists.txt; sourceTree = "<absolute>"; };
		23D0B2023D0B2023D0B20000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/CMakeLists.txt; sourceTree = "<absolute>"; };
		23D8A7023D8A7023D8A70000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/src/CMakeLists.txt; sourceTree = "<absolute>"; };
		23D93B023D93B023D93B0000 /* greg_month.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = greg_month.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/src/gregorian/greg_month.cpp; sourceTree = "<absolute>"; };
		23DA21023DA21023DA210000 /* greg_weekday.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = greg_weekday.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/src/gregorian/greg_weekday.cpp; sourceTree = "<absolute>"; };
		23DADE023DADE023DADE0000 /* date_generators.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = date_generators.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/src/gregorian/date_generators.cpp; sourceTree = "<absolute>"; };
		23E68D023E68D023E68D0000 /* libboost_date_time-mt.dylib */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.dylib"; path = "libboost_date_time-mt.dylib"; sourceTree = BUILT_PRODUCTS_DIR; };
		23F37C023F37C023F37C0000 /* libboost_date_time-mt-d.dylib */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.dylib"; path = "libboost_date_time-mt-d.dylib"; sourceTree = BUILT_PRODUCTS_DIR; };
		240351024035102403510000 /* libboost_date_time-mt.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; path = "libboost_date_time-mt.a"; sourceTree = BUILT_PRODUCTS_DIR; };
		240F390240F390240F390000 /* libboost_date_time-mt-d.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; path = "libboost_date_time-mt-d.a"; sourceTree = BUILT_PRODUCTS_DIR; };
		2416FF02416FF02416FF0000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/CMakeLists.txt; sourceTree = "<absolute>"; };
		241EF90241EF90241EF90000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/src/CMakeLists.txt; sourceTree = "<absolute>"; };
		241F830241F830241F830000 /* thread.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = thread.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/src/pthread/thread.cpp; sourceTree = "<absolute>"; };
		242074024207402420740000 /* exceptions.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = exceptions.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/src/pthread/exceptions.cpp; sourceTree = "<absolute>"; };
		24212D024212D024212D0000 /* once.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = once.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/src/pthread/once.cpp; sourceTree = "<absolute>"; };
		242CC60242CC60242CC60000 /* libboost_thread-mt.dylib */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.dylib"; path = "libboost_thread-mt.dylib"; sourceTree = BUILT_PRODUCTS_DIR; };
		2439AA02439AA02439AA0000 /* libboost_thread-mt-d.dylib */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.dylib"; path = "libboost_thread-mt-d.dylib"; sourceTree = BUILT_PRODUCTS_DIR; };
		244580024458002445800000 /* libboost_thread-mt.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; path = "libboost_thread-mt.a"; sourceTree = BUILT_PRODUCTS_DIR; };
		245150024515002451500000 /* libboost_thread-mt-d.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; path = "libboost_thread-mt-d.a"; sourceTree = BUILT_PRODUCTS_DIR; };
		245914024591402459140000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/CMakeLists.txt; sourceTree = "<absolute>"; };
		246124024612402461240000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/src/CMakeLists.txt; sourceTree = "<absolute>"; };
		2461EC02461EC02461EC0000 /* c_regex_traits.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = c_regex_traits.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/src/c_regex_traits.cpp; sourceTree = "<absolute>"; };
		24629C024629C024629C0000 /* cpp_regex_traits.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = cpp_regex_traits.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/src/cpp_regex_traits.cpp; sourceTree = "<absolute>"; };
		246357024635702463570000 /* cregex.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = cregex.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/src/cregex.cpp; sourceTree = "<absolute>"; };
		246411024641102464110000 /* fileiter.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = fileiter.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/src/fileiter.cpp; sourceTree = "<absolute>"; };
		2464C902464C902464C90000 /* icu.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = icu.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/src/icu.cpp; sourceTree = "<absolute>"; };
		24658A024658A024658A0000 /* instances.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = instances.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/src/instances.cpp; sourceTree = "<absolute>"; };
		24663F024663F024663F0000 /* posix_api.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = posix_api.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/src/posix_api.cpp; sourceTree = "<absolute>"; };
		2466F702466F702466F70000 /* regex.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = regex.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/src/regex.cpp; sourceTree = "<absolute>"; };
		2467B102467B102467B10000 /* regex_debug.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = regex_debug.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/src/regex_debug.cpp; sourceTree = "<absolute>"; };
		246870024687002468700000 /* regex_raw_buffer.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = regex_raw_buffer.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/src/regex_raw_buffer.cpp; sourceTree = "<absolute>"; };
		24692F024692F024692F0000 /* regex_traits_defaults.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = regex_traits_defaults.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/src/regex_traits_defaults.cpp; sourceTree = "<absolute>"; };
		2469ED02469ED02469ED0000 /* static_mutex.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = static_mutex.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/src/static_mutex.cpp; sourceTree = "<absolute>"; };
		246AA60246AA60246AA60000 /* w32_regex_traits.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = w32_regex_traits.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/src/w32_regex_traits.cpp; sourceTree = "<absolute>"; };
		246B620246B620246B620000 /* wc_regex_traits.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = wc_regex_traits.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/src/wc_regex_traits.cpp; sourceTree = "<absolute>"; };
		246C1D0246C1D0246C1D0000 /* wide_posix_api.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = wide_posix_api.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/src/wide_posix_api.cpp; sourceTree = "<absolute>"; };
		246CD70246CD70246CD70000 /* winstances.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = winstances.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/src/winstances.cpp; sourceTree = "<absolute>"; };
		246D8F0246D8F0246D8F0000 /* usinstances.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = usinstances.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/src/usinstances.cpp; sourceTree = "<absolute>"; };
		24793B024793B024793B0000 /* libboost_regex-mt.dylib */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.dylib"; path = "libboost_regex-mt.dylib"; sourceTree = BUILT_PRODUCTS_DIR; };
		248D640248D640248D640000 /* libboost_regex-mt-d.dylib */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.dylib"; path = "libboost_regex-mt-d.dylib"; sourceTree = BUILT_PRODUCTS_DIR; };
		24A08C024A08C024A08C0000 /* libboost_regex-mt.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; path = "libboost_regex-mt.a"; sourceTree = BUILT_PRODUCTS_DIR; };
		24B39F024B39F024B39F0000 /* libboost_regex-mt-d.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; path = "libboost_regex-mt-d.a"; sourceTree = BUILT_PRODUCTS_DIR; };
		24BB6A024BB6A024BB6A0000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/CMakeLists.txt; sourceTree = "<absolute>"; };
		24C363024C363024C3630000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/CMakeLists.txt; sourceTree = "<absolute>"; };
		24CB61024CB61024CB610000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/CMakeLists.txt; sourceTree = "<absolute>"; };
		24D374024D374024D3740000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/CMakeLists.txt; sourceTree = "<absolute>"; };
		24DB8A024DB8A024DB8A0000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/CMakeLists.txt; sourceTree = "<absolute>"; };
		24E38F024E38F024E38F0000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/CMakeLists.txt; sourceTree = "<absolute>"; };
		24EB9E024EB9E024EB9E0000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/CMakeLists.txt; sourceTree = "<absolute>"; };
		24F398024F398024F3980000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/CMakeLists.txt; sourceTree = "<absolute>"; };
		24FBA7024FBA7024FBA70000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/CMakeLists.txt; sourceTree = "<absolute>"; };
		2507B402507B402507B40000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/CMakeLists.txt; sourceTree = "<absolute>"; };
		250FC20250FC20250FC20000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/src/CMakeLists.txt; sourceTree = "<absolute>"; };
		251069025106902510690000 /* basic_archive.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = basic_archive.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/src/basic_archive.cpp; sourceTree = "<absolute>"; };
		251135025113502511350000 /* basic_iarchive.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = basic_iarchive.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/src/basic_iarchive.cpp; sourceTree = "<absolute>"; };
		2511F002511F002511F00000 /* basic_iserializer.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = basic_iserializer.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/src/basic_iserializer.cpp; sourceTree = "<absolute>"; };
		2512B002512B002512B00000 /* basic_oarchive.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = basic_oarchive.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/src/basic_oarchive.cpp; sourceTree = "<absolute>"; };
		25136C025136C025136C0000 /* basic_oserializer.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = basic_oserializer.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/src/basic_oserializer.cpp; sourceTree = "<absolute>"; };
		25142D025142D025142D0000 /* basic_pointer_iserializer.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = basic_pointer_iserializer.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/src/basic_pointer_iserializer.cpp; sourceTree = "<absolute>"; };
		2514F202514F202514F20000 /* basic_pointer_oserializer.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = basic_pointer_oserializer.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/src/basic_pointer_oserializer.cpp; sourceTree = "<absolute>"; };
		2515AC02515AC02515AC0000 /* basic_serializer_map.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = basic_serializer_map.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/src/basic_serializer_map.cpp; sourceTree = "<absolute>"; };
		251670025167002516700000 /* basic_text_iprimitive.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = basic_text_iprimitive.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/src/basic_text_iprimitive.cpp; sourceTree = "<absolute>"; };
		251733025173302517330000 /* basic_text_oprimitive.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = basic_text_oprimitive.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/src/basic_text_oprimitive.cpp; sourceTree = "<absolute>"; };
		2517F702517F702517F70000 /* basic_xml_archive.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = basic_xml_archive.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/src/basic_xml_archive.cpp; sourceTree = "<absolute>"; };
		2518B802518B802518B80000 /* binary_iarchive.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = binary_iarchive.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/src/binary_iarchive.cpp; sourceTree = "<absolute>"; };
		251973025197302519730000 /* binary_oarchive.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = binary_oarchive.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/src/binary_oarchive.cpp; sourceTree = "<absolute>"; };
		251A2E0251A2E0251A2E0000 /* extended_type_info.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = extended_type_info.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/src/extended_type_info.cpp; sourceTree = "<absolute>"; };
		251AF00251AF00251AF00000 /* extended_type_info_typeid.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = extended_type_info_typeid.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/src/extended_type_info_typeid.cpp; sourceTree = "<absolute>"; };
		251BB40251BB40251BB40000 /* extended_type_info_no_rtti.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = extended_type_info_no_rtti.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/src/extended_type_info_no_rtti.cpp; sourceTree = "<absolute>"; };
		251C6E0251C6E0251C6E0000 /* polymorphic_iarchive.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = polymorphic_iarchive.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/src/polymorphic_iarchive.cpp; sourceTree = "<absolute>"; };
		251D390251D390251D390000 /* polymorphic_oarchive.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = polymorphic_oarchive.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/src/polymorphic_oarchive.cpp; sourceTree = "<absolute>"; };
		251DF80251DF80251DF80000 /* stl_port.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = stl_port.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/src/stl_port.cpp; sourceTree = "<absolute>"; };
		251EB40251EB40251EB40000 /* text_iarchive.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = text_iarchive.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/src/text_iarchive.cpp; sourceTree = "<absolute>"; };
		251F6F0251F6F0251F6F0000 /* text_oarchive.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = text_oarchive.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/src/text_oarchive.cpp; sourceTree = "<absolute>"; };
		25202A025202A025202A0000 /* void_cast.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = void_cast.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/src/void_cast.cpp; sourceTree = "<absolute>"; };
		2520E502520E502520E50000 /* xml_grammar.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = xml_grammar.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/src/xml_grammar.cpp; sourceTree = "<absolute>"; };
		2521A002521A002521A00000 /* xml_iarchive.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = xml_iarchive.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/src/xml_iarchive.cpp; sourceTree = "<absolute>"; };
		25225B025225B025225B0000 /* xml_oarchive.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = xml_oarchive.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/src/xml_oarchive.cpp; sourceTree = "<absolute>"; };
		252DFE0252DFE0252DFE0000 /* libboost_serialization-mt.dylib */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.dylib"; path = "libboost_serialization-mt.dylib"; sourceTree = BUILT_PRODUCTS_DIR; };
		25469A025469A025469A0000 /* libboost_serialization-mt-d.dylib */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.dylib"; path = "libboost_serialization-mt-d.dylib"; sourceTree = BUILT_PRODUCTS_DIR; };
		255E0A0255E0A0255E0A0000 /* libboost_serialization-mt.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; path = "libboost_serialization-mt.a"; sourceTree = BUILT_PRODUCTS_DIR; };
		257559025755902575590000 /* libboost_serialization-mt-d.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; path = "libboost_serialization-mt-d.a"; sourceTree = BUILT_PRODUCTS_DIR; };
		257D1A0257D1A0257D1A0000 /* basic_text_woprimitive.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = basic_text_woprimitive.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/src/basic_text_woprimitive.cpp; sourceTree = "<absolute>"; };
		257D8E0257D8E0257D8E0000 /* basic_text_wiprimitive.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = basic_text_wiprimitive.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/src/basic_text_wiprimitive.cpp; sourceTree = "<absolute>"; };
		257E620257E620257E620000 /* text_wiarchive.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = text_wiarchive.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/src/text_wiarchive.cpp; sourceTree = "<absolute>"; };
		257FE80257FE80257FE80000 /* utf8_codecvt_facet.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = utf8_codecvt_facet.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/src/utf8_codecvt_facet.cpp; sourceTree = "<absolute>"; };
		257FEF0257FEF0257FEF0000 /* text_woarchive.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = text_woarchive.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/src/text_woarchive.cpp; sourceTree = "<absolute>"; };
		2580A502580A502580A50000 /* xml_wgrammar.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = xml_wgrammar.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/src/xml_wgrammar.cpp; sourceTree = "<absolute>"; };
		258168025816802581680000 /* xml_wiarchive.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = xml_wiarchive.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/src/xml_wiarchive.cpp; sourceTree = "<absolute>"; };
		258228025822802582280000 /* xml_woarchive.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = xml_woarchive.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/src/xml_woarchive.cpp; sourceTree = "<absolute>"; };
		2582E602582E602582E60000 /* codecvt_null.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = codecvt_null.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/src/codecvt_null.cpp; sourceTree = "<absolute>"; };
		258F400258F400258F400000 /* libboost_wserialization-mt.dylib */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.dylib"; path = "libboost_wserialization-mt.dylib"; sourceTree = BUILT_PRODUCTS_DIR; };
		259F7B0259F7B0259F7B0000 /* libboost_wserialization-mt-d.dylib */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.dylib"; path = "libboost_wserialization-mt-d.dylib"; sourceTree = BUILT_PRODUCTS_DIR; };
		25AE7D025AE7D025AE7D0000 /* libboost_wserialization-mt.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; path = "libboost_wserialization-mt.a"; sourceTree = BUILT_PRODUCTS_DIR; };
		25BD85025BD85025BD850000 /* libboost_wserialization-mt-d.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; path = "libboost_wserialization-mt-d.a"; sourceTree = BUILT_PRODUCTS_DIR; };
		25C548025C548025C5480000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/CMakeLists.txt; sourceTree = "<absolute>"; };
		25CD48025CD48025CD480000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/CMakeLists.txt; sourceTree = "<absolute>"; };
		25D55A025D55A025D55A0000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/CMakeLists.txt; sourceTree = "<absolute>"; };
		25DD61025DD61025DD610000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/CMakeLists.txt; sourceTree = "<absolute>"; };
		25E572025E572025E5720000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/CMakeLists.txt; sourceTree = "<absolute>"; };
		25ECF5025ECF5025ECF50000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/CMakeLists.txt; sourceTree = "<absolute>"; };
		25F4FA025F4FA025F4FA0000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/src/CMakeLists.txt; sourceTree = "<absolute>"; };
		25F584025F584025F5840000 /* read_graphviz_spirit.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = read_graphviz_spirit.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/src/read_graphviz_spirit.cpp; sourceTree = "<absolute>"; };
		260551026055102605510000 /* libboost_graph-mt.dylib */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.dylib"; path = "libboost_graph-mt.dylib"; sourceTree = BUILT_PRODUCTS_DIR; };
		261128026112802611280000 /* libboost_graph-mt-d.dylib */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.dylib"; path = "libboost_graph-mt-d.dylib"; sourceTree = BUILT_PRODUCTS_DIR; };
		261BF40261BF40261BF40000 /* libboost_graph-mt.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; path = "libboost_graph-mt.a"; sourceTree = BUILT_PRODUCTS_DIR; };
		2626C902626C902626C90000 /* libboost_graph-mt-d.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; path = "libboost_graph-mt-d.a"; sourceTree = BUILT_PRODUCTS_DIR; };
		262E830262E830262E830000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/CMakeLists.txt; sourceTree = "<absolute>"; };
		263685026368502636850000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/src/CMakeLists.txt; sourceTree = "<absolute>"; };
		263721026372102637210000 /* numeric.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = numeric.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/src/numeric.cpp; sourceTree = "<absolute>"; };
		263885026388502638850000 /* list.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = list.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/src/list.cpp; sourceTree = "<absolute>"; };
		26393F026393F026393F0000 /* long.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = long.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/src/long.cpp; sourceTree = "<absolute>"; };
		2639F902639F902639F90000 /* dict.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = dict.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/src/dict.cpp; sourceTree = "<absolute>"; };
		263AB20263AB20263AB20000 /* tuple.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = tuple.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/src/tuple.cpp; sourceTree = "<absolute>"; };
		263B700263B700263B700000 /* str.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = str.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/src/str.cpp; sourceTree = "<absolute>"; };
		263C290263C290263C290000 /* slice.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = slice.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/src/slice.cpp; sourceTree = "<absolute>"; };
		263CE20263CE20263CE20000 /* from_python.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = from_python.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/src/converter/from_python.cpp; sourceTree = "<absolute>"; };
		263D9E0263D9E0263D9E0000 /* registry.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = registry.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/src/converter/registry.cpp; sourceTree = "<absolute>"; };
		263E5F0263E5F0263E5F0000 /* type_id.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = type_id.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/src/converter/type_id.cpp; sourceTree = "<absolute>"; };
		263F1C0263F1C0263F1C0000 /* enum.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = enum.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/src/object/enum.cpp; sourceTree = "<absolute>"; };
		263FD20263FD20263FD20000 /* class.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = class.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/src/object/class.cpp; sourceTree = "<absolute>"; };
		26408D026408D026408D0000 /* function.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = function.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/src/object/function.cpp; sourceTree = "<absolute>"; };
		264148026414802641480000 /* inheritance.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = inheritance.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/src/object/inheritance.cpp; sourceTree = "<absolute>"; };
		264203026420302642030000 /* life_support.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = life_support.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/src/object/life_support.cpp; sourceTree = "<absolute>"; };
		2642BE02642BE02642BE0000 /* pickle_support.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = pickle_support.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/src/object/pickle_support.cpp; sourceTree = "<absolute>"; };
		264379026437902643790000 /* errors.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = errors.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/src/errors.cpp; sourceTree = "<absolute>"; };
		26443A026443A026443A0000 /* module.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = module.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/src/module.cpp; sourceTree = "<absolute>"; };
		2644F602644F602644F60000 /* builtin_converters.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = builtin_converters.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/src/converter/builtin_converters.cpp; sourceTree = "<absolute>"; };
		2645B302645B302645B30000 /* arg_to_python_base.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = arg_to_python_base.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/src/converter/arg_to_python_base.cpp; sourceTree = "<absolute>"; };
		264674026467402646740000 /* iterator.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = iterator.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/src/object/iterator.cpp; sourceTree = "<absolute>"; };
		264733026473302647330000 /* stl_iterator.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = stl_iterator.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/src/object/stl_iterator.cpp; sourceTree = "<absolute>"; };
		2647EB02647EB02647EB0000 /* object_protocol.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = object_protocol.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/src/object_protocol.cpp; sourceTree = "<absolute>"; };
		2648A602648A602648A60000 /* object_operators.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = object_operators.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/src/object_operators.cpp; sourceTree = "<absolute>"; };
		264964026496402649640000 /* wrapper.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = wrapper.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/src/wrapper.cpp; sourceTree = "<absolute>"; };
		264A1C0264A1C0264A1C0000 /* import.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = import.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/src/import.cpp; sourceTree = "<absolute>"; };
		264AD30264AD30264AD30000 /* exec.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = exec.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/src/exec.cpp; sourceTree = "<absolute>"; };
		264B8F0264B8F0264B8F0000 /* function_doc_signature.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = function_doc_signature.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/src/object/function_doc_signature.cpp; sourceTree = "<absolute>"; };
		2656F202656F202656F20000 /* libboost_python-mt.dylib */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.dylib"; path = "libboost_python-mt.dylib"; sourceTree = BUILT_PRODUCTS_DIR; };
		2670C902670C902670C90000 /* libboost_python-mt-d.dylib */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.dylib"; path = "libboost_python-mt-d.dylib"; sourceTree = BUILT_PRODUCTS_DIR; };
		2689BE02689BE02689BE0000 /* libboost_python-mt.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; path = "libboost_python-mt.a"; sourceTree = BUILT_PRODUCTS_DIR; };
		26A2C0026A2C0026A2C00000 /* libboost_python-mt-d.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; path = "libboost_python-mt-d.a"; sourceTree = BUILT_PRODUCTS_DIR; };
		26AA8A026AA8A026AA8A0000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/parameter/CMakeLists.txt; sourceTree = "<absolute>"; };
		26B31C026B31C026B31C0000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/accumulators/CMakeLists.txt; sourceTree = "<absolute>"; };
		26B334026B334026B3340000 /* main.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = main.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/accumulators/example/main.cpp; sourceTree = "<absolute>"; };
		26B485026B485026B4850000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/accumulators/example/CMakeLists.txt; sourceTree = "<absolute>"; };
		26BE4F026BE4F026BE4F0000 /* accumulators-accumulators_example */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = "accumulators-accumulators_example"; sourceTree = BUILT_PRODUCTS_DIR; };
		26C625026C625026C6250000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/CMakeLists.txt; sourceTree = "<absolute>"; };
		26CE2C026CE2C026CE2C0000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/src/CMakeLists.txt; sourceTree = "<absolute>"; };
		26CEEF026CEEF026CEEF0000 /* error_code.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = error_code.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/src/error_code.cpp; sourceTree = "<absolute>"; };
		26DA82026DA82026DA820000 /* libboost_system-mt.dylib */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.dylib"; path = "libboost_system-mt.dylib"; sourceTree = BUILT_PRODUCTS_DIR; };
		26E653026E653026E6530000 /* libboost_system-mt-d.dylib */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.dylib"; path = "libboost_system-mt-d.dylib"; sourceTree = BUILT_PRODUCTS_DIR; };
		26F11D026F11D026F11D0000 /* libboost_system-mt.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; path = "libboost_system-mt.a"; sourceTree = BUILT_PRODUCTS_DIR; };
		26FBF3026FBF3026FBF30000 /* libboost_system-mt-d.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; path = "libboost_system-mt-d.a"; sourceTree = BUILT_PRODUCTS_DIR; };
		2707A502707A502707A50000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/asio/CMakeLists.txt; sourceTree = "<absolute>"; };
		270FB50270FB50270FB50000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/circular_buffer/CMakeLists.txt; sourceTree = "<absolute>"; };
		2717BE02717BE02717BE0000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/ptr_container/CMakeLists.txt; sourceTree = "<absolute>"; };
		271FBE0271FBE0271FBE0000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/assign/CMakeLists.txt; sourceTree = "<absolute>"; };
		2727F502727F502727F50000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bimap/CMakeLists.txt; sourceTree = "<absolute>"; };
		273015027301502730150000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/compatibility/CMakeLists.txt; sourceTree = "<absolute>"; };
		27381B027381B027381B0000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/crc/CMakeLists.txt; sourceTree = "<absolute>"; };
		27406F027406F027406F0000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/CMakeLists.txt; sourceTree = "<absolute>"; };
		274840027484002748400000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/CMakeLists.txt; sourceTree = "<absolute>"; };
		27503A027503A027503A0000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/src/CMakeLists.txt; sourceTree = "<absolute>"; };
		2750C602750C602750C60000 /* execution_monitor.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = execution_monitor.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/src/execution_monitor.cpp; sourceTree = "<absolute>"; };
		275208027520802752080000 /* cpp_main.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = cpp_main.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/src/cpp_main.cpp; sourceTree = "<absolute>"; };
		2752BD02752BD02752BD0000 /* debug.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = debug.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/src/debug.cpp; sourceTree = "<absolute>"; };
		275DF70275DF70275DF70000 /* libboost_prg_exec_monitor-mt.dylib */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.dylib"; path = "libboost_prg_exec_monitor-mt.dylib"; sourceTree = BUILT_PRODUCTS_DIR; };
		276AE60276AE60276AE60000 /* libboost_prg_exec_monitor-mt-d.dylib */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.dylib"; path = "libboost_prg_exec_monitor-mt-d.dylib"; sourceTree = BUILT_PRODUCTS_DIR; };
		2776BE02776BE02776BE0000 /* libboost_prg_exec_monitor-mt.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; path = "libboost_prg_exec_monitor-mt.a"; sourceTree = BUILT_PRODUCTS_DIR; };
		2782A402782A402782A40000 /* libboost_prg_exec_monitor-mt-d.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; path = "libboost_prg_exec_monitor-mt-d.a"; sourceTree = BUILT_PRODUCTS_DIR; };
		278AEC0278AEC0278AEC0000 /* compiler_log_formatter.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = compiler_log_formatter.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/src/compiler_log_formatter.cpp; sourceTree = "<absolute>"; };
		278D1F0278D1F0278D1F0000 /* framework.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = framework.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/src/framework.cpp; sourceTree = "<absolute>"; };
		278DD50278DD50278DD50000 /* plain_report_formatter.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = plain_report_formatter.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/src/plain_report_formatter.cpp; sourceTree = "<absolute>"; };
		278E8E0278E8E0278E8E0000 /* progress_monitor.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = progress_monitor.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/src/progress_monitor.cpp; sourceTree = "<absolute>"; };
		278F4D0278F4D0278F4D0000 /* results_collector.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = results_collector.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/src/results_collector.cpp; sourceTree = "<absolute>"; };
		27900A027900A027900A0000 /* results_reporter.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = results_reporter.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/src/results_reporter.cpp; sourceTree = "<absolute>"; };
		2790C602790C602790C60000 /* test_main.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = test_main.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/src/test_main.cpp; sourceTree = "<absolute>"; };
		27917F027917F027917F0000 /* test_tools.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = test_tools.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/src/test_tools.cpp; sourceTree = "<absolute>"; };
		279239027923902792390000 /* unit_test_log.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = unit_test_log.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/src/unit_test_log.cpp; sourceTree = "<absolute>"; };
		2792F202792F202792F20000 /* unit_test_main.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = unit_test_main.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/src/unit_test_main.cpp; sourceTree = "<absolute>"; };
		2793AD02793AD02793AD0000 /* unit_test_monitor.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = unit_test_monitor.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/src/unit_test_monitor.cpp; sourceTree = "<absolute>"; };
		279469027946902794690000 /* unit_test_parameters.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = unit_test_parameters.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/src/unit_test_parameters.cpp; sourceTree = "<absolute>"; };
		27951E027951E027951E0000 /* unit_test_suite.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = unit_test_suite.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/src/unit_test_suite.cpp; sourceTree = "<absolute>"; };
		2795DB02795DB02795DB0000 /* xml_log_formatter.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = xml_log_formatter.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/src/xml_log_formatter.cpp; sourceTree = "<absolute>"; };
		279697027969702796970000 /* xml_report_formatter.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = xml_report_formatter.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/src/xml_report_formatter.cpp; sourceTree = "<absolute>"; };
		27A0DC027A0DC027A0DC0000 /* libboost_test_exec_monitor-mt.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; path = "libboost_test_exec_monitor-mt.a"; sourceTree = BUILT_PRODUCTS_DIR; };
		27B404027B404027B4040000 /* libboost_test_exec_monitor-mt-d.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; path = "libboost_test_exec_monitor-mt-d.a"; sourceTree = BUILT_PRODUCTS_DIR; };
		27BDB0027BDB0027BDB00000 /* exception_safety.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = exception_safety.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/src/exception_safety.cpp; sourceTree = "<absolute>"; };
		27BF80027BF80027BF800000 /* interaction_based.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = interaction_based.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/src/interaction_based.cpp; sourceTree = "<absolute>"; };
		27C03B027C03B027C03B0000 /* logged_expectations.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = logged_expectations.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/src/logged_expectations.cpp; sourceTree = "<absolute>"; };
		27D1FE027D1FE027D1FE0000 /* libboost_unit_test_framework-mt.dylib */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.dylib"; path = "libboost_unit_test_framework-mt.dylib"; sourceTree = BUILT_PRODUCTS_DIR; };
		27E74B027E74B027E74B0000 /* libboost_unit_test_framework-mt-d.dylib */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.dylib"; path = "libboost_unit_test_framework-mt-d.dylib"; sourceTree = BUILT_PRODUCTS_DIR; };
		27FB58027FB58027FB580000 /* libboost_unit_test_framework-mt.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; path = "libboost_unit_test_framework-mt.a"; sourceTree = BUILT_PRODUCTS_DIR; };
		2813AC02813AC02813AC0000 /* libboost_unit_test_framework-mt-d.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; path = "libboost_unit_test_framework-mt-d.a"; sourceTree = BUILT_PRODUCTS_DIR; };
		281BD20281BD20281BD20000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/dynamic_bitset/CMakeLists.txt; sourceTree = "<absolute>"; };
		2823DA02823DA02823DA0000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/filesystem/CMakeLists.txt; sourceTree = "<absolute>"; };
		282BD80282BD80282BD80000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/filesystem/src/CMakeLists.txt; sourceTree = "<absolute>"; };
		282BFD0282BFD0282BFD0000 /* operations.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = operations.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/filesystem/src/operations.cpp; sourceTree = "<absolute>"; };
		282D510282D510282D510000 /* path.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = path.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/filesystem/src/path.cpp; sourceTree = "<absolute>"; };
		282E070282E070282E070000 /* portability.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = portability.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/filesystem/src/portability.cpp; sourceTree = "<absolute>"; };
		282EC30282EC30282EC30000 /* utf8_codecvt_facet.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = utf8_codecvt_facet.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/filesystem/src/utf8_codecvt_facet.cpp; sourceTree = "<absolute>"; };
		283A520283A520283A520000 /* libboost_filesystem-mt.dylib */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.dylib"; path = "libboost_filesystem-mt.dylib"; sourceTree = BUILT_PRODUCTS_DIR; };
		2847C202847C202847C20000 /* libboost_filesystem-mt-d.dylib */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.dylib"; path = "libboost_filesystem-mt-d.dylib"; sourceTree = BUILT_PRODUCTS_DIR; };
		28542F028542F028542F0000 /* libboost_filesystem-mt.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; path = "libboost_filesystem-mt.a"; sourceTree = BUILT_PRODUCTS_DIR; };
		2860A702860A702860A70000 /* libboost_filesystem-mt-d.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; path = "libboost_filesystem-mt-d.a"; sourceTree = BUILT_PRODUCTS_DIR; };
		286872028687202868720000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/interprocess/CMakeLists.txt; sourceTree = "<absolute>"; };
		28707E028707E028707E0000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/flyweight/CMakeLists.txt; sourceTree = "<absolute>"; };
		287887028788702878870000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/gil/CMakeLists.txt; sourceTree = "<absolute>"; };
		288014028801402880140000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpi/CMakeLists.txt; sourceTree = "<absolute>"; };
		28869A028869A028869A0000 /* broadcast.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = broadcast.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpi/src/broadcast.cpp; sourceTree = "<absolute>"; };
		28889D028889D028889D0000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpi/src/CMakeLists.txt; sourceTree = "<absolute>"; };
		288A260288A260288A260000 /* communicator.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = communicator.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpi/src/communicator.cpp; sourceTree = "<absolute>"; };
		288ADD0288ADD0288ADD0000 /* computation_tree.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = computation_tree.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpi/src/computation_tree.cpp; sourceTree = "<absolute>"; };
		288B9A0288B9A0288B9A0000 /* content_oarchive.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = content_oarchive.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpi/src/content_oarchive.cpp; sourceTree = "<absolute>"; };
		288C560288C560288C560000 /* environment.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = environment.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpi/src/environment.cpp; sourceTree = "<absolute>"; };
		288D140288D140288D140000 /* exception.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = exception.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpi/src/exception.cpp; sourceTree = "<absolute>"; };
		288DCF0288DCF0288DCF0000 /* graph_communicator.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = graph_communicator.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpi/src/graph_communicator.cpp; sourceTree = "<absolute>"; };
		288E8B0288E8B0288E8B0000 /* group.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = group.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpi/src/group.cpp; sourceTree = "<absolute>"; };
		288F460288F460288F460000 /* intercommunicator.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = intercommunicator.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpi/src/intercommunicator.cpp; sourceTree = "<absolute>"; };
		28900B028900B028900B0000 /* mpi_datatype_cache.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = mpi_datatype_cache.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpi/src/mpi_datatype_cache.cpp; sourceTree = "<absolute>"; };
		2890C902890C902890C90000 /* mpi_datatype_oarchive.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = mpi_datatype_oarchive.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpi/src/mpi_datatype_oarchive.cpp; sourceTree = "<absolute>"; };
		289186028918602891860000 /* packed_iarchive.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = packed_iarchive.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpi/src/packed_iarchive.cpp; sourceTree = "<absolute>"; };
		289242028924202892420000 /* packed_oarchive.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = packed_oarchive.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpi/src/packed_oarchive.cpp; sourceTree = "<absolute>"; };
		2892FE02892FE02892FE0000 /* packed_skeleton_iarchive.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = packed_skeleton_iarchive.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpi/src/packed_skeleton_iarchive.cpp; sourceTree = "<absolute>"; };
		2893BB02893BB02893BB0000 /* packed_skeleton_oarchive.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = packed_skeleton_oarchive.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpi/src/packed_skeleton_oarchive.cpp; sourceTree = "<absolute>"; };
		289477028947702894770000 /* point_to_point.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = point_to_point.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpi/src/point_to_point.cpp; sourceTree = "<absolute>"; };
		28952F028952F028952F0000 /* request.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = request.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpi/src/request.cpp; sourceTree = "<absolute>"; };
		2895F802895F802895F80000 /* text_skeleton_oarchive.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = text_skeleton_oarchive.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpi/src/text_skeleton_oarchive.cpp; sourceTree = "<absolute>"; };
		28A14D028A14D028A14D0000 /* libboost_mpi-mt.dylib */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.dylib"; path = "libboost_mpi-mt.dylib"; sourceTree = BUILT_PRODUCTS_DIR; };
		28B637028B637028B6370000 /* libboost_mpi-mt-d.dylib */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.dylib"; path = "libboost_mpi-mt-d.dylib"; sourceTree = BUILT_PRODUCTS_DIR; };
		28C9F6028C9F6028C9F60000 /* libboost_mpi-mt.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; path = "libboost_mpi-mt.a"; sourceTree = BUILT_PRODUCTS_DIR; };
		28DDA2028DDA2028DDA20000 /* libboost_mpi-mt-d.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; path = "libboost_mpi-mt-d.a"; sourceTree = BUILT_PRODUCTS_DIR; };
		28E543028E543028E5430000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph_parallel/src/CMakeLists.txt; sourceTree = "<absolute>"; };
		28E5DB028E5DB028E5DB0000 /* mpi_process_group.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = mpi_process_group.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph_parallel/src/mpi_process_group.cpp; sourceTree = "<absolute>"; };
		28E743028E743028E7430000 /* tag_allocator.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = tag_allocator.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph_parallel/src/tag_allocator.cpp; sourceTree = "<absolute>"; };
		28F28B028F28B028F28B0000 /* libboost_graph_parallel-mt.dylib */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.dylib"; path = "libboost_graph_parallel-mt.dylib"; sourceTree = BUILT_PRODUCTS_DIR; };
		2902EE02902EE02902EE0000 /* libboost_graph_parallel-mt-d.dylib */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.dylib"; path = "libboost_graph_parallel-mt-d.dylib"; sourceTree = BUILT_PRODUCTS_DIR; };
		290E3B0290E3B0290E3B0000 /* libboost_graph_parallel-mt.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; path = "libboost_graph_parallel-mt.a"; sourceTree = BUILT_PRODUCTS_DIR; };
		291990029199002919900000 /* libboost_graph_parallel-mt-d.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; path = "libboost_graph_parallel-mt-d.a"; sourceTree = BUILT_PRODUCTS_DIR; };
		2921B802921B802921B80000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iostreams/CMakeLists.txt; sourceTree = "<absolute>"; };
		2929B002929B002929B00000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iostreams/src/CMakeLists.txt; sourceTree = "<absolute>"; };
		292A540292A540292A540000 /* file_descriptor.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = file_descriptor.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iostreams/src/file_descriptor.cpp; sourceTree = "<absolute>"; };
		292B2B0292B2B0292B2B0000 /* mapped_file.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = mapped_file.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iostreams/src/mapped_file.cpp; sourceTree = "<absolute>"; };
		292BE50292BE50292BE50000 /* zlib.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = zlib.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iostreams/src/zlib.cpp; sourceTree = "<absolute>"; };
		292C9C0292C9C0292C9C0000 /* bzip2.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = bzip2.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iostreams/src/bzip2.cpp; sourceTree = "<absolute>"; };
		293843029384302938430000 /* libboost_iostreams-mt.dylib */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.dylib"; path = "libboost_iostreams-mt.dylib"; sourceTree = BUILT_PRODUCTS_DIR; };
		2945AA02945AA02945AA0000 /* libboost_iostreams-mt-d.dylib */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.dylib"; path = "libboost_iostreams-mt-d.dylib"; sourceTree = BUILT_PRODUCTS_DIR; };
		295204029520402952040000 /* libboost_iostreams-mt.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; path = "libboost_iostreams-mt.a"; sourceTree = BUILT_PRODUCTS_DIR; };
		295E5C0295E5C0295E5C0000 /* libboost_iostreams-mt-d.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; path = "libboost_iostreams-mt-d.a"; sourceTree = BUILT_PRODUCTS_DIR; };
		296632029663202966320000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/lambda/CMakeLists.txt; sourceTree = "<absolute>"; };
		296E4E0296E4E0296E4E0000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_array/CMakeLists.txt; sourceTree = "<absolute>"; };
		297638029763802976380000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/program_options/CMakeLists.txt; sourceTree = "<absolute>"; };
		297E3E0297E3E0297E3E0000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/program_options/src/CMakeLists.txt; sourceTree = "<absolute>"; };
		297F2C0297F2C0297F2C0000 /* cmdline.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = cmdline.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/program_options/src/cmdline.cpp; sourceTree = "<absolute>"; };
		297FE10297FE10297FE10000 /* config_file.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = config_file.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/program_options/src/config_file.cpp; sourceTree = "<absolute>"; };
		29809D029809D029809D0000 /* options_description.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = options_description.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/program_options/src/options_description.cpp; sourceTree = "<absolute>"; };
		29815F029815F029815F0000 /* parsers.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = parsers.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/program_options/src/parsers.cpp; sourceTree = "<absolute>"; };
		29821B029821B029821B0000 /* variables_map.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = variables_map.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/program_options/src/variables_map.cpp; sourceTree = "<absolute>"; };
		2982DE02982DE02982DE0000 /* value_semantic.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = value_semantic.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/program_options/src/value_semantic.cpp; sourceTree = "<absolute>"; };
		29839A029839A029839A0000 /* positional_options.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = positional_options.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/program_options/src/positional_options.cpp; sourceTree = "<absolute>"; };
		29845B029845B029845B0000 /* utf8_codecvt_facet.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = utf8_codecvt_facet.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/program_options/src/utf8_codecvt_facet.cpp; sourceTree = "<absolute>"; };
		29851C029851C029851C0000 /* convert.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = convert.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/program_options/src/convert.cpp; sourceTree = "<absolute>"; };
		2985D502985D502985D50000 /* winmain.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = winmain.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/program_options/src/winmain.cpp; sourceTree = "<absolute>"; };
		299115029911502991150000 /* libboost_program_options-mt.dylib */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.dylib"; path = "libboost_program_options-mt.dylib"; sourceTree = BUILT_PRODUCTS_DIR; };
		29A1BC029A1BC029A1BC0000 /* libboost_program_options-mt-d.dylib */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.dylib"; path = "libboost_program_options-mt-d.dylib"; sourceTree = BUILT_PRODUCTS_DIR; };
		29B146029B146029B1460000 /* libboost_program_options-mt.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; path = "libboost_program_options-mt.a"; sourceTree = BUILT_PRODUCTS_DIR; };
		29C0C7029C0C7029C0C70000 /* libboost_program_options-mt-d.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; path = "libboost_program_options-mt-d.a"; sourceTree = BUILT_PRODUCTS_DIR; };
		29C8F7029C8F7029C8F70000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/rational/CMakeLists.txt; sourceTree = "<absolute>"; };
		29D0FC029D0FC029D0FC0000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/signals/CMakeLists.txt; sourceTree = "<absolute>"; };
		29D8FE029D8FE029D8FE0000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/signals/src/CMakeLists.txt; sourceTree = "<absolute>"; };
		29D981029D981029D9810000 /* trackable.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = trackable.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/signals/src/trackable.cpp; sourceTree = "<absolute>"; };
		29DA6E029DA6E029DA6E0000 /* connection.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = connection.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/signals/src/connection.cpp; sourceTree = "<absolute>"; };
		29DB26029DB26029DB260000 /* named_slot_map.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = named_slot_map.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/signals/src/named_slot_map.cpp; sourceTree = "<absolute>"; };
		29DBE1029DBE1029DBE10000 /* signal_base.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = signal_base.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/signals/src/signal_base.cpp; sourceTree = "<absolute>"; };
		29DC9B029DC9B029DC9B0000 /* slot.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = slot.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/signals/src/slot.cpp; sourceTree = "<absolute>"; };
		29E83C029E83C029E83C0000 /* libboost_signals-mt.dylib */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.dylib"; path = "libboost_signals-mt.dylib"; sourceTree = BUILT_PRODUCTS_DIR; };
		29F632029F632029F6320000 /* libboost_signals-mt-d.dylib */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.dylib"; path = "libboost_signals-mt-d.dylib"; sourceTree = BUILT_PRODUCTS_DIR; };
		2A070902A070902A07090000 /* libboost_signals-mt.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; path = "libboost_signals-mt.a"; sourceTree = BUILT_PRODUCTS_DIR; };
		2A13EE02A13EE02A13EE0000 /* libboost_signals-mt-d.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; path = "libboost_signals-mt-d.a"; sourceTree = BUILT_PRODUCTS_DIR; };
		2A1BB402A1BB402A1BB40000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/signals2/CMakeLists.txt; sourceTree = "<absolute>"; };
		2A238302A238302A23830000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/statechart/CMakeLists.txt; sourceTree = "<absolute>"; };
		2A2BC202A2BC202A2BC20000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tr1/CMakeLists.txt; sourceTree = "<absolute>"; };
		2A336D02A336D02A336D0000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/units/CMakeLists.txt; sourceTree = "<absolute>"; };
		2A3BDD02A3BDD02A3BDD0000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/wave/CMakeLists.txt; sourceTree = "<absolute>"; };
		2A43F002A43F002A43F00000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/wave/src/CMakeLists.txt; sourceTree = "<absolute>"; };
		2A447A02A447A02A447A0000 /* instantiate_cpp_exprgrammar.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = instantiate_cpp_exprgrammar.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/wave/src/instantiate_cpp_exprgrammar.cpp; sourceTree = "<absolute>"; };
		2A456E02A456E02A456E0000 /* instantiate_cpp_grammar.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = instantiate_cpp_grammar.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/wave/src/instantiate_cpp_grammar.cpp; sourceTree = "<absolute>"; };
		2A462A02A462A02A462A0000 /* instantiate_cpp_literalgrs.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = instantiate_cpp_literalgrs.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/wave/src/instantiate_cpp_literalgrs.cpp; sourceTree = "<absolute>"; };
		2A46E702A46E702A46E70000 /* instantiate_defined_grammar.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = instantiate_defined_grammar.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/wave/src/instantiate_defined_grammar.cpp; sourceTree = "<absolute>"; };
		2A47A402A47A402A47A40000 /* instantiate_predef_macros.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = instantiate_predef_macros.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/wave/src/instantiate_predef_macros.cpp; sourceTree = "<absolute>"; };
		2A486702A486702A48670000 /* instantiate_re2c_lexer.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = instantiate_re2c_lexer.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/wave/src/instantiate_re2c_lexer.cpp; sourceTree = "<absolute>"; };
		2A492202A492202A49220000 /* instantiate_re2c_lexer_str.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = instantiate_re2c_lexer_str.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/wave/src/instantiate_re2c_lexer_str.cpp; sourceTree = "<absolute>"; };
		2A49DD02A49DD02A49DD0000 /* token_ids.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = token_ids.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/wave/src/token_ids.cpp; sourceTree = "<absolute>"; };
		2A4A9802A4A9802A4A980000 /* wave_config_constant.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = wave_config_constant.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/wave/src/wave_config_constant.cpp; sourceTree = "<absolute>"; };
		2A4B5502A4B5502A4B550000 /* aq.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = aq.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/wave/src/cpplexer/re2clex/aq.cpp; sourceTree = "<absolute>"; };
		2A4C1002A4C1002A4C100000 /* cpp_re.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = cpp_re.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/wave/src/cpplexer/re2clex/cpp_re.cpp; sourceTree = "<absolute>"; };
		2A57A802A57A802A57A80000 /* libboost_wave-mt.dylib */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.dylib"; path = "libboost_wave-mt.dylib"; sourceTree = BUILT_PRODUCTS_DIR; };
		2A68B202A68B202A68B20000 /* libboost_wave-mt-d.dylib */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.dylib"; path = "libboost_wave-mt-d.dylib"; sourceTree = BUILT_PRODUCTS_DIR; };
		2A78B702A78B702A78B70000 /* libboost_wave-mt.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; path = "libboost_wave-mt.a"; sourceTree = BUILT_PRODUCTS_DIR; };
		2A88B102A88B102A88B10000 /* libboost_wave-mt-d.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; path = "libboost_wave-mt-d.a"; sourceTree = BUILT_PRODUCTS_DIR; };
		2A893202A893202A89320000 /* add_path.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = add_path.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/tools/bcp/add_path.cpp; sourceTree = "<absolute>"; };
		2A89DF02A89DF02A89DF0000 /* bcp_imp.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = bcp_imp.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/tools/bcp/bcp_imp.cpp; sourceTree = "<absolute>"; };
		2A8A9602A8A9602A8A960000 /* copy_path.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = copy_path.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/tools/bcp/copy_path.cpp; sourceTree = "<absolute>"; };
		2A8B4D02A8B4D02A8B4D0000 /* file_types.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = file_types.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/tools/bcp/file_types.cpp; sourceTree = "<absolute>"; };
		2A8C0402A8C0402A8C040000 /* fileview.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = fileview.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/tools/bcp/fileview.cpp; sourceTree = "<absolute>"; };
		2A8CBE02A8CBE02A8CBE0000 /* main.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = main.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/tools/bcp/main.cpp; sourceTree = "<absolute>"; };
		2A8D7802A8D7802A8D780000 /* path_operations.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = path_operations.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/tools/bcp/path_operations.cpp; sourceTree = "<absolute>"; };
		2A8E3002A8E3002A8E300000 /* scan_cvs_path.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = scan_cvs_path.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/tools/bcp/scan_cvs_path.cpp; sourceTree = "<absolute>"; };
		2A8EE702A8EE702A8EE70000 /* licence_info.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = licence_info.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/tools/bcp/licence_info.cpp; sourceTree = "<absolute>"; };
		2A8FA402A8FA402A8FA40000 /* scan_licence.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = scan_licence.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/tools/bcp/scan_licence.cpp; sourceTree = "<absolute>"; };
		2A905702A905702A90570000 /* output_licence_info.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = output_licence_info.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/tools/bcp/output_licence_info.cpp; sourceTree = "<absolute>"; };
		2A911202A911202A91120000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/tools/bcp/CMakeLists.txt; sourceTree = "<absolute>"; };
		2A9A5202A9A5202A9A520000 /* bcp */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = bcp; sourceTree = BUILT_PRODUCTS_DIR; };
		2A9AC202A9AC202A9AC20000 /* inspect.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = inspect.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/tools/inspect/inspect.cpp; sourceTree = "<absolute>"; };
		2A9BE302A9BE302A9BE30000 /* license_check.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = license_check.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/tools/inspect/license_check.cpp; sourceTree = "<absolute>"; };
		2A9C9B02A9C9B02A9C9B0000 /* link_check.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = link_check.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/tools/inspect/link_check.cpp; sourceTree = "<absolute>"; };
		2A9D5402A9D5402A9D540000 /* path_name_check.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = path_name_check.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/tools/inspect/path_name_check.cpp; sourceTree = "<absolute>"; };
		2A9E0A02A9E0A02A9E0A0000 /* tab_check.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = tab_check.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/tools/inspect/tab_check.cpp; sourceTree = "<absolute>"; };
		2A9EC702A9EC702A9EC70000 /* crlf_check.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = crlf_check.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/tools/inspect/crlf_check.cpp; sourceTree = "<absolute>"; };
		2A9F8202A9F8202A9F820000 /* end_check.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = end_check.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/tools/inspect/end_check.cpp; sourceTree = "<absolute>"; };
		2AA03B02AA03B02AA03B0000 /* unnamed_namespace_check.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = unnamed_namespace_check.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/tools/inspect/unnamed_namespace_check.cpp; sourceTree = "<absolute>"; };
		2AA0F802AA0F802AA0F80000 /* ascii_check.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = ascii_check.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/tools/inspect/ascii_check.cpp; sourceTree = "<absolute>"; };
		2AA1B302AA1B302AA1B30000 /* copyright_check.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = copyright_check.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/tools/inspect/copyright_check.cpp; sourceTree = "<absolute>"; };
		2AA26802AA26802AA2680000 /* minmax_check.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = minmax_check.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/tools/inspect/minmax_check.cpp; sourceTree = "<absolute>"; };
		2AA32002AA32002AA3200000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/tools/inspect/CMakeLists.txt; sourceTree = "<absolute>"; };
		2AAD2802AAD2802AAD280000 /* inspect */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = inspect; sourceTree = BUILT_PRODUCTS_DIR; };
/* End PBXFileReference section */

/* Begin PBXGroup section */
		21FAC6021FAC6021FAC60000 = {
			isa = PBXGroup;
			children = (
				21FB01021FB01021FB010000 /* Sources */,
				21FB9A021FB9A021FB9A0000 /* Resources */,
				21FBD7021FBD7021FBD70000 /* Products */,
			);
			sourceTree = "<group>";
		};
		21FB01021FB01021FB010000 /* Sources */ = {
			isa = PBXGroup;
			children = (
				21FBF4021FBF4021FBF40000 /* ALL_BUILD */,
				2200AA02200AA02200AA0000 /* Continuous */,
				22015C022015C022015C0000 /* Experimental */,
				22020D022020D022020D0000 /* Nightly */,
				2202B802202B802202B80000 /* NightlyMemoryCheck */,
				220355022035502203550000 /* modularize */,
				22043E022043E022043E0000 /* preprocessor-modularize */,
				22052F022052F022052F0000 /* concept_check-modularize */,
				220620022062002206200000 /* property_map-modularize */,
				22071A022071A022071A0000 /* config-modularize */,
				2207FD02207FD02207FD0000 /* mpl-modularize */,
				2208CB02208CB02208CB0000 /* type_traits-modularize */,
				2209BA02209BA02209BA0000 /* function-modularize */,
				220AA70220AA70220AA70000 /* iterator-modularize */,
				220B940220B940220B940000 /* smart_ptr-modularize */,
				220C820220C820220C820000 /* exception-modularize */,
				220D700220D700220D700000 /* utility-modularize */,
				220E5F0220E5F0220E5F0000 /* integer-modularize */,
				220F610220F610220F610000 /* detail-modularize */,
				22103F022103F022103F0000 /* static_assert-modularize */,
				221135022113502211350000 /* tuple-modularize */,
				221213022121302212130000 /* function_types-modularize */,
				22130C022130C022130C0000 /* fusion-modularize */,
				2213F002213F002213F00000 /* typeof-modularize */,
				2214D302214D302214D30000 /* proto-modularize */,
				2215A102215A102215A10000 /* intrusive-modularize */,
				2216A302216A302216A30000 /* logic-modularize */,
				221771022177102217710000 /* numeric-modularize */,
				22185E022185E022185E0000 /* xpressive-modularize */,
				22194C022194C022194C0000 /* optional-modularize */,
				221A390221A390221A390000 /* tokenizer-modularize */,
				221B3B0221B3B0221B3B0000 /* io-modularize */,
				221C1C0221C1C0221C1C0000 /* bind-modularize */,
				221CF20221CF20221CF20000 /* date_time-modularize */,
				221DC50221DC50221DC50000 /* boost_date_time */,
				221E810221E810221E810000 /* boost_date_time-mt-shared */,
				221F280221F280221F280000 /* boost_date_time-mt-shared-debug */,
				222001022200102220010000 /* boost_date_time-mt-static */,
				2220A302220A302220A30000 /* boost_date_time-mt-static-debug */,
				21FBE7021FBE7021FBE70000 /* thread-modularize */,
				222259022225902222590000 /* boost_thread */,
				22230F022230F022230F0000 /* boost_thread-mt-shared */,
				2223D802223D802223D80000 /* boost_thread-mt-shared-debug */,
				222461022246102224610000 /* boost_thread-mt-static */,
				22254F022254F022254F0000 /* boost_thread-mt-static-debug */,
				22262C022262C022262C0000 /* regex-modularize */,
				2226DF02226DF02226DF0000 /* boost_regex */,
				22279A022279A022279A0000 /* boost_regex-mt-shared */,
				2228FA02228FA02228FA0000 /* boost_regex-mt-shared-debug */,
				222A590222A590222A590000 /* boost_regex-mt-static */,
				222BB80222BB80222BB80000 /* boost_regex-mt-static-debug */,
				222D3C0222D3C0222D3C0000 /* algorithm-modularize */,
				222E2B0222E2B0222E2B0000 /* range-modularize */,
				222EF90222EF90222EF90000 /* foreach-modularize */,
				222FFA0222FFA0222FFA0000 /* array-modularize */,
				2230C802230C802230C80000 /* functional-modularize */,
				2231B702231B702231B70000 /* unordered-modularize */,
				2232B902232B902232B90000 /* pool-modularize */,
				22339C022339C022339C0000 /* spirit-modularize */,
				22346B022346B022346B0000 /* variant-modularize */,
				223567022356702235670000 /* serialization-modularize */,
				22362E022362E022362E0000 /* boost_serialization */,
				2236F202236F202236F20000 /* boost_serialization-mt-shared */,
				2238CD02238CD02238CD0000 /* boost_serialization-mt-shared-debug */,
				223AA50223AA50223AA50000 /* boost_serialization-mt-static */,
				223C6C0223C6C0223C6C0000 /* boost_serialization-mt-static-debug */,
				223D3A0223D3A0223D3A0000 /* boost_wserialization */,
				223EFA0223EFA0223EFA0000 /* boost_wserialization-mt-shared */,
				22400B022400B022400B0000 /* boost_wserialization-mt-shared-debug */,
				2240A302240A302240A30000 /* boost_wserialization-mt-static */,
				224221022422102242210000 /* boost_wserialization-mt-static-debug */,
				224357022435702243570000 /* format-modularize */,
				224439022443902244390000 /* math-modularize */,
				224507022450702245070000 /* multi_index-modularize */,
				22460A022460A022460A0000 /* any-modularize */,
				2246ED02246ED02246ED0000 /* random-modularize */,
				2247D002247D002247D00000 /* graph-modularize */,
				224883022488302248830000 /* boost_graph */,
				224939022493902249390000 /* boost_graph-mt-shared */,
				2249EA02249EA02249EA0000 /* boost_graph-mt-shared-debug */,
				224A830224A830224A830000 /* boost_graph-mt-static */,
				224B330224B330224B330000 /* boost_graph-mt-static-debug */,
				224BFA0224BFA0224BFA0000 /* Python-modularize */,
				224CAE0224CAE0224CAE0000 /* boost_python */,
				224D6C0224D6C0224D6C0000 /* boost_python-mt-shared */,
				224F4D0224F4D0224F4D0000 /* boost_python-mt-shared-debug */,
				22511A022511A022511A0000 /* boost_python-mt-static */,
				225312022531202253120000 /* boost_python-mt-static-debug */,
				225503022550302255030000 /* parameter-modularize */,
				225606022560602256060000 /* accumulators-modularize */,
				2256CD02256CD02256CD0000 /* accumulators-accumulators_example */,
				2257A502257A502257A50000 /* system-modularize */,
				225859022585902258590000 /* boost_system */,
				22590F022590F022590F0000 /* boost_system-mt-shared */,
				2259B202259B202259B20000 /* boost_system-mt-shared-debug */,
				225A570225A570225A570000 /* boost_system-mt-static */,
				225AFA0225AFA0225AFA0000 /* boost_system-mt-static-debug */,
				225BCC0225BCC0225BCC0000 /* asio-modularize */,
				225CBB0225CBB0225CBB0000 /* circular_buffer-modularize */,
				225DAA0225DAA0225DAA0000 /* ptr_container-modularize */,
				225E940225E940225E940000 /* assign-modularize */,
				225F770225F770225F770000 /* bimap-modularize */,
				226054022605402260540000 /* compatibility-modularize */,
				226179022617902261790000 /* crc-modularize */,
				22625B022625B022625B0000 /* timer-modularize */,
				22633D022633D022633D0000 /* test-modularize */,
				2263F002263F002263F00000 /* boost_prg_exec_monitor */,
				2264AE02264AE02264AE0000 /* boost_prg_exec_monitor-mt-shared */,
				22656F022656F022656F0000 /* boost_prg_exec_monitor-mt-shared-debug */,
				226636022663602266360000 /* boost_prg_exec_monitor-mt-static */,
				2266F102266F102266F10000 /* boost_prg_exec_monitor-mt-static-debug */,
				2267B802267B802267B80000 /* boost_test_exec_monitor */,
				226872022687202268720000 /* boost_test_exec_monitor-mt-static */,
				2269E402269E402269E40000 /* boost_test_exec_monitor-mt-static-debug */,
				226A7C0226A7C0226A7C0000 /* boost_unit_test_framework */,
				226C1C0226C1C0226C1C0000 /* boost_unit_test_framework-mt-shared */,
				226DA30226DA30226DA30000 /* boost_unit_test_framework-mt-shared-debug */,
				226F4C0226F4C0226F4C0000 /* boost_unit_test_framework-mt-static */,
				2270CC02270CC02270CC0000 /* boost_unit_test_framework-mt-static-debug */,
				2272CF02272CF02272CF0000 /* dynamic_bitset-modularize */,
				2273A602273A602273A60000 /* filesystem-modularize */,
				22747A022747A022747A0000 /* boost_filesystem */,
				227538022753802275380000 /* boost_filesystem-mt-shared */,
				2275DE02275DE02275DE0000 /* boost_filesystem-mt-shared-debug */,
				2276A802276A802276A80000 /* boost_filesystem-mt-static */,
				227772022777202277720000 /* boost_filesystem-mt-static-debug */,
				227889022788902278890000 /* interprocess-modularize */,
				227966022796602279660000 /* flyweight-modularize */,
				227A680227A680227A680000 /* gil-modularize */,
				227B4A0227B4A0227B4A0000 /* mpi-modularize */,
				227BFD0227BFD0227BFD0000 /* boost_mpi */,
				227CBB0227CBB0227CBB0000 /* boost_mpi-mt-shared */,
				227E150227E150227E150000 /* boost_mpi-mt-shared-debug */,
				227F780227F780227F780000 /* boost_mpi-mt-static */,
				2280D202280D202280D20000 /* boost_mpi-mt-static-debug */,
				228263022826302282630000 /* boost_graph_parallel */,
				22831D022831D022831D0000 /* boost_graph_parallel-mt-shared */,
				2283B202283B202283B20000 /* boost_graph_parallel-mt-shared-debug */,
				228487022848702284870000 /* boost_graph_parallel-mt-static */,
				228539022853902285390000 /* boost_graph_parallel-mt-static-debug */,
				228600022860002286000000 /* iostreams-modularize */,
				2286D902286D902286D90000 /* boost_iostreams */,
				228795022879502287950000 /* boost_iostreams-mt-shared */,
				22884F022884F022884F0000 /* boost_iostreams-mt-shared-debug */,
				228924022892402289240000 /* boost_iostreams-mt-static */,
				2289DB02289DB02289DB0000 /* boost_iostreams-mt-static-debug */,
				228ADC0228ADC0228ADC0000 /* lambda-modularize */,
				228BAB0228BAB0228BAB0000 /* multi_array-modularize */,
				228CBB0228CBB0228CBB0000 /* program_options-modularize */,
				228D790228D790228D790000 /* boost_program_options */,
				228E360228E360228E360000 /* boost_program_options-mt-shared */,
				228F510228F510228F510000 /* boost_program_options-mt-shared-debug */,
				229072022907202290720000 /* boost_program_options-mt-static */,
				229189022918902291890000 /* boost_program_options-mt-static-debug */,
				2292D902292D902292D90000 /* rational-modularize */,
				2293AA02293AA02293AA0000 /* signals-modularize */,
				22947E022947E022947E0000 /* boost_signals */,
				229532022953202295320000 /* boost_signals-mt-shared */,
				229604022960402296040000 /* boost_signals-mt-shared-debug */,
				2296D402296D402296D40000 /* boost_signals-mt-static */,
				2297A302297A302297A30000 /* boost_signals-mt-static-debug */,
				2298A402298A402298A40000 /* signals2-modularize */,
				229973022997302299730000 /* statechart-modularize */,
				229A760229A760229A760000 /* tr1-modularize */,
				229B580229B580229B580000 /* units-modularize */,
				229C3A0229C3A0229C3A0000 /* wave-modularize */,
				229CED0229CED0229CED0000 /* boost_wave */,
				229DA60229DA60229DA60000 /* boost_wave-mt-shared */,
				229EBE0229EBE0229EBE0000 /* boost_wave-mt-shared-debug */,
				229FE10229FE10229FE10000 /* boost_wave-mt-static */,
				22A0F8022A0F8022A0F80000 /* boost_wave-mt-static-debug */,
				22A247022A247022A2470000 /* bcp */,
				22A36C022A36C022A36C0000 /* inspect */,
			);
			name = Sources;
			sourceTree = "<group>";
		};
		21FB9A021FB9A021FB9A0000 /* Resources */ = {
			isa = PBXGroup;
			children = (
			);
			name = Resources;
			sourceTree = "<group>";
		};
		21FBD7021FBD7021FBD70000 /* Products */ = {
			isa = PBXGroup;
			children = (
				23E68D023E68D023E68D0000 /* libboost_date_time-mt.dylib */,
				23F37C023F37C023F37C0000 /* libboost_date_time-mt-d.dylib */,
				240351024035102403510000 /* libboost_date_time-mt.a */,
				240F390240F390240F390000 /* libboost_date_time-mt-d.a */,
				242CC60242CC60242CC60000 /* libboost_thread-mt.dylib */,
				2439AA02439AA02439AA0000 /* libboost_thread-mt-d.dylib */,
				244580024458002445800000 /* libboost_thread-mt.a */,
				245150024515002451500000 /* libboost_thread-mt-d.a */,
				24793B024793B024793B0000 /* libboost_regex-mt.dylib */,
				248D640248D640248D640000 /* libboost_regex-mt-d.dylib */,
				24A08C024A08C024A08C0000 /* libboost_regex-mt.a */,
				24B39F024B39F024B39F0000 /* libboost_regex-mt-d.a */,
				252DFE0252DFE0252DFE0000 /* libboost_serialization-mt.dylib */,
				25469A025469A025469A0000 /* libboost_serialization-mt-d.dylib */,
				255E0A0255E0A0255E0A0000 /* libboost_serialization-mt.a */,
				257559025755902575590000 /* libboost_serialization-mt-d.a */,
				258F400258F400258F400000 /* libboost_wserialization-mt.dylib */,
				259F7B0259F7B0259F7B0000 /* libboost_wserialization-mt-d.dylib */,
				25AE7D025AE7D025AE7D0000 /* libboost_wserialization-mt.a */,
				25BD85025BD85025BD850000 /* libboost_wserialization-mt-d.a */,
				260551026055102605510000 /* libboost_graph-mt.dylib */,
				261128026112802611280000 /* libboost_graph-mt-d.dylib */,
				261BF40261BF40261BF40000 /* libboost_graph-mt.a */,
				2626C902626C902626C90000 /* libboost_graph-mt-d.a */,
				2656F202656F202656F20000 /* libboost_python-mt.dylib */,
				2670C902670C902670C90000 /* libboost_python-mt-d.dylib */,
				2689BE02689BE02689BE0000 /* libboost_python-mt.a */,
				26A2C0026A2C0026A2C00000 /* libboost_python-mt-d.a */,
				26BE4F026BE4F026BE4F0000 /* accumulators-accumulators_example */,
				26DA82026DA82026DA820000 /* libboost_system-mt.dylib */,
				26E653026E653026E6530000 /* libboost_system-mt-d.dylib */,
				26F11D026F11D026F11D0000 /* libboost_system-mt.a */,
				26FBF3026FBF3026FBF30000 /* libboost_system-mt-d.a */,
				275DF70275DF70275DF70000 /* libboost_prg_exec_monitor-mt.dylib */,
				276AE60276AE60276AE60000 /* libboost_prg_exec_monitor-mt-d.dylib */,
				2776BE02776BE02776BE0000 /* libboost_prg_exec_monitor-mt.a */,
				2782A402782A402782A40000 /* libboost_prg_exec_monitor-mt-d.a */,
				27A0DC027A0DC027A0DC0000 /* libboost_test_exec_monitor-mt.a */,
				27B404027B404027B4040000 /* libboost_test_exec_monitor-mt-d.a */,
				27D1FE027D1FE027D1FE0000 /* libboost_unit_test_framework-mt.dylib */,
				27E74B027E74B027E74B0000 /* libboost_unit_test_framework-mt-d.dylib */,
				27FB58027FB58027FB580000 /* libboost_unit_test_framework-mt.a */,
				2813AC02813AC02813AC0000 /* libboost_unit_test_framework-mt-d.a */,
				283A520283A520283A520000 /* libboost_filesystem-mt.dylib */,
				2847C202847C202847C20000 /* libboost_filesystem-mt-d.dylib */,
				28542F028542F028542F0000 /* libboost_filesystem-mt.a */,
				2860A702860A702860A70000 /* libboost_filesystem-mt-d.a */,
				28A14D028A14D028A14D0000 /* libboost_mpi-mt.dylib */,
				28B637028B637028B6370000 /* libboost_mpi-mt-d.dylib */,
				28C9F6028C9F6028C9F60000 /* libboost_mpi-mt.a */,
				28DDA2028DDA2028DDA20000 /* libboost_mpi-mt-d.a */,
				28F28B028F28B028F28B0000 /* libboost_graph_parallel-mt.dylib */,
				2902EE02902EE02902EE0000 /* libboost_graph_parallel-mt-d.dylib */,
				290E3B0290E3B0290E3B0000 /* libboost_graph_parallel-mt.a */,
				291990029199002919900000 /* libboost_graph_parallel-mt-d.a */,
				293843029384302938430000 /* libboost_iostreams-mt.dylib */,
				2945AA02945AA02945AA0000 /* libboost_iostreams-mt-d.dylib */,
				295204029520402952040000 /* libboost_iostreams-mt.a */,
				295E5C0295E5C0295E5C0000 /* libboost_iostreams-mt-d.a */,
				299115029911502991150000 /* libboost_program_options-mt.dylib */,
				29A1BC029A1BC029A1BC0000 /* libboost_program_options-mt-d.dylib */,
				29B146029B146029B1460000 /* libboost_program_options-mt.a */,
				29C0C7029C0C7029C0C70000 /* libboost_program_options-mt-d.a */,
				29E83C029E83C029E83C0000 /* libboost_signals-mt.dylib */,
				29F632029F632029F6320000 /* libboost_signals-mt-d.dylib */,
				2A070902A070902A07090000 /* libboost_signals-mt.a */,
				2A13EE02A13EE02A13EE0000 /* libboost_signals-mt-d.a */,
				2A57A802A57A802A57A80000 /* libboost_wave-mt.dylib */,
				2A68B202A68B202A68B20000 /* libboost_wave-mt-d.dylib */,
				2A78B702A78B702A78B70000 /* libboost_wave-mt.a */,
				2A88B102A88B102A88B10000 /* libboost_wave-mt-d.a */,
				2A9A5202A9A5202A9A520000 /* bcp */,
				2AAD2802AAD2802AAD280000 /* inspect */,
			);
			name = Products;
			sourceTree = "<group>";
		};
		21FBE7021FBE7021FBE70000 /* thread-modularize */ = {
			isa = PBXGroup;
			children = (
				222206022220602222060000 /* CMake Rules */,
				2416FF02416FF02416FF0000 /* CMakeLists.txt */,
			);
			name = "thread-modularize";
			sourceTree = "<group>";
		};
		21FBF4021FBF4021FBF40000 /* ALL_BUILD */ = {
			isa = PBXGroup;
			children = (
				220057022005702200570000 /* CMake Rules */,
				22AD3C022AD3C022AD3C0000 /* CMakeLists.txt */,
			);
			name = ALL_BUILD;
			sourceTree = "<group>";
		};
		220057022005702200570000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		2200AA02200AA02200AA0000 /* Continuous */ = {
			isa = PBXGroup;
			children = (
				220118022011802201180000 /* CMake Rules */,
				22AD3C022AD3C022AD3C0000 /* CMakeLists.txt */,
			);
			name = Continuous;
			sourceTree = "<group>";
		};
		220118022011802201180000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		22015C022015C022015C0000 /* Experimental */ = {
			isa = PBXGroup;
			children = (
				2201C302201C302201C30000 /* CMake Rules */,
				22AD3C022AD3C022AD3C0000 /* CMakeLists.txt */,
			);
			name = Experimental;
			sourceTree = "<group>";
		};
		2201C302201C302201C30000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		22020D022020D022020D0000 /* Nightly */ = {
			isa = PBXGroup;
			children = (
				220273022027302202730000 /* CMake Rules */,
				22AD3C022AD3C022AD3C0000 /* CMakeLists.txt */,
			);
			name = Nightly;
			sourceTree = "<group>";
		};
		220273022027302202730000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		2202B802202B802202B80000 /* NightlyMemoryCheck */ = {
			isa = PBXGroup;
			children = (
				2202FD02202FD02202FD0000 /* CMake Rules */,
				22AD3C022AD3C022AD3C0000 /* CMakeLists.txt */,
			);
			name = NightlyMemoryCheck;
			sourceTree = "<group>";
		};
		2202FD02202FD02202FD0000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		220355022035502203550000 /* modularize */ = {
			isa = PBXGroup;
			children = (
				2203D202203D202203D20000 /* CMake Rules */,
				22AD3C022AD3C022AD3C0000 /* CMakeLists.txt */,
			);
			name = modularize;
			sourceTree = "<group>";
		};
		2203D202203D202203D20000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		22043E022043E022043E0000 /* preprocessor-modularize */ = {
			isa = PBXGroup;
			children = (
				2204BF02204BF02204BF0000 /* CMake Rules */,
				22F25E022F25E022F25E0000 /* CMakeLists.txt */,
			);
			name = "preprocessor-modularize";
			sourceTree = "<group>";
		};
		2204BF02204BF02204BF0000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		22052F022052F022052F0000 /* concept_check-modularize */ = {
			isa = PBXGroup;
			children = (
				2205B002205B002205B00000 /* CMake Rules */,
				22FAC1022FAC1022FAC10000 /* CMakeLists.txt */,
			);
			name = "concept_check-modularize";
			sourceTree = "<group>";
		};
		2205B002205B002205B00000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		220620022062002206200000 /* property_map-modularize */ = {
			isa = PBXGroup;
			children = (
				2206A102206A102206A10000 /* CMake Rules */,
				23073B023073B023073B0000 /* CMakeLists.txt */,
			);
			name = "property_map-modularize";
			sourceTree = "<group>";
		};
		2206A102206A102206A10000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		22071A022071A022071A0000 /* config-modularize */ = {
			isa = PBXGroup;
			children = (
				22077B022077B022077B0000 /* CMake Rules */,
				230F7E0230F7E0230F7E0000 /* CMakeLists.txt */,
			);
			name = "config-modularize";
			sourceTree = "<group>";
		};
		22077B022077B022077B0000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		2207FD02207FD02207FD0000 /* mpl-modularize */ = {
			isa = PBXGroup;
			children = (
				22084D022084D022084D0000 /* CMake Rules */,
				23178A023178A023178A0000 /* CMakeLists.txt */,
			);
			name = "mpl-modularize";
			sourceTree = "<group>";
		};
		22084D022084D022084D0000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		2208CB02208CB02208CB0000 /* type_traits-modularize */ = {
			isa = PBXGroup;
			children = (
				220937022093702209370000 /* CMake Rules */,
				231FA00231FA00231FA00000 /* CMakeLists.txt */,
			);
			name = "type_traits-modularize";
			sourceTree = "<group>";
		};
		220937022093702209370000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		2209BA02209BA02209BA0000 /* function-modularize */ = {
			isa = PBXGroup;
			children = (
				220A420220A420220A420000 /* CMake Rules */,
				2327B002327B002327B00000 /* CMakeLists.txt */,
			);
			name = "function-modularize";
			sourceTree = "<group>";
		};
		220A420220A420220A420000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		220AA70220AA70220AA70000 /* iterator-modularize */ = {
			isa = PBXGroup;
			children = (
				220B2F0220B2F0220B2F0000 /* CMake Rules */,
				232FBF0232FBF0232FBF0000 /* CMakeLists.txt */,
			);
			name = "iterator-modularize";
			sourceTree = "<group>";
		};
		220B2F0220B2F0220B2F0000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		220B940220B940220B940000 /* smart_ptr-modularize */ = {
			isa = PBXGroup;
			children = (
				220BFF0220BFF0220BFF0000 /* CMake Rules */,
				2337D102337D102337D10000 /* CMakeLists.txt */,
			);
			name = "smart_ptr-modularize";
			sourceTree = "<group>";
		};
		220BFF0220BFF0220BFF0000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		220C820220C820220C820000 /* exception-modularize */ = {
			isa = PBXGroup;
			children = (
				220CED0220CED0220CED0000 /* CMake Rules */,
				233FE30233FE30233FE30000 /* CMakeLists.txt */,
			);
			name = "exception-modularize";
			sourceTree = "<group>";
		};
		220CED0220CED0220CED0000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		220D700220D700220D700000 /* utility-modularize */ = {
			isa = PBXGroup;
			children = (
				220DDC0220DDC0220DDC0000 /* CMake Rules */,
				2347DF02347DF02347DF0000 /* CMakeLists.txt */,
			);
			name = "utility-modularize";
			sourceTree = "<group>";
		};
		220DDC0220DDC0220DDC0000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		220E5F0220E5F0220E5F0000 /* integer-modularize */ = {
			isa = PBXGroup;
			children = (
				220ED80220ED80220ED80000 /* CMake Rules */,
				234FF00234FF00234FF00000 /* CMakeLists.txt */,
			);
			name = "integer-modularize";
			sourceTree = "<group>";
		};
		220ED80220ED80220ED80000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		220F610220F610220F610000 /* detail-modularize */ = {
			isa = PBXGroup;
			children = (
				220FC20220FC20220FC20000 /* CMake Rules */,
				2357F802357F802357F80000 /* CMakeLists.txt */,
			);
			name = "detail-modularize";
			sourceTree = "<group>";
		};
		220FC20220FC20220FC20000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		22103F022103F022103F0000 /* static_assert-modularize */ = {
			isa = PBXGroup;
			children = (
				2210C002210C002210C00000 /* CMake Rules */,
				23600B023600B023600B0000 /* CMakeLists.txt */,
			);
			name = "static_assert-modularize";
			sourceTree = "<group>";
		};
		2210C002210C002210C00000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		221135022113502211350000 /* tuple-modularize */ = {
			isa = PBXGroup;
			children = (
				221196022119602211960000 /* CMake Rules */,
				236816023681602368160000 /* CMakeLists.txt */,
			);
			name = "tuple-modularize";
			sourceTree = "<group>";
		};
		221196022119602211960000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		221213022121302212130000 /* function_types-modularize */ = {
			isa = PBXGroup;
			children = (
				221296022129602212960000 /* CMake Rules */,
				23702D023702D023702D0000 /* CMakeLists.txt */,
			);
			name = "function_types-modularize";
			sourceTree = "<group>";
		};
		221296022129602212960000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		22130C022130C022130C0000 /* fusion-modularize */ = {
			isa = PBXGroup;
			children = (
				22136D022136D022136D0000 /* CMake Rules */,
				237825023782502378250000 /* CMakeLists.txt */,
			);
			name = "fusion-modularize";
			sourceTree = "<group>";
		};
		22136D022136D022136D0000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		2213F002213F002213F00000 /* typeof-modularize */ = {
			isa = PBXGroup;
			children = (
				221451022145102214510000 /* CMake Rules */,
				238039023803902380390000 /* CMakeLists.txt */,
			);
			name = "typeof-modularize";
			sourceTree = "<group>";
		};
		221451022145102214510000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		2214D302214D302214D30000 /* proto-modularize */ = {
			isa = PBXGroup;
			children = (
				221534022153402215340000 /* CMake Rules */,
				23883A023883A023883A0000 /* CMakeLists.txt */,
			);
			name = "proto-modularize";
			sourceTree = "<group>";
		};
		221534022153402215340000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		2215A102215A102215A10000 /* intrusive-modularize */ = {
			isa = PBXGroup;
			children = (
				22160C022160C022160C0000 /* CMake Rules */,
				23904F023904F023904F0000 /* CMakeLists.txt */,
			);
			name = "intrusive-modularize";
			sourceTree = "<group>";
		};
		22160C022160C022160C0000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		2216A302216A302216A30000 /* logic-modularize */ = {
			isa = PBXGroup;
			children = (
				221704022170402217040000 /* CMake Rules */,
				239854023985402398540000 /* CMakeLists.txt */,
			);
			name = "logic-modularize";
			sourceTree = "<group>";
		};
		221704022170402217040000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		221771022177102217710000 /* numeric-modularize */ = {
			isa = PBXGroup;
			children = (
				2217EA02217EA02217EA0000 /* CMake Rules */,
				23A04B023A04B023A04B0000 /* CMakeLists.txt */,
			);
			name = "numeric-modularize";
			sourceTree = "<group>";
		};
		2217EA02217EA02217EA0000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		22185E022185E022185E0000 /* xpressive-modularize */ = {
			isa = PBXGroup;
			children = (
				2218C902218C902218C90000 /* CMake Rules */,
				23A825023A825023A8250000 /* CMakeLists.txt */,
			);
			name = "xpressive-modularize";
			sourceTree = "<group>";
		};
		2218C902218C902218C90000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		22194C022194C022194C0000 /* optional-modularize */ = {
			isa = PBXGroup;
			children = (
				2219D402219D402219D40000 /* CMake Rules */,
				23B067023B067023B0670000 /* CMakeLists.txt */,
			);
			name = "optional-modularize";
			sourceTree = "<group>";
		};
		2219D402219D402219D40000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		221A390221A390221A390000 /* tokenizer-modularize */ = {
			isa = PBXGroup;
			children = (
				221AA40221AA40221AA40000 /* CMake Rules */,
				23B890023B890023B8900000 /* CMakeLists.txt */,
			);
			name = "tokenizer-modularize";
			sourceTree = "<group>";
		};
		221AA40221AA40221AA40000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		221B3B0221B3B0221B3B0000 /* io-modularize */ = {
			isa = PBXGroup;
			children = (
				221B8A0221B8A0221B8A0000 /* CMake Rules */,
				23C097023C097023C0970000 /* CMakeLists.txt */,
			);
			name = "io-modularize";
			sourceTree = "<group>";
		};
		221B8A0221B8A0221B8A0000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		221C1C0221C1C0221C1C0000 /* bind-modularize */ = {
			isa = PBXGroup;
			children = (
				221C810221C810221C810000 /* CMake Rules */,
				23C8AA023C8AA023C8AA0000 /* CMakeLists.txt */,
			);
			name = "bind-modularize";
			sourceTree = "<group>";
		};
		221C630221C630221C630000 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				251069025106902510690000 /* basic_archive.cpp */,
				251135025113502511350000 /* basic_iarchive.cpp */,
				2511F002511F002511F00000 /* basic_iserializer.cpp */,
				2512B002512B002512B00000 /* basic_oarchive.cpp */,
				25136C025136C025136C0000 /* basic_oserializer.cpp */,
				25142D025142D025142D0000 /* basic_pointer_iserializer.cpp */,
				2514F202514F202514F20000 /* basic_pointer_oserializer.cpp */,
				2515AC02515AC02515AC0000 /* basic_serializer_map.cpp */,
				251670025167002516700000 /* basic_text_iprimitive.cpp */,
				251733025173302517330000 /* basic_text_oprimitive.cpp */,
				2517F702517F702517F70000 /* basic_xml_archive.cpp */,
				2518B802518B802518B80000 /* binary_iarchive.cpp */,
				251973025197302519730000 /* binary_oarchive.cpp */,
				251A2E0251A2E0251A2E0000 /* extended_type_info.cpp */,
				251AF00251AF00251AF00000 /* extended_type_info_typeid.cpp */,
				251BB40251BB40251BB40000 /* extended_type_info_no_rtti.cpp */,
				251C6E0251C6E0251C6E0000 /* polymorphic_iarchive.cpp */,
				251D390251D390251D390000 /* polymorphic_oarchive.cpp */,
				251DF80251DF80251DF80000 /* stl_port.cpp */,
				251EB40251EB40251EB40000 /* text_iarchive.cpp */,
				251F6F0251F6F0251F6F0000 /* text_oarchive.cpp */,
				25202A025202A025202A0000 /* void_cast.cpp */,
				2520E502520E502520E50000 /* xml_grammar.cpp */,
				2521A002521A002521A00000 /* xml_iarchive.cpp */,
				25225B025225B025225B0000 /* xml_oarchive.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		221C810221C810221C810000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		221CF20221CF20221CF20000 /* date_time-modularize */ = {
			isa = PBXGroup;
			children = (
				221D5D0221D5D0221D5D0000 /* CMake Rules */,
				23D0B2023D0B2023D0B20000 /* CMakeLists.txt */,
			);
			name = "date_time-modularize";
			sourceTree = "<group>";
		};
		221D5D0221D5D0221D5D0000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		221DC50221DC50221DC50000 /* boost_date_time */ = {
			isa = PBXGroup;
			children = (
				221E2B0221E2B0221E2B0000 /* CMake Rules */,
				23D8A7023D8A7023D8A70000 /* CMakeLists.txt */,
			);
			name = boost_date_time;
			sourceTree = "<group>";
		};
		221E2B0221E2B0221E2B0000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		221E810221E810221E810000 /* boost_date_time-mt-shared */ = {
			isa = PBXGroup;
			children = (
				221ECD0221ECD0221ECD0000 /* Source Files */,
				23D8A7023D8A7023D8A70000 /* CMakeLists.txt */,
			);
			name = "boost_date_time-mt-shared";
			sourceTree = "<group>";
		};
		221ECD0221ECD0221ECD0000 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				23D93B023D93B023D93B0000 /* greg_month.cpp */,
				23DA21023DA21023DA210000 /* greg_weekday.cpp */,
				23DADE023DADE023DADE0000 /* date_generators.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		221F280221F280221F280000 /* boost_date_time-mt-shared-debug */ = {
			isa = PBXGroup;
			children = (
				221F870221F870221F870000 /* Source Files */,
				23D8A7023D8A7023D8A70000 /* CMakeLists.txt */,
			);
			name = "boost_date_time-mt-shared-debug";
			sourceTree = "<group>";
		};
		221F870221F870221F870000 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				23D93B023D93B023D93B0000 /* greg_month.cpp */,
				23DA21023DA21023DA210000 /* greg_weekday.cpp */,
				23DADE023DADE023DADE0000 /* date_generators.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		222001022200102220010000 /* boost_date_time-mt-static */ = {
			isa = PBXGroup;
			children = (
				222045022204502220450000 /* Source Files */,
				23D8A7023D8A7023D8A70000 /* CMakeLists.txt */,
			);
			name = "boost_date_time-mt-static";
			sourceTree = "<group>";
		};
		222045022204502220450000 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				23D93B023D93B023D93B0000 /* greg_month.cpp */,
				23DA21023DA21023DA210000 /* greg_weekday.cpp */,
				23DADE023DADE023DADE0000 /* date_generators.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		2220A302220A302220A30000 /* boost_date_time-mt-static-debug */ = {
			isa = PBXGroup;
			children = (
				222102022210202221020000 /* Source Files */,
				23D8A7023D8A7023D8A70000 /* CMakeLists.txt */,
			);
			name = "boost_date_time-mt-static-debug";
			sourceTree = "<group>";
		};
		222102022210202221020000 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				23D93B023D93B023D93B0000 /* greg_month.cpp */,
				23DA21023DA21023DA210000 /* greg_weekday.cpp */,
				23DADE023DADE023DADE0000 /* date_generators.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		222206022220602222060000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		222259022225902222590000 /* boost_thread */ = {
			isa = PBXGroup;
			children = (
				2222AB02222AB02222AB0000 /* CMake Rules */,
				241EF90241EF90241EF90000 /* CMakeLists.txt */,
			);
			name = boost_thread;
			sourceTree = "<group>";
		};
		2222AB02222AB02222AB0000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		22230F022230F022230F0000 /* boost_thread-mt-shared */ = {
			isa = PBXGroup;
			children = (
				22235E022235E022235E0000 /* Source Files */,
				241EF90241EF90241EF90000 /* CMakeLists.txt */,
			);
			name = "boost_thread-mt-shared";
			sourceTree = "<group>";
		};
		22235E022235E022235E0000 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				241F830241F830241F830000 /* thread.cpp */,
				242074024207402420740000 /* exceptions.cpp */,
				24212D024212D024212D0000 /* once.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		2223D802223D802223D80000 /* boost_thread-mt-shared-debug */ = {
			isa = PBXGroup;
			children = (
				222415022241502224150000 /* Source Files */,
				241EF90241EF90241EF90000 /* CMakeLists.txt */,
			);
			name = "boost_thread-mt-shared-debug";
			sourceTree = "<group>";
		};
		222415022241502224150000 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				241F830241F830241F830000 /* thread.cpp */,
				242074024207402420740000 /* exceptions.cpp */,
				24212D024212D024212D0000 /* once.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		222461022246102224610000 /* boost_thread-mt-static */ = {
			isa = PBXGroup;
			children = (
				2224D502224D502224D50000 /* Source Files */,
				241EF90241EF90241EF90000 /* CMakeLists.txt */,
			);
			name = "boost_thread-mt-static";
			sourceTree = "<group>";
		};
		2224D502224D502224D50000 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				241F830241F830241F830000 /* thread.cpp */,
				242074024207402420740000 /* exceptions.cpp */,
				24212D024212D024212D0000 /* once.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		22254F022254F022254F0000 /* boost_thread-mt-static-debug */ = {
			isa = PBXGroup;
			children = (
				22258C022258C022258C0000 /* Source Files */,
				241EF90241EF90241EF90000 /* CMakeLists.txt */,
			);
			name = "boost_thread-mt-static-debug";
			sourceTree = "<group>";
		};
		22258C022258C022258C0000 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				241F830241F830241F830000 /* thread.cpp */,
				242074024207402420740000 /* exceptions.cpp */,
				24212D024212D024212D0000 /* once.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		22262C022262C022262C0000 /* regex-modularize */ = {
			isa = PBXGroup;
			children = (
				22268D022268D022268D0000 /* CMake Rules */,
				245914024591402459140000 /* CMakeLists.txt */,
			);
			name = "regex-modularize";
			sourceTree = "<group>";
		};
		22268D022268D022268D0000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		2226DF02226DF02226DF0000 /* boost_regex */ = {
			isa = PBXGroup;
			children = (
				222740022274002227400000 /* CMake Rules */,
				246124024612402461240000 /* CMakeLists.txt */,
			);
			name = boost_regex;
			sourceTree = "<group>";
		};
		222740022274002227400000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		22279A022279A022279A0000 /* boost_regex-mt-shared */ = {
			isa = PBXGroup;
			children = (
				2227E602227E602227E60000 /* Source Files */,
				246124024612402461240000 /* CMakeLists.txt */,
			);
			name = "boost_regex-mt-shared";
			sourceTree = "<group>";
		};
		2227E602227E602227E60000 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				2461EC02461EC02461EC0000 /* c_regex_traits.cpp */,
				24629C024629C024629C0000 /* cpp_regex_traits.cpp */,
				246357024635702463570000 /* cregex.cpp */,
				246411024641102464110000 /* fileiter.cpp */,
				2464C902464C902464C90000 /* icu.cpp */,
				24658A024658A024658A0000 /* instances.cpp */,
				24663F024663F024663F0000 /* posix_api.cpp */,
				2466F702466F702466F70000 /* regex.cpp */,
				2467B102467B102467B10000 /* regex_debug.cpp */,
				246870024687002468700000 /* regex_raw_buffer.cpp */,
				24692F024692F024692F0000 /* regex_traits_defaults.cpp */,
				2469ED02469ED02469ED0000 /* static_mutex.cpp */,
				246AA60246AA60246AA60000 /* w32_regex_traits.cpp */,
				246B620246B620246B620000 /* wc_regex_traits.cpp */,
				246C1D0246C1D0246C1D0000 /* wide_posix_api.cpp */,
				246CD70246CD70246CD70000 /* winstances.cpp */,
				246D8F0246D8F0246D8F0000 /* usinstances.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		2228FA02228FA02228FA0000 /* boost_regex-mt-shared-debug */ = {
			isa = PBXGroup;
			children = (
				222946022294602229460000 /* Source Files */,
				246124024612402461240000 /* CMakeLists.txt */,
			);
			name = "boost_regex-mt-shared-debug";
			sourceTree = "<group>";
		};
		222946022294602229460000 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				2461EC02461EC02461EC0000 /* c_regex_traits.cpp */,
				24629C024629C024629C0000 /* cpp_regex_traits.cpp */,
				246357024635702463570000 /* cregex.cpp */,
				246411024641102464110000 /* fileiter.cpp */,
				2464C902464C902464C90000 /* icu.cpp */,
				24658A024658A024658A0000 /* instances.cpp */,
				24663F024663F024663F0000 /* posix_api.cpp */,
				2466F702466F702466F70000 /* regex.cpp */,
				2467B102467B102467B10000 /* regex_debug.cpp */,
				246870024687002468700000 /* regex_raw_buffer.cpp */,
				24692F024692F024692F0000 /* regex_traits_defaults.cpp */,
				2469ED02469ED02469ED0000 /* static_mutex.cpp */,
				246AA60246AA60246AA60000 /* w32_regex_traits.cpp */,
				246B620246B620246B620000 /* wc_regex_traits.cpp */,
				246C1D0246C1D0246C1D0000 /* wide_posix_api.cpp */,
				246CD70246CD70246CD70000 /* winstances.cpp */,
				246D8F0246D8F0246D8F0000 /* usinstances.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		222A590222A590222A590000 /* boost_regex-mt-static */ = {
			isa = PBXGroup;
			children = (
				222AA40222AA40222AA40000 /* Source Files */,
				246124024612402461240000 /* CMakeLists.txt */,
			);
			name = "boost_regex-mt-static";
			sourceTree = "<group>";
		};
		222AA40222AA40222AA40000 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				2461EC02461EC02461EC0000 /* c_regex_traits.cpp */,
				24629C024629C024629C0000 /* cpp_regex_traits.cpp */,
				246357024635702463570000 /* cregex.cpp */,
				246411024641102464110000 /* fileiter.cpp */,
				2464C902464C902464C90000 /* icu.cpp */,
				24658A024658A024658A0000 /* instances.cpp */,
				24663F024663F024663F0000 /* posix_api.cpp */,
				2466F702466F702466F70000 /* regex.cpp */,
				2467B102467B102467B10000 /* regex_debug.cpp */,
				246870024687002468700000 /* regex_raw_buffer.cpp */,
				24692F024692F024692F0000 /* regex_traits_defaults.cpp */,
				2469ED02469ED02469ED0000 /* static_mutex.cpp */,
				246AA60246AA60246AA60000 /* w32_regex_traits.cpp */,
				246B620246B620246B620000 /* wc_regex_traits.cpp */,
				246C1D0246C1D0246C1D0000 /* wide_posix_api.cpp */,
				246CD70246CD70246CD70000 /* winstances.cpp */,
				246D8F0246D8F0246D8F0000 /* usinstances.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		222BB80222BB80222BB80000 /* boost_regex-mt-static-debug */ = {
			isa = PBXGroup;
			children = (
				222C040222C040222C040000 /* Source Files */,
				246124024612402461240000 /* CMakeLists.txt */,
			);
			name = "boost_regex-mt-static-debug";
			sourceTree = "<group>";
		};
		222C040222C040222C040000 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				2461EC02461EC02461EC0000 /* c_regex_traits.cpp */,
				24629C024629C024629C0000 /* cpp_regex_traits.cpp */,
				246357024635702463570000 /* cregex.cpp */,
				246411024641102464110000 /* fileiter.cpp */,
				2464C902464C902464C90000 /* icu.cpp */,
				24658A024658A024658A0000 /* instances.cpp */,
				24663F024663F024663F0000 /* posix_api.cpp */,
				2466F702466F702466F70000 /* regex.cpp */,
				2467B102467B102467B10000 /* regex_debug.cpp */,
				246870024687002468700000 /* regex_raw_buffer.cpp */,
				24692F024692F024692F0000 /* regex_traits_defaults.cpp */,
				2469ED02469ED02469ED0000 /* static_mutex.cpp */,
				246AA60246AA60246AA60000 /* w32_regex_traits.cpp */,
				246B620246B620246B620000 /* wc_regex_traits.cpp */,
				246C1D0246C1D0246C1D0000 /* wide_posix_api.cpp */,
				246CD70246CD70246CD70000 /* winstances.cpp */,
				246D8F0246D8F0246D8F0000 /* usinstances.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		222D3C0222D3C0222D3C0000 /* algorithm-modularize */ = {
			isa = PBXGroup;
			children = (
				222D940222D940222D940000 /* CMake Rules */,
				24BB6A024BB6A024BB6A0000 /* CMakeLists.txt */,
			);
			name = "algorithm-modularize";
			sourceTree = "<group>";
		};
		222D940222D940222D940000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		222E2B0222E2B0222E2B0000 /* range-modularize */ = {
			isa = PBXGroup;
			children = (
				222E8C0222E8C0222E8C0000 /* CMake Rules */,
				24C363024C363024C3630000 /* CMakeLists.txt */,
			);
			name = "range-modularize";
			sourceTree = "<group>";
		};
		222E8C0222E8C0222E8C0000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		222EF90222EF90222EF90000 /* foreach-modularize */ = {
			isa = PBXGroup;
			children = (
				222F720222F720222F720000 /* CMake Rules */,
				24CB61024CB61024CB610000 /* CMakeLists.txt */,
			);
			name = "foreach-modularize";
			sourceTree = "<group>";
		};
		222F720222F720222F720000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		222FFA0222FFA0222FFA0000 /* array-modularize */ = {
			isa = PBXGroup;
			children = (
				22305B022305B022305B0000 /* CMake Rules */,
				24D374024D374024D3740000 /* CMakeLists.txt */,
			);
			name = "array-modularize";
			sourceTree = "<group>";
		};
		22305B022305B022305B0000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		2230C802230C802230C80000 /* functional-modularize */ = {
			isa = PBXGroup;
			children = (
				223134022313402231340000 /* CMake Rules */,
				24DB8A024DB8A024DB8A0000 /* CMakeLists.txt */,
			);
			name = "functional-modularize";
			sourceTree = "<group>";
		};
		223134022313402231340000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		2231B702231B702231B70000 /* unordered-modularize */ = {
			isa = PBXGroup;
			children = (
				223222022322202232220000 /* CMake Rules */,
				24E38F024E38F024E38F0000 /* CMakeLists.txt */,
			);
			name = "unordered-modularize";
			sourceTree = "<group>";
		};
		223222022322202232220000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		2232B902232B902232B90000 /* pool-modularize */ = {
			isa = PBXGroup;
			children = (
				22331A022331A022331A0000 /* CMake Rules */,
				24EB9E024EB9E024EB9E0000 /* CMakeLists.txt */,
			);
			name = "pool-modularize";
			sourceTree = "<group>";
		};
		22331A022331A022331A0000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		22339C022339C022339C0000 /* spirit-modularize */ = {
			isa = PBXGroup;
			children = (
				2233FD02233FD02233FD0000 /* CMake Rules */,
				24F398024F398024F3980000 /* CMakeLists.txt */,
			);
			name = "spirit-modularize";
			sourceTree = "<group>";
		};
		2233FD02233FD02233FD0000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		22346B022346B022346B0000 /* variant-modularize */ = {
			isa = PBXGroup;
			children = (
				2234E402234E402234E40000 /* CMake Rules */,
				24FBA7024FBA7024FBA70000 /* CMakeLists.txt */,
			);
			name = "variant-modularize";
			sourceTree = "<group>";
		};
		2234E402234E402234E40000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		223567022356702235670000 /* serialization-modularize */ = {
			isa = PBXGroup;
			children = (
				2235E802235E802235E80000 /* CMake Rules */,
				2507B402507B402507B40000 /* CMakeLists.txt */,
			);
			name = "serialization-modularize";
			sourceTree = "<group>";
		};
		2235E802235E802235E80000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		22362E022362E022362E0000 /* boost_serialization */ = {
			isa = PBXGroup;
			children = (
				223696022369602236960000 /* CMake Rules */,
				250FC20250FC20250FC20000 /* CMakeLists.txt */,
			);
			name = boost_serialization;
			sourceTree = "<group>";
		};
		223696022369602236960000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		2236F202236F202236F20000 /* boost_serialization-mt-shared */ = {
			isa = PBXGroup;
			children = (
				223742022374202237420000 /* Source Files */,
				250FC20250FC20250FC20000 /* CMakeLists.txt */,
			);
			name = "boost_serialization-mt-shared";
			sourceTree = "<group>";
		};
		223742022374202237420000 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				251069025106902510690000 /* basic_archive.cpp */,
				251135025113502511350000 /* basic_iarchive.cpp */,
				2511F002511F002511F00000 /* basic_iserializer.cpp */,
				2512B002512B002512B00000 /* basic_oarchive.cpp */,
				25136C025136C025136C0000 /* basic_oserializer.cpp */,
				25142D025142D025142D0000 /* basic_pointer_iserializer.cpp */,
				2514F202514F202514F20000 /* basic_pointer_oserializer.cpp */,
				2515AC02515AC02515AC0000 /* basic_serializer_map.cpp */,
				251670025167002516700000 /* basic_text_iprimitive.cpp */,
				251733025173302517330000 /* basic_text_oprimitive.cpp */,
				2517F702517F702517F70000 /* basic_xml_archive.cpp */,
				2518B802518B802518B80000 /* binary_iarchive.cpp */,
				251973025197302519730000 /* binary_oarchive.cpp */,
				251A2E0251A2E0251A2E0000 /* extended_type_info.cpp */,
				251AF00251AF00251AF00000 /* extended_type_info_typeid.cpp */,
				251BB40251BB40251BB40000 /* extended_type_info_no_rtti.cpp */,
				251C6E0251C6E0251C6E0000 /* polymorphic_iarchive.cpp */,
				251D390251D390251D390000 /* polymorphic_oarchive.cpp */,
				251DF80251DF80251DF80000 /* stl_port.cpp */,
				251EB40251EB40251EB40000 /* text_iarchive.cpp */,
				251F6F0251F6F0251F6F0000 /* text_oarchive.cpp */,
				25202A025202A025202A0000 /* void_cast.cpp */,
				2520E502520E502520E50000 /* xml_grammar.cpp */,
				2521A002521A002521A00000 /* xml_iarchive.cpp */,
				25225B025225B025225B0000 /* xml_oarchive.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		2238CD02238CD02238CD0000 /* boost_serialization-mt-shared-debug */ = {
			isa = PBXGroup;
			children = (
				223918022391802239180000 /* Source Files */,
				250FC20250FC20250FC20000 /* CMakeLists.txt */,
			);
			name = "boost_serialization-mt-shared-debug";
			sourceTree = "<group>";
		};
		223918022391802239180000 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				251069025106902510690000 /* basic_archive.cpp */,
				251135025113502511350000 /* basic_iarchive.cpp */,
				2511F002511F002511F00000 /* basic_iserializer.cpp */,
				2512B002512B002512B00000 /* basic_oarchive.cpp */,
				25136C025136C025136C0000 /* basic_oserializer.cpp */,
				25142D025142D025142D0000 /* basic_pointer_iserializer.cpp */,
				2514F202514F202514F20000 /* basic_pointer_oserializer.cpp */,
				2515AC02515AC02515AC0000 /* basic_serializer_map.cpp */,
				251670025167002516700000 /* basic_text_iprimitive.cpp */,
				251733025173302517330000 /* basic_text_oprimitive.cpp */,
				2517F702517F702517F70000 /* basic_xml_archive.cpp */,
				2518B802518B802518B80000 /* binary_iarchive.cpp */,
				251973025197302519730000 /* binary_oarchive.cpp */,
				251A2E0251A2E0251A2E0000 /* extended_type_info.cpp */,
				251AF00251AF00251AF00000 /* extended_type_info_typeid.cpp */,
				251BB40251BB40251BB40000 /* extended_type_info_no_rtti.cpp */,
				251C6E0251C6E0251C6E0000 /* polymorphic_iarchive.cpp */,
				251D390251D390251D390000 /* polymorphic_oarchive.cpp */,
				251DF80251DF80251DF80000 /* stl_port.cpp */,
				251EB40251EB40251EB40000 /* text_iarchive.cpp */,
				251F6F0251F6F0251F6F0000 /* text_oarchive.cpp */,
				25202A025202A025202A0000 /* void_cast.cpp */,
				2520E502520E502520E50000 /* xml_grammar.cpp */,
				2521A002521A002521A00000 /* xml_iarchive.cpp */,
				25225B025225B025225B0000 /* xml_oarchive.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		223AA50223AA50223AA50000 /* boost_serialization-mt-static */ = {
			isa = PBXGroup;
			children = (
				221C630221C630221C630000 /* Source Files */,
				250FC20250FC20250FC20000 /* CMakeLists.txt */,
			);
			name = "boost_serialization-mt-static";
			sourceTree = "<group>";
		};
		223C6C0223C6C0223C6C0000 /* boost_serialization-mt-static-debug */ = {
			isa = PBXGroup;
			children = (
				223CB70223CB70223CB70000 /* Source Files */,
				250FC20250FC20250FC20000 /* CMakeLists.txt */,
			);
			name = "boost_serialization-mt-static-debug";
			sourceTree = "<group>";
		};
		223CB70223CB70223CB70000 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				251069025106902510690000 /* basic_archive.cpp */,
				251135025113502511350000 /* basic_iarchive.cpp */,
				2511F002511F002511F00000 /* basic_iserializer.cpp */,
				2512B002512B002512B00000 /* basic_oarchive.cpp */,
				25136C025136C025136C0000 /* basic_oserializer.cpp */,
				25142D025142D025142D0000 /* basic_pointer_iserializer.cpp */,
				2514F202514F202514F20000 /* basic_pointer_oserializer.cpp */,
				2515AC02515AC02515AC0000 /* basic_serializer_map.cpp */,
				251670025167002516700000 /* basic_text_iprimitive.cpp */,
				251733025173302517330000 /* basic_text_oprimitive.cpp */,
				2517F702517F702517F70000 /* basic_xml_archive.cpp */,
				2518B802518B802518B80000 /* binary_iarchive.cpp */,
				251973025197302519730000 /* binary_oarchive.cpp */,
				251A2E0251A2E0251A2E0000 /* extended_type_info.cpp */,
				251AF00251AF00251AF00000 /* extended_type_info_typeid.cpp */,
				251BB40251BB40251BB40000 /* extended_type_info_no_rtti.cpp */,
				251C6E0251C6E0251C6E0000 /* polymorphic_iarchive.cpp */,
				251D390251D390251D390000 /* polymorphic_oarchive.cpp */,
				251DF80251DF80251DF80000 /* stl_port.cpp */,
				251EB40251EB40251EB40000 /* text_iarchive.cpp */,
				251F6F0251F6F0251F6F0000 /* text_oarchive.cpp */,
				25202A025202A025202A0000 /* void_cast.cpp */,
				2520E502520E502520E50000 /* xml_grammar.cpp */,
				2521A002521A002521A00000 /* xml_iarchive.cpp */,
				25225B025225B025225B0000 /* xml_oarchive.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		223D3A0223D3A0223D3A0000 /* boost_wserialization */ = {
			isa = PBXGroup;
			children = (
				223E8D0223E8D0223E8D0000 /* CMake Rules */,
				250FC20250FC20250FC20000 /* CMakeLists.txt */,
			);
			name = boost_wserialization;
			sourceTree = "<group>";
		};
		223E8D0223E8D0223E8D0000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		223EFA0223EFA0223EFA0000 /* boost_wserialization-mt-shared */ = {
			isa = PBXGroup;
			children = (
				223F480223F480223F480000 /* Source Files */,
				250FC20250FC20250FC20000 /* CMakeLists.txt */,
			);
			name = "boost_wserialization-mt-shared";
			sourceTree = "<group>";
		};
		223F480223F480223F480000 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				257D8E0257D8E0257D8E0000 /* basic_text_wiprimitive.cpp */,
				257D1A0257D1A0257D1A0000 /* basic_text_woprimitive.cpp */,
				257E620257E620257E620000 /* text_wiarchive.cpp */,
				257FEF0257FEF0257FEF0000 /* text_woarchive.cpp */,
				257FE80257FE80257FE80000 /* utf8_codecvt_facet.cpp */,
				2580A502580A502580A50000 /* xml_wgrammar.cpp */,
				258168025816802581680000 /* xml_wiarchive.cpp */,
				258228025822802582280000 /* xml_woarchive.cpp */,
				2582E602582E602582E60000 /* codecvt_null.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		22400B022400B022400B0000 /* boost_wserialization-mt-shared-debug */ = {
			isa = PBXGroup;
			children = (
				224050022405002240500000 /* Source Files */,
				250FC20250FC20250FC20000 /* CMakeLists.txt */,
			);
			name = "boost_wserialization-mt-shared-debug";
			sourceTree = "<group>";
		};
		224050022405002240500000 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				257D8E0257D8E0257D8E0000 /* basic_text_wiprimitive.cpp */,
				257D1A0257D1A0257D1A0000 /* basic_text_woprimitive.cpp */,
				257E620257E620257E620000 /* text_wiarchive.cpp */,
				257FEF0257FEF0257FEF0000 /* text_woarchive.cpp */,
				257FE80257FE80257FE80000 /* utf8_codecvt_facet.cpp */,
				2580A502580A502580A50000 /* xml_wgrammar.cpp */,
				258168025816802581680000 /* xml_wiarchive.cpp */,
				258228025822802582280000 /* xml_woarchive.cpp */,
				2582E602582E602582E60000 /* codecvt_null.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		2240A302240A302240A30000 /* boost_wserialization-mt-static */ = {
			isa = PBXGroup;
			children = (
				22415E022415E022415E0000 /* Source Files */,
				250FC20250FC20250FC20000 /* CMakeLists.txt */,
			);
			name = "boost_wserialization-mt-static";
			sourceTree = "<group>";
		};
		22415E022415E022415E0000 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				257D8E0257D8E0257D8E0000 /* basic_text_wiprimitive.cpp */,
				257D1A0257D1A0257D1A0000 /* basic_text_woprimitive.cpp */,
				257E620257E620257E620000 /* text_wiarchive.cpp */,
				257FEF0257FEF0257FEF0000 /* text_woarchive.cpp */,
				257FE80257FE80257FE80000 /* utf8_codecvt_facet.cpp */,
				2580A502580A502580A50000 /* xml_wgrammar.cpp */,
				258168025816802581680000 /* xml_wiarchive.cpp */,
				258228025822802582280000 /* xml_woarchive.cpp */,
				2582E602582E602582E60000 /* codecvt_null.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		224221022422102242210000 /* boost_wserialization-mt-static-debug */ = {
			isa = PBXGroup;
			children = (
				224266022426602242660000 /* Source Files */,
				250FC20250FC20250FC20000 /* CMakeLists.txt */,
			);
			name = "boost_wserialization-mt-static-debug";
			sourceTree = "<group>";
		};
		224266022426602242660000 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				257D8E0257D8E0257D8E0000 /* basic_text_wiprimitive.cpp */,
				257D1A0257D1A0257D1A0000 /* basic_text_woprimitive.cpp */,
				257E620257E620257E620000 /* text_wiarchive.cpp */,
				257FEF0257FEF0257FEF0000 /* text_woarchive.cpp */,
				257FE80257FE80257FE80000 /* utf8_codecvt_facet.cpp */,
				2580A502580A502580A50000 /* xml_wgrammar.cpp */,
				258168025816802581680000 /* xml_wiarchive.cpp */,
				258228025822802582280000 /* xml_woarchive.cpp */,
				2582E602582E602582E60000 /* codecvt_null.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		224357022435702243570000 /* format-modularize */ = {
			isa = PBXGroup;
			children = (
				2243B702243B702243B70000 /* CMake Rules */,
				25C548025C548025C5480000 /* CMakeLists.txt */,
			);
			name = "format-modularize";
			sourceTree = "<group>";
		};
		2243B702243B702243B70000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		224439022443902244390000 /* math-modularize */ = {
			isa = PBXGroup;
			children = (
				22449A022449A022449A0000 /* CMake Rules */,
				25CD48025CD48025CD480000 /* CMakeLists.txt */,
			);
			name = "math-modularize";
			sourceTree = "<group>";
		};
		22449A022449A022449A0000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		224507022450702245070000 /* multi_index-modularize */ = {
			isa = PBXGroup;
			children = (
				224573022457302245730000 /* CMake Rules */,
				25D55A025D55A025D55A0000 /* CMakeLists.txt */,
			);
			name = "multi_index-modularize";
			sourceTree = "<group>";
		};
		224573022457302245730000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		22460A022460A022460A0000 /* any-modularize */ = {
			isa = PBXGroup;
			children = (
				22465A022465A022465A0000 /* CMake Rules */,
				25DD61025DD61025DD610000 /* CMakeLists.txt */,
			);
			name = "any-modularize";
			sourceTree = "<group>";
		};
		22465A022465A022465A0000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		2246ED02246ED02246ED0000 /* random-modularize */ = {
			isa = PBXGroup;
			children = (
				22474E022474E022474E0000 /* CMake Rules */,
				25E572025E572025E5720000 /* CMakeLists.txt */,
			);
			name = "random-modularize";
			sourceTree = "<group>";
		};
		22474E022474E022474E0000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		2247D002247D002247D00000 /* graph-modularize */ = {
			isa = PBXGroup;
			children = (
				224831022483102248310000 /* CMake Rules */,
				25ECF5025ECF5025ECF50000 /* CMakeLists.txt */,
			);
			name = "graph-modularize";
			sourceTree = "<group>";
		};
		224831022483102248310000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		224883022488302248830000 /* boost_graph */ = {
			isa = PBXGroup;
			children = (
				2248E402248E402248E40000 /* CMake Rules */,
				25F4FA025F4FA025F4FA0000 /* CMakeLists.txt */,
			);
			name = boost_graph;
			sourceTree = "<group>";
		};
		2248E402248E402248E40000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		224939022493902249390000 /* boost_graph-mt-shared */ = {
			isa = PBXGroup;
			children = (
				224985022498502249850000 /* Source Files */,
				25F4FA025F4FA025F4FA0000 /* CMakeLists.txt */,
			);
			name = "boost_graph-mt-shared";
			sourceTree = "<group>";
		};
		224985022498502249850000 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				25F584025F584025F5840000 /* read_graphviz_spirit.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		2249EA02249EA02249EA0000 /* boost_graph-mt-shared-debug */ = {
			isa = PBXGroup;
			children = (
				224A240224A240224A240000 /* Source Files */,
				25F4FA025F4FA025F4FA0000 /* CMakeLists.txt */,
			);
			name = "boost_graph-mt-shared-debug";
			sourceTree = "<group>";
		};
		224A240224A240224A240000 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				25F584025F584025F5840000 /* read_graphviz_spirit.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		224A830224A830224A830000 /* boost_graph-mt-static */ = {
			isa = PBXGroup;
			children = (
				224ACE0224ACE0224ACE0000 /* Source Files */,
				25F4FA025F4FA025F4FA0000 /* CMakeLists.txt */,
			);
			name = "boost_graph-mt-static";
			sourceTree = "<group>";
		};
		224ACE0224ACE0224ACE0000 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				25F584025F584025F5840000 /* read_graphviz_spirit.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		224B330224B330224B330000 /* boost_graph-mt-static-debug */ = {
			isa = PBXGroup;
			children = (
				224B6D0224B6D0224B6D0000 /* Source Files */,
				25F4FA025F4FA025F4FA0000 /* CMakeLists.txt */,
			);
			name = "boost_graph-mt-static-debug";
			sourceTree = "<group>";
		};
		224B6D0224B6D0224B6D0000 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				25F584025F584025F5840000 /* read_graphviz_spirit.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		224BFA0224BFA0224BFA0000 /* Python-modularize */ = {
			isa = PBXGroup;
			children = (
				224C5B0224C5B0224C5B0000 /* CMake Rules */,
				262E830262E830262E830000 /* CMakeLists.txt */,
			);
			name = "Python-modularize";
			sourceTree = "<group>";
		};
		224C5B0224C5B0224C5B0000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		224CAE0224CAE0224CAE0000 /* boost_python */ = {
			isa = PBXGroup;
			children = (
				224D000224D000224D000000 /* CMake Rules */,
				263685026368502636850000 /* CMakeLists.txt */,
			);
			name = boost_python;
			sourceTree = "<group>";
		};
		224D000224D000224D000000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		224D6C0224D6C0224D6C0000 /* boost_python-mt-shared */ = {
			isa = PBXGroup;
			children = (
				224DB70224DB70224DB70000 /* Source Files */,
				263685026368502636850000 /* CMakeLists.txt */,
			);
			name = "boost_python-mt-shared";
			sourceTree = "<group>";
		};
		224DB70224DB70224DB70000 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				263721026372102637210000 /* numeric.cpp */,
				263885026388502638850000 /* list.cpp */,
				26393F026393F026393F0000 /* long.cpp */,
				2639F902639F902639F90000 /* dict.cpp */,
				263AB20263AB20263AB20000 /* tuple.cpp */,
				263B700263B700263B700000 /* str.cpp */,
				263C290263C290263C290000 /* slice.cpp */,
				263CE20263CE20263CE20000 /* from_python.cpp */,
				263D9E0263D9E0263D9E0000 /* registry.cpp */,
				263E5F0263E5F0263E5F0000 /* type_id.cpp */,
				263F1C0263F1C0263F1C0000 /* enum.cpp */,
				263FD20263FD20263FD20000 /* class.cpp */,
				26408D026408D026408D0000 /* function.cpp */,
				264148026414802641480000 /* inheritance.cpp */,
				264203026420302642030000 /* life_support.cpp */,
				2642BE02642BE02642BE0000 /* pickle_support.cpp */,
				264379026437902643790000 /* errors.cpp */,
				26443A026443A026443A0000 /* module.cpp */,
				2644F602644F602644F60000 /* builtin_converters.cpp */,
				2645B302645B302645B30000 /* arg_to_python_base.cpp */,
				264674026467402646740000 /* iterator.cpp */,
				264733026473302647330000 /* stl_iterator.cpp */,
				2647EB02647EB02647EB0000 /* object_protocol.cpp */,
				2648A602648A602648A60000 /* object_operators.cpp */,
				264964026496402649640000 /* wrapper.cpp */,
				264A1C0264A1C0264A1C0000 /* import.cpp */,
				264AD30264AD30264AD30000 /* exec.cpp */,
				264B8F0264B8F0264B8F0000 /* function_doc_signature.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		224F4D0224F4D0224F4D0000 /* boost_python-mt-shared-debug */ = {
			isa = PBXGroup;
			children = (
				224F940224F940224F940000 /* Source Files */,
				263685026368502636850000 /* CMakeLists.txt */,
			);
			name = "boost_python-mt-shared-debug";
			sourceTree = "<group>";
		};
		224F940224F940224F940000 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				263721026372102637210000 /* numeric.cpp */,
				263885026388502638850000 /* list.cpp */,
				26393F026393F026393F0000 /* long.cpp */,
				2639F902639F902639F90000 /* dict.cpp */,
				263AB20263AB20263AB20000 /* tuple.cpp */,
				263B700263B700263B700000 /* str.cpp */,
				263C290263C290263C290000 /* slice.cpp */,
				263CE20263CE20263CE20000 /* from_python.cpp */,
				263D9E0263D9E0263D9E0000 /* registry.cpp */,
				263E5F0263E5F0263E5F0000 /* type_id.cpp */,
				263F1C0263F1C0263F1C0000 /* enum.cpp */,
				263FD20263FD20263FD20000 /* class.cpp */,
				26408D026408D026408D0000 /* function.cpp */,
				264148026414802641480000 /* inheritance.cpp */,
				264203026420302642030000 /* life_support.cpp */,
				2642BE02642BE02642BE0000 /* pickle_support.cpp */,
				264379026437902643790000 /* errors.cpp */,
				26443A026443A026443A0000 /* module.cpp */,
				2644F602644F602644F60000 /* builtin_converters.cpp */,
				2645B302645B302645B30000 /* arg_to_python_base.cpp */,
				264674026467402646740000 /* iterator.cpp */,
				264733026473302647330000 /* stl_iterator.cpp */,
				2647EB02647EB02647EB0000 /* object_protocol.cpp */,
				2648A602648A602648A60000 /* object_operators.cpp */,
				264964026496402649640000 /* wrapper.cpp */,
				264A1C0264A1C0264A1C0000 /* import.cpp */,
				264AD30264AD30264AD30000 /* exec.cpp */,
				264B8F0264B8F0264B8F0000 /* function_doc_signature.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		22511A022511A022511A0000 /* boost_python-mt-static */ = {
			isa = PBXGroup;
			children = (
				22517C022517C022517C0000 /* Source Files */,
				263685026368502636850000 /* CMakeLists.txt */,
			);
			name = "boost_python-mt-static";
			sourceTree = "<group>";
		};
		22517C022517C022517C0000 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				263721026372102637210000 /* numeric.cpp */,
				263885026388502638850000 /* list.cpp */,
				26393F026393F026393F0000 /* long.cpp */,
				2639F902639F902639F90000 /* dict.cpp */,
				263AB20263AB20263AB20000 /* tuple.cpp */,
				263B700263B700263B700000 /* str.cpp */,
				263C290263C290263C290000 /* slice.cpp */,
				263CE20263CE20263CE20000 /* from_python.cpp */,
				263D9E0263D9E0263D9E0000 /* registry.cpp */,
				263E5F0263E5F0263E5F0000 /* type_id.cpp */,
				263F1C0263F1C0263F1C0000 /* enum.cpp */,
				263FD20263FD20263FD20000 /* class.cpp */,
				26408D026408D026408D0000 /* function.cpp */,
				264148026414802641480000 /* inheritance.cpp */,
				264203026420302642030000 /* life_support.cpp */,
				2642BE02642BE02642BE0000 /* pickle_support.cpp */,
				264379026437902643790000 /* errors.cpp */,
				26443A026443A026443A0000 /* module.cpp */,
				2644F602644F602644F60000 /* builtin_converters.cpp */,
				2645B302645B302645B30000 /* arg_to_python_base.cpp */,
				264674026467402646740000 /* iterator.cpp */,
				264733026473302647330000 /* stl_iterator.cpp */,
				2647EB02647EB02647EB0000 /* object_protocol.cpp */,
				2648A602648A602648A60000 /* object_operators.cpp */,
				264964026496402649640000 /* wrapper.cpp */,
				264A1C0264A1C0264A1C0000 /* import.cpp */,
				264AD30264AD30264AD30000 /* exec.cpp */,
				264B8F0264B8F0264B8F0000 /* function_doc_signature.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		225312022531202253120000 /* boost_python-mt-static-debug */ = {
			isa = PBXGroup;
			children = (
				225359022535902253590000 /* Source Files */,
				263685026368502636850000 /* CMakeLists.txt */,
			);
			name = "boost_python-mt-static-debug";
			sourceTree = "<group>";
		};
		225359022535902253590000 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				263721026372102637210000 /* numeric.cpp */,
				263885026388502638850000 /* list.cpp */,
				26393F026393F026393F0000 /* long.cpp */,
				2639F902639F902639F90000 /* dict.cpp */,
				263AB20263AB20263AB20000 /* tuple.cpp */,
				263B700263B700263B700000 /* str.cpp */,
				263C290263C290263C290000 /* slice.cpp */,
				263CE20263CE20263CE20000 /* from_python.cpp */,
				263D9E0263D9E0263D9E0000 /* registry.cpp */,
				263E5F0263E5F0263E5F0000 /* type_id.cpp */,
				263F1C0263F1C0263F1C0000 /* enum.cpp */,
				263FD20263FD20263FD20000 /* class.cpp */,
				26408D026408D026408D0000 /* function.cpp */,
				264148026414802641480000 /* inheritance.cpp */,
				264203026420302642030000 /* life_support.cpp */,
				2642BE02642BE02642BE0000 /* pickle_support.cpp */,
				264379026437902643790000 /* errors.cpp */,
				26443A026443A026443A0000 /* module.cpp */,
				2644F602644F602644F60000 /* builtin_converters.cpp */,
				2645B302645B302645B30000 /* arg_to_python_base.cpp */,
				264674026467402646740000 /* iterator.cpp */,
				264733026473302647330000 /* stl_iterator.cpp */,
				2647EB02647EB02647EB0000 /* object_protocol.cpp */,
				2648A602648A602648A60000 /* object_operators.cpp */,
				264964026496402649640000 /* wrapper.cpp */,
				264A1C0264A1C0264A1C0000 /* import.cpp */,
				264AD30264AD30264AD30000 /* exec.cpp */,
				264B8F0264B8F0264B8F0000 /* function_doc_signature.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		225503022550302255030000 /* parameter-modularize */ = {
			isa = PBXGroup;
			children = (
				225574022557402255740000 /* CMake Rules */,
				26AA8A026AA8A026AA8A0000 /* CMakeLists.txt */,
			);
			name = "parameter-modularize";
			sourceTree = "<group>";
		};
		225574022557402255740000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		225606022560602256060000 /* accumulators-modularize */ = {
			isa = PBXGroup;
			children = (
				225687022568702256870000 /* CMake Rules */,
				26B31C026B31C026B31C0000 /* CMakeLists.txt */,
			);
			name = "accumulators-modularize";
			sourceTree = "<group>";
		};
		225687022568702256870000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		2256CD02256CD02256CD0000 /* accumulators-accumulators_example */ = {
			isa = PBXGroup;
			children = (
				22571B022571B022571B0000 /* Source Files */,
				26B485026B485026B4850000 /* CMakeLists.txt */,
			);
			name = "accumulators-accumulators_example";
			sourceTree = "<group>";
		};
		22571B022571B022571B0000 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				26B334026B334026B3340000 /* main.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		2257A502257A502257A50000 /* system-modularize */ = {
			isa = PBXGroup;
			children = (
				225806022580602258060000 /* CMake Rules */,
				26C625026C625026C6250000 /* CMakeLists.txt */,
			);
			name = "system-modularize";
			sourceTree = "<group>";
		};
		225806022580602258060000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		225859022585902258590000 /* boost_system */ = {
			isa = PBXGroup;
			children = (
				2258AB02258AB02258AB0000 /* CMake Rules */,
				26CE2C026CE2C026CE2C0000 /* CMakeLists.txt */,
			);
			name = boost_system;
			sourceTree = "<group>";
		};
		2258AB02258AB02258AB0000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		22590F022590F022590F0000 /* boost_system-mt-shared */ = {
			isa = PBXGroup;
			children = (
				22595A022595A022595A0000 /* Source Files */,
				26CE2C026CE2C026CE2C0000 /* CMakeLists.txt */,
			);
			name = "boost_system-mt-shared";
			sourceTree = "<group>";
		};
		22595A022595A022595A0000 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				26CEEF026CEEF026CEEF0000 /* error_code.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		2259B202259B202259B20000 /* boost_system-mt-shared-debug */ = {
			isa = PBXGroup;
			children = (
				2259F902259F902259F90000 /* Source Files */,
				26CE2C026CE2C026CE2C0000 /* CMakeLists.txt */,
			);
			name = "boost_system-mt-shared-debug";
			sourceTree = "<group>";
		};
		2259F902259F902259F90000 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				26CEEF026CEEF026CEEF0000 /* error_code.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		225A570225A570225A570000 /* boost_system-mt-static */ = {
			isa = PBXGroup;
			children = (
				225AA20225AA20225AA20000 /* Source Files */,
				26CE2C026CE2C026CE2C0000 /* CMakeLists.txt */,
			);
			name = "boost_system-mt-static";
			sourceTree = "<group>";
		};
		225AA20225AA20225AA20000 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				26CEEF026CEEF026CEEF0000 /* error_code.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		225AFA0225AFA0225AFA0000 /* boost_system-mt-static-debug */ = {
			isa = PBXGroup;
			children = (
				225B410225B410225B410000 /* Source Files */,
				26CE2C026CE2C026CE2C0000 /* CMakeLists.txt */,
			);
			name = "boost_system-mt-static-debug";
			sourceTree = "<group>";
		};
		225B410225B410225B410000 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				26CEEF026CEEF026CEEF0000 /* error_code.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		225BCC0225BCC0225BCC0000 /* asio-modularize */ = {
			isa = PBXGroup;
			children = (
				225C2D0225C2D0225C2D0000 /* CMake Rules */,
				2707A502707A502707A50000 /* CMakeLists.txt */,
			);
			name = "asio-modularize";
			sourceTree = "<group>";
		};
		225C2D0225C2D0225C2D0000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		225CBB0225CBB0225CBB0000 /* circular_buffer-modularize */ = {
			isa = PBXGroup;
			children = (
				225CFA0225CFA0225CFA0000 /* CMake Rules */,
				270FB50270FB50270FB50000 /* CMakeLists.txt */,
			);
			name = "circular_buffer-modularize";
			sourceTree = "<group>";
		};
		225CFA0225CFA0225CFA0000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		225DAA0225DAA0225DAA0000 /* ptr_container-modularize */ = {
			isa = PBXGroup;
			children = (
				225E1E0225E1E0225E1E0000 /* CMake Rules */,
				2717BE02717BE02717BE0000 /* CMakeLists.txt */,
			);
			name = "ptr_container-modularize";
			sourceTree = "<group>";
		};
		225E1E0225E1E0225E1E0000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		225E940225E940225E940000 /* assign-modularize */ = {
			isa = PBXGroup;
			children = (
				225EF50225EF50225EF50000 /* CMake Rules */,
				271FBE0271FBE0271FBE0000 /* CMakeLists.txt */,
			);
			name = "assign-modularize";
			sourceTree = "<group>";
		};
		225EF50225EF50225EF50000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		225F770225F770225F770000 /* bimap-modularize */ = {
			isa = PBXGroup;
			children = (
				225FD80225FD80225FD80000 /* CMake Rules */,
				2727F502727F502727F50000 /* CMakeLists.txt */,
			);
			name = "bimap-modularize";
			sourceTree = "<group>";
		};
		225FD80225FD80225FD80000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		226054022605402260540000 /* compatibility-modularize */ = {
			isa = PBXGroup;
			children = (
				2260D502260D502260D50000 /* CMake Rules */,
				273015027301502730150000 /* CMakeLists.txt */,
			);
			name = "compatibility-modularize";
			sourceTree = "<group>";
		};
		2260D502260D502260D50000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		226179022617902261790000 /* crc-modularize */ = {
			isa = PBXGroup;
			children = (
				2261C902261C902261C90000 /* CMake Rules */,
				27381B027381B027381B0000 /* CMakeLists.txt */,
			);
			name = "crc-modularize";
			sourceTree = "<group>";
		};
		2261C902261C902261C90000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		22625B022625B022625B0000 /* timer-modularize */ = {
			isa = PBXGroup;
			children = (
				2262BC02262BC02262BC0000 /* CMake Rules */,
				27406F027406F027406F0000 /* CMakeLists.txt */,
			);
			name = "timer-modularize";
			sourceTree = "<group>";
		};
		2262BC02262BC02262BC0000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		22633D022633D022633D0000 /* test-modularize */ = {
			isa = PBXGroup;
			children = (
				22639E022639E022639E0000 /* CMake Rules */,
				274840027484002748400000 /* CMakeLists.txt */,
			);
			name = "test-modularize";
			sourceTree = "<group>";
		};
		22639E022639E022639E0000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		2263F002263F002263F00000 /* boost_prg_exec_monitor */ = {
			isa = PBXGroup;
			children = (
				226446022644602264460000 /* CMake Rules */,
				27503A027503A027503A0000 /* CMakeLists.txt */,
			);
			name = boost_prg_exec_monitor;
			sourceTree = "<group>";
		};
		226446022644602264460000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		2264AE02264AE02264AE0000 /* boost_prg_exec_monitor-mt-shared */ = {
			isa = PBXGroup;
			children = (
				2264FE02264FE02264FE0000 /* Source Files */,
				27503A027503A027503A0000 /* CMakeLists.txt */,
			);
			name = "boost_prg_exec_monitor-mt-shared";
			sourceTree = "<group>";
		};
		2264FE02264FE02264FE0000 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				2750C602750C602750C60000 /* execution_monitor.cpp */,
				275208027520802752080000 /* cpp_main.cpp */,
				2752BD02752BD02752BD0000 /* debug.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		22656F022656F022656F0000 /* boost_prg_exec_monitor-mt-shared-debug */ = {
			isa = PBXGroup;
			children = (
				2265BC02265BC02265BC0000 /* Source Files */,
				27503A027503A027503A0000 /* CMakeLists.txt */,
			);
			name = "boost_prg_exec_monitor-mt-shared-debug";
			sourceTree = "<group>";
		};
		2265BC02265BC02265BC0000 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				2750C602750C602750C60000 /* execution_monitor.cpp */,
				275208027520802752080000 /* cpp_main.cpp */,
				2752BD02752BD02752BD0000 /* debug.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		226636022663602266360000 /* boost_prg_exec_monitor-mt-static */ = {
			isa = PBXGroup;
			children = (
				226680022668002266800000 /* Source Files */,
				27503A027503A027503A0000 /* CMakeLists.txt */,
			);
			name = "boost_prg_exec_monitor-mt-static";
			sourceTree = "<group>";
		};
		226680022668002266800000 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				2750C602750C602750C60000 /* execution_monitor.cpp */,
				275208027520802752080000 /* cpp_main.cpp */,
				2752BD02752BD02752BD0000 /* debug.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		2266F102266F102266F10000 /* boost_prg_exec_monitor-mt-static-debug */ = {
			isa = PBXGroup;
			children = (
				22673E022673E022673E0000 /* Source Files */,
				27503A027503A027503A0000 /* CMakeLists.txt */,
			);
			name = "boost_prg_exec_monitor-mt-static-debug";
			sourceTree = "<group>";
		};
		22673E022673E022673E0000 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				2750C602750C602750C60000 /* execution_monitor.cpp */,
				275208027520802752080000 /* cpp_main.cpp */,
				2752BD02752BD02752BD0000 /* debug.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		2267B802267B802267B80000 /* boost_test_exec_monitor */ = {
			isa = PBXGroup;
			children = (
				226807022680702268070000 /* CMake Rules */,
				27503A027503A027503A0000 /* CMakeLists.txt */,
			);
			name = boost_test_exec_monitor;
			sourceTree = "<group>";
		};
		226807022680702268070000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		226872022687202268720000 /* boost_test_exec_monitor-mt-static */ = {
			isa = PBXGroup;
			children = (
				2268C002268C002268C00000 /* Source Files */,
				27503A027503A027503A0000 /* CMakeLists.txt */,
			);
			name = "boost_test_exec_monitor-mt-static";
			sourceTree = "<group>";
		};
		2268C002268C002268C00000 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				278AEC0278AEC0278AEC0000 /* compiler_log_formatter.cpp */,
				2752BD02752BD02752BD0000 /* debug.cpp */,
				2750C602750C602750C60000 /* execution_monitor.cpp */,
				278D1F0278D1F0278D1F0000 /* framework.cpp */,
				278DD50278DD50278DD50000 /* plain_report_formatter.cpp */,
				278E8E0278E8E0278E8E0000 /* progress_monitor.cpp */,
				278F4D0278F4D0278F4D0000 /* results_collector.cpp */,
				27900A027900A027900A0000 /* results_reporter.cpp */,
				2790C602790C602790C60000 /* test_main.cpp */,
				27917F027917F027917F0000 /* test_tools.cpp */,
				279239027923902792390000 /* unit_test_log.cpp */,
				2792F202792F202792F20000 /* unit_test_main.cpp */,
				2793AD02793AD02793AD0000 /* unit_test_monitor.cpp */,
				279469027946902794690000 /* unit_test_parameters.cpp */,
				27951E027951E027951E0000 /* unit_test_suite.cpp */,
				2795DB02795DB02795DB0000 /* xml_log_formatter.cpp */,
				279697027969702796970000 /* xml_report_formatter.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		2269E402269E402269E40000 /* boost_test_exec_monitor-mt-static-debug */ = {
			isa = PBXGroup;
			children = (
				226A300226A300226A300000 /* Source Files */,
				27503A027503A027503A0000 /* CMakeLists.txt */,
			);
			name = "boost_test_exec_monitor-mt-static-debug";
			sourceTree = "<group>";
		};
		226A300226A300226A300000 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				278AEC0278AEC0278AEC0000 /* compiler_log_formatter.cpp */,
				2752BD02752BD02752BD0000 /* debug.cpp */,
				2750C602750C602750C60000 /* execution_monitor.cpp */,
				278D1F0278D1F0278D1F0000 /* framework.cpp */,
				278DD50278DD50278DD50000 /* plain_report_formatter.cpp */,
				278E8E0278E8E0278E8E0000 /* progress_monitor.cpp */,
				278F4D0278F4D0278F4D0000 /* results_collector.cpp */,
				27900A027900A027900A0000 /* results_reporter.cpp */,
				2790C602790C602790C60000 /* test_main.cpp */,
				27917F027917F027917F0000 /* test_tools.cpp */,
				279239027923902792390000 /* unit_test_log.cpp */,
				2792F202792F202792F20000 /* unit_test_main.cpp */,
				2793AD02793AD02793AD0000 /* unit_test_monitor.cpp */,
				279469027946902794690000 /* unit_test_parameters.cpp */,
				27951E027951E027951E0000 /* unit_test_suite.cpp */,
				2795DB02795DB02795DB0000 /* xml_log_formatter.cpp */,
				279697027969702796970000 /* xml_report_formatter.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		226A7C0226A7C0226A7C0000 /* boost_unit_test_framework */ = {
			isa = PBXGroup;
			children = (
				226BAD0226BAD0226BAD0000 /* CMake Rules */,
				27503A027503A027503A0000 /* CMakeLists.txt */,
			);
			name = boost_unit_test_framework;
			sourceTree = "<group>";
		};
		226BAD0226BAD0226BAD0000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		226C1C0226C1C0226C1C0000 /* boost_unit_test_framework-mt-shared */ = {
			isa = PBXGroup;
			children = (
				226C6B0226C6B0226C6B0000 /* Source Files */,
				27503A027503A027503A0000 /* CMakeLists.txt */,
			);
			name = "boost_unit_test_framework-mt-shared";
			sourceTree = "<group>";
		};
		226C6B0226C6B0226C6B0000 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				278AEC0278AEC0278AEC0000 /* compiler_log_formatter.cpp */,
				2752BD02752BD02752BD0000 /* debug.cpp */,
				27BDB0027BDB0027BDB00000 /* exception_safety.cpp */,
				2750C602750C602750C60000 /* execution_monitor.cpp */,
				278D1F0278D1F0278D1F0000 /* framework.cpp */,
				27BF80027BF80027BF800000 /* interaction_based.cpp */,
				27C03B027C03B027C03B0000 /* logged_expectations.cpp */,
				278DD50278DD50278DD50000 /* plain_report_formatter.cpp */,
				278E8E0278E8E0278E8E0000 /* progress_monitor.cpp */,
				278F4D0278F4D0278F4D0000 /* results_collector.cpp */,
				27900A027900A027900A0000 /* results_reporter.cpp */,
				27917F027917F027917F0000 /* test_tools.cpp */,
				279239027923902792390000 /* unit_test_log.cpp */,
				2792F202792F202792F20000 /* unit_test_main.cpp */,
				2793AD02793AD02793AD0000 /* unit_test_monitor.cpp */,
				279469027946902794690000 /* unit_test_parameters.cpp */,
				27951E027951E027951E0000 /* unit_test_suite.cpp */,
				2795DB02795DB02795DB0000 /* xml_log_formatter.cpp */,
				279697027969702796970000 /* xml_report_formatter.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		226DA30226DA30226DA30000 /* boost_unit_test_framework-mt-shared-debug */ = {
			isa = PBXGroup;
			children = (
				226DEC0226DEC0226DEC0000 /* Source Files */,
				27503A027503A027503A0000 /* CMakeLists.txt */,
			);
			name = "boost_unit_test_framework-mt-shared-debug";
			sourceTree = "<group>";
		};
		226DEC0226DEC0226DEC0000 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				278AEC0278AEC0278AEC0000 /* compiler_log_formatter.cpp */,
				2752BD02752BD02752BD0000 /* debug.cpp */,
				27BDB0027BDB0027BDB00000 /* exception_safety.cpp */,
				2750C602750C602750C60000 /* execution_monitor.cpp */,
				278D1F0278D1F0278D1F0000 /* framework.cpp */,
				27BF80027BF80027BF800000 /* interaction_based.cpp */,
				27C03B027C03B027C03B0000 /* logged_expectations.cpp */,
				278DD50278DD50278DD50000 /* plain_report_formatter.cpp */,
				278E8E0278E8E0278E8E0000 /* progress_monitor.cpp */,
				278F4D0278F4D0278F4D0000 /* results_collector.cpp */,
				27900A027900A027900A0000 /* results_reporter.cpp */,
				27917F027917F027917F0000 /* test_tools.cpp */,
				279239027923902792390000 /* unit_test_log.cpp */,
				2792F202792F202792F20000 /* unit_test_main.cpp */,
				2793AD02793AD02793AD0000 /* unit_test_monitor.cpp */,
				279469027946902794690000 /* unit_test_parameters.cpp */,
				27951E027951E027951E0000 /* unit_test_suite.cpp */,
				2795DB02795DB02795DB0000 /* xml_log_formatter.cpp */,
				279697027969702796970000 /* xml_report_formatter.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		226F4C0226F4C0226F4C0000 /* boost_unit_test_framework-mt-static */ = {
			isa = PBXGroup;
			children = (
				226F910226F910226F910000 /* Source Files */,
				27503A027503A027503A0000 /* CMakeLists.txt */,
			);
			name = "boost_unit_test_framework-mt-static";
			sourceTree = "<group>";
		};
		226F910226F910226F910000 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				278AEC0278AEC0278AEC0000 /* compiler_log_formatter.cpp */,
				2752BD02752BD02752BD0000 /* debug.cpp */,
				27BDB0027BDB0027BDB00000 /* exception_safety.cpp */,
				2750C602750C602750C60000 /* execution_monitor.cpp */,
				278D1F0278D1F0278D1F0000 /* framework.cpp */,
				27BF80027BF80027BF800000 /* interaction_based.cpp */,
				27C03B027C03B027C03B0000 /* logged_expectations.cpp */,
				278DD50278DD50278DD50000 /* plain_report_formatter.cpp */,
				278E8E0278E8E0278E8E0000 /* progress_monitor.cpp */,
				278F4D0278F4D0278F4D0000 /* results_collector.cpp */,
				27900A027900A027900A0000 /* results_reporter.cpp */,
				27917F027917F027917F0000 /* test_tools.cpp */,
				279239027923902792390000 /* unit_test_log.cpp */,
				2792F202792F202792F20000 /* unit_test_main.cpp */,
				2793AD02793AD02793AD0000 /* unit_test_monitor.cpp */,
				279469027946902794690000 /* unit_test_parameters.cpp */,
				27951E027951E027951E0000 /* unit_test_suite.cpp */,
				2795DB02795DB02795DB0000 /* xml_log_formatter.cpp */,
				279697027969702796970000 /* xml_report_formatter.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		2270CC02270CC02270CC0000 /* boost_unit_test_framework-mt-static-debug */ = {
			isa = PBXGroup;
			children = (
				227115022711502271150000 /* Source Files */,
				27503A027503A027503A0000 /* CMakeLists.txt */,
			);
			name = "boost_unit_test_framework-mt-static-debug";
			sourceTree = "<group>";
		};
		227115022711502271150000 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				278AEC0278AEC0278AEC0000 /* compiler_log_formatter.cpp */,
				2752BD02752BD02752BD0000 /* debug.cpp */,
				27BDB0027BDB0027BDB00000 /* exception_safety.cpp */,
				2750C602750C602750C60000 /* execution_monitor.cpp */,
				278D1F0278D1F0278D1F0000 /* framework.cpp */,
				27BF80027BF80027BF800000 /* interaction_based.cpp */,
				27C03B027C03B027C03B0000 /* logged_expectations.cpp */,
				278DD50278DD50278DD50000 /* plain_report_formatter.cpp */,
				278E8E0278E8E0278E8E0000 /* progress_monitor.cpp */,
				278F4D0278F4D0278F4D0000 /* results_collector.cpp */,
				27900A027900A027900A0000 /* results_reporter.cpp */,
				27917F027917F027917F0000 /* test_tools.cpp */,
				279239027923902792390000 /* unit_test_log.cpp */,
				2792F202792F202792F20000 /* unit_test_main.cpp */,
				2793AD02793AD02793AD0000 /* unit_test_monitor.cpp */,
				279469027946902794690000 /* unit_test_parameters.cpp */,
				27951E027951E027951E0000 /* unit_test_suite.cpp */,
				2795DB02795DB02795DB0000 /* xml_log_formatter.cpp */,
				279697027969702796970000 /* xml_report_formatter.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		2272CF02272CF02272CF0000 /* dynamic_bitset-modularize */ = {
			isa = PBXGroup;
			children = (
				227345022734502273450000 /* CMake Rules */,
				281BD20281BD20281BD20000 /* CMakeLists.txt */,
			);
			name = "dynamic_bitset-modularize";
			sourceTree = "<group>";
		};
		227345022734502273450000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		2273A602273A602273A60000 /* filesystem-modularize */ = {
			isa = PBXGroup;
			children = (
				227412022741202274120000 /* CMake Rules */,
				2823DA02823DA02823DA0000 /* CMakeLists.txt */,
			);
			name = "filesystem-modularize";
			sourceTree = "<group>";
		};
		227412022741202274120000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		22747A022747A022747A0000 /* boost_filesystem */ = {
			isa = PBXGroup;
			children = (
				2274E102274E102274E10000 /* CMake Rules */,
				282BD80282BD80282BD80000 /* CMakeLists.txt */,
			);
			name = boost_filesystem;
			sourceTree = "<group>";
		};
		2274E102274E102274E10000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		227538022753802275380000 /* boost_filesystem-mt-shared */ = {
			isa = PBXGroup;
			children = (
				227585022758502275850000 /* Source Files */,
				282BD80282BD80282BD80000 /* CMakeLists.txt */,
			);
			name = "boost_filesystem-mt-shared";
			sourceTree = "<group>";
		};
		227585022758502275850000 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				282BFD0282BFD0282BFD0000 /* operations.cpp */,
				282D510282D510282D510000 /* path.cpp */,
				282E070282E070282E070000 /* portability.cpp */,
				282EC30282EC30282EC30000 /* utf8_codecvt_facet.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		2275DE02275DE02275DE0000 /* boost_filesystem-mt-shared-debug */ = {
			isa = PBXGroup;
			children = (
				22764E022764E022764E0000 /* Source Files */,
				282BD80282BD80282BD80000 /* CMakeLists.txt */,
			);
			name = "boost_filesystem-mt-shared-debug";
			sourceTree = "<group>";
		};
		22764E022764E022764E0000 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				282BFD0282BFD0282BFD0000 /* operations.cpp */,
				282D510282D510282D510000 /* path.cpp */,
				282E070282E070282E070000 /* portability.cpp */,
				282EC30282EC30282EC30000 /* utf8_codecvt_facet.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		2276A802276A802276A80000 /* boost_filesystem-mt-static */ = {
			isa = PBXGroup;
			children = (
				227719022771902277190000 /* Source Files */,
				282BD80282BD80282BD80000 /* CMakeLists.txt */,
			);
			name = "boost_filesystem-mt-static";
			sourceTree = "<group>";
		};
		227719022771902277190000 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				282BFD0282BFD0282BFD0000 /* operations.cpp */,
				282D510282D510282D510000 /* path.cpp */,
				282E070282E070282E070000 /* portability.cpp */,
				282EC30282EC30282EC30000 /* utf8_codecvt_facet.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		227772022777202277720000 /* boost_filesystem-mt-static-debug */ = {
			isa = PBXGroup;
			children = (
				2277E202277E202277E20000 /* Source Files */,
				282BD80282BD80282BD80000 /* CMakeLists.txt */,
			);
			name = "boost_filesystem-mt-static-debug";
			sourceTree = "<group>";
		};
		2277E202277E202277E20000 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				282BFD0282BFD0282BFD0000 /* operations.cpp */,
				282D510282D510282D510000 /* path.cpp */,
				282E070282E070282E070000 /* portability.cpp */,
				282EC30282EC30282EC30000 /* utf8_codecvt_facet.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		227889022788902278890000 /* interprocess-modularize */ = {
			isa = PBXGroup;
			children = (
				227905022790502279050000 /* CMake Rules */,
				286872028687202868720000 /* CMakeLists.txt */,
			);
			name = "interprocess-modularize";
			sourceTree = "<group>";
		};
		227905022790502279050000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		227966022796602279660000 /* flyweight-modularize */ = {
			isa = PBXGroup;
			children = (
				2279D102279D102279D10000 /* CMake Rules */,
				28707E028707E028707E0000 /* CMakeLists.txt */,
			);
			name = "flyweight-modularize";
			sourceTree = "<group>";
		};
		2279D102279D102279D10000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		227A680227A680227A680000 /* gil-modularize */ = {
			isa = PBXGroup;
			children = (
				227AB80227AB80227AB80000 /* CMake Rules */,
				287887028788702878870000 /* CMakeLists.txt */,
			);
			name = "gil-modularize";
			sourceTree = "<group>";
		};
		227AB80227AB80227AB80000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		227B4A0227B4A0227B4A0000 /* mpi-modularize */ = {
			isa = PBXGroup;
			children = (
				227B9A0227B9A0227B9A0000 /* CMake Rules */,
				288014028801402880140000 /* CMakeLists.txt */,
			);
			name = "mpi-modularize";
			sourceTree = "<group>";
		};
		227B9A0227B9A0227B9A0000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		227BFD0227BFD0227BFD0000 /* boost_mpi */ = {
			isa = PBXGroup;
			children = (
				227C5D0227C5D0227C5D0000 /* CMake Rules */,
				28889D028889D028889D0000 /* CMakeLists.txt */,
			);
			name = boost_mpi;
			sourceTree = "<group>";
		};
		227C5D0227C5D0227C5D0000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		227CBB0227CBB0227CBB0000 /* boost_mpi-mt-shared */ = {
			isa = PBXGroup;
			children = (
				227D030227D030227D030000 /* Source Files */,
				28889D028889D028889D0000 /* CMakeLists.txt */,
			);
			name = "boost_mpi-mt-shared";
			sourceTree = "<group>";
		};
		227D030227D030227D030000 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				28869A028869A028869A0000 /* broadcast.cpp */,
				288A260288A260288A260000 /* communicator.cpp */,
				288ADD0288ADD0288ADD0000 /* computation_tree.cpp */,
				288B9A0288B9A0288B9A0000 /* content_oarchive.cpp */,
				288C560288C560288C560000 /* environment.cpp */,
				288D140288D140288D140000 /* exception.cpp */,
				288DCF0288DCF0288DCF0000 /* graph_communicator.cpp */,
				288E8B0288E8B0288E8B0000 /* group.cpp */,
				288F460288F460288F460000 /* intercommunicator.cpp */,
				28900B028900B028900B0000 /* mpi_datatype_cache.cpp */,
				2890C902890C902890C90000 /* mpi_datatype_oarchive.cpp */,
				289186028918602891860000 /* packed_iarchive.cpp */,
				289242028924202892420000 /* packed_oarchive.cpp */,
				2892FE02892FE02892FE0000 /* packed_skeleton_iarchive.cpp */,
				2893BB02893BB02893BB0000 /* packed_skeleton_oarchive.cpp */,
				289477028947702894770000 /* point_to_point.cpp */,
				28952F028952F028952F0000 /* request.cpp */,
				2895F802895F802895F80000 /* text_skeleton_oarchive.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		227E150227E150227E150000 /* boost_mpi-mt-shared-debug */ = {
			isa = PBXGroup;
			children = (
				227E5F0227E5F0227E5F0000 /* Source Files */,
				28889D028889D028889D0000 /* CMakeLists.txt */,
			);
			name = "boost_mpi-mt-shared-debug";
			sourceTree = "<group>";
		};
		227E5F0227E5F0227E5F0000 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				28869A028869A028869A0000 /* broadcast.cpp */,
				288A260288A260288A260000 /* communicator.cpp */,
				288ADD0288ADD0288ADD0000 /* computation_tree.cpp */,
				288B9A0288B9A0288B9A0000 /* content_oarchive.cpp */,
				288C560288C560288C560000 /* environment.cpp */,
				288D140288D140288D140000 /* exception.cpp */,
				288DCF0288DCF0288DCF0000 /* graph_communicator.cpp */,
				288E8B0288E8B0288E8B0000 /* group.cpp */,
				288F460288F460288F460000 /* intercommunicator.cpp */,
				28900B028900B028900B0000 /* mpi_datatype_cache.cpp */,
				2890C902890C902890C90000 /* mpi_datatype_oarchive.cpp */,
				289186028918602891860000 /* packed_iarchive.cpp */,
				289242028924202892420000 /* packed_oarchive.cpp */,
				2892FE02892FE02892FE0000 /* packed_skeleton_iarchive.cpp */,
				2893BB02893BB02893BB0000 /* packed_skeleton_oarchive.cpp */,
				289477028947702894770000 /* point_to_point.cpp */,
				28952F028952F028952F0000 /* request.cpp */,
				2895F802895F802895F80000 /* text_skeleton_oarchive.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		227F780227F780227F780000 /* boost_mpi-mt-static */ = {
			isa = PBXGroup;
			children = (
				227FC00227FC00227FC00000 /* Source Files */,
				28889D028889D028889D0000 /* CMakeLists.txt */,
			);
			name = "boost_mpi-mt-static";
			sourceTree = "<group>";
		};
		227FC00227FC00227FC00000 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				28869A028869A028869A0000 /* broadcast.cpp */,
				288A260288A260288A260000 /* communicator.cpp */,
				288ADD0288ADD0288ADD0000 /* computation_tree.cpp */,
				288B9A0288B9A0288B9A0000 /* content_oarchive.cpp */,
				288C560288C560288C560000 /* environment.cpp */,
				288D140288D140288D140000 /* exception.cpp */,
				288DCF0288DCF0288DCF0000 /* graph_communicator.cpp */,
				288E8B0288E8B0288E8B0000 /* group.cpp */,
				288F460288F460288F460000 /* intercommunicator.cpp */,
				28900B028900B028900B0000 /* mpi_datatype_cache.cpp */,
				2890C902890C902890C90000 /* mpi_datatype_oarchive.cpp */,
				289186028918602891860000 /* packed_iarchive.cpp */,
				289242028924202892420000 /* packed_oarchive.cpp */,
				2892FE02892FE02892FE0000 /* packed_skeleton_iarchive.cpp */,
				2893BB02893BB02893BB0000 /* packed_skeleton_oarchive.cpp */,
				289477028947702894770000 /* point_to_point.cpp */,
				28952F028952F028952F0000 /* request.cpp */,
				2895F802895F802895F80000 /* text_skeleton_oarchive.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		2280D202280D202280D20000 /* boost_mpi-mt-static-debug */ = {
			isa = PBXGroup;
			children = (
				22811C022811C022811C0000 /* Source Files */,
				28889D028889D028889D0000 /* CMakeLists.txt */,
			);
			name = "boost_mpi-mt-static-debug";
			sourceTree = "<group>";
		};
		22811C022811C022811C0000 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				28869A028869A028869A0000 /* broadcast.cpp */,
				288A260288A260288A260000 /* communicator.cpp */,
				288ADD0288ADD0288ADD0000 /* computation_tree.cpp */,
				288B9A0288B9A0288B9A0000 /* content_oarchive.cpp */,
				288C560288C560288C560000 /* environment.cpp */,
				288D140288D140288D140000 /* exception.cpp */,
				288DCF0288DCF0288DCF0000 /* graph_communicator.cpp */,
				288E8B0288E8B0288E8B0000 /* group.cpp */,
				288F460288F460288F460000 /* intercommunicator.cpp */,
				28900B028900B028900B0000 /* mpi_datatype_cache.cpp */,
				2890C902890C902890C90000 /* mpi_datatype_oarchive.cpp */,
				289186028918602891860000 /* packed_iarchive.cpp */,
				289242028924202892420000 /* packed_oarchive.cpp */,
				2892FE02892FE02892FE0000 /* packed_skeleton_iarchive.cpp */,
				2893BB02893BB02893BB0000 /* packed_skeleton_oarchive.cpp */,
				289477028947702894770000 /* point_to_point.cpp */,
				28952F028952F028952F0000 /* request.cpp */,
				2895F802895F802895F80000 /* text_skeleton_oarchive.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		228263022826302282630000 /* boost_graph_parallel */ = {
			isa = PBXGroup;
			children = (
				2282B202282B202282B20000 /* CMake Rules */,
				28E543028E543028E5430000 /* CMakeLists.txt */,
			);
			name = boost_graph_parallel;
			sourceTree = "<group>";
		};
		2282B202282B202282B20000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		22831D022831D022831D0000 /* boost_graph_parallel-mt-shared */ = {
			isa = PBXGroup;
			children = (
				228368022836802283680000 /* Source Files */,
				28E543028E543028E5430000 /* CMakeLists.txt */,
			);
			name = "boost_graph_parallel-mt-shared";
			sourceTree = "<group>";
		};
		228368022836802283680000 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				28E5DB028E5DB028E5DB0000 /* mpi_process_group.cpp */,
				28E743028E743028E7430000 /* tag_allocator.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		2283B202283B202283B20000 /* boost_graph_parallel-mt-shared-debug */ = {
			isa = PBXGroup;
			children = (
				228418022841802284180000 /* Source Files */,
				28E543028E543028E5430000 /* CMakeLists.txt */,
			);
			name = "boost_graph_parallel-mt-shared-debug";
			sourceTree = "<group>";
		};
		228418022841802284180000 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				28E5DB028E5DB028E5DB0000 /* mpi_process_group.cpp */,
				28E743028E743028E7430000 /* tag_allocator.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		228487022848702284870000 /* boost_graph_parallel-mt-static */ = {
			isa = PBXGroup;
			children = (
				2284CE02284CE02284CE0000 /* Source Files */,
				28E543028E543028E5430000 /* CMakeLists.txt */,
			);
			name = "boost_graph_parallel-mt-static";
			sourceTree = "<group>";
		};
		2284CE02284CE02284CE0000 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				28E5DB028E5DB028E5DB0000 /* mpi_process_group.cpp */,
				28E743028E743028E7430000 /* tag_allocator.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		228539022853902285390000 /* boost_graph_parallel-mt-static-debug */ = {
			isa = PBXGroup;
			children = (
				228586022858602285860000 /* Source Files */,
				28E543028E543028E5430000 /* CMakeLists.txt */,
			);
			name = "boost_graph_parallel-mt-static-debug";
			sourceTree = "<group>";
		};
		228586022858602285860000 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				28E5DB028E5DB028E5DB0000 /* mpi_process_group.cpp */,
				28E743028E743028E7430000 /* tag_allocator.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		228600022860002286000000 /* iostreams-modularize */ = {
			isa = PBXGroup;
			children = (
				228671022867102286710000 /* CMake Rules */,
				2921B802921B802921B80000 /* CMakeLists.txt */,
			);
			name = "iostreams-modularize";
			sourceTree = "<group>";
		};
		228671022867102286710000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		2286D902286D902286D90000 /* boost_iostreams */ = {
			isa = PBXGroup;
			children = (
				22873F022873F022873F0000 /* CMake Rules */,
				2929B002929B002929B00000 /* CMakeLists.txt */,
			);
			name = boost_iostreams;
			sourceTree = "<group>";
		};
		22873F022873F022873F0000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		228795022879502287950000 /* boost_iostreams-mt-shared */ = {
			isa = PBXGroup;
			children = (
				2287E102287E102287E10000 /* Source Files */,
				2929B002929B002929B00000 /* CMakeLists.txt */,
			);
			name = "boost_iostreams-mt-shared";
			sourceTree = "<group>";
		};
		2287E102287E102287E10000 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				292A540292A540292A540000 /* file_descriptor.cpp */,
				292B2B0292B2B0292B2B0000 /* mapped_file.cpp */,
				292BE50292BE50292BE50000 /* zlib.cpp */,
				292C9C0292C9C0292C9C0000 /* bzip2.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		22884F022884F022884F0000 /* boost_iostreams-mt-shared-debug */ = {
			isa = PBXGroup;
			children = (
				2288A702288A702288A70000 /* Source Files */,
				2929B002929B002929B00000 /* CMakeLists.txt */,
			);
			name = "boost_iostreams-mt-shared-debug";
			sourceTree = "<group>";
		};
		2288A702288A702288A70000 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				292A540292A540292A540000 /* file_descriptor.cpp */,
				292B2B0292B2B0292B2B0000 /* mapped_file.cpp */,
				292BE50292BE50292BE50000 /* zlib.cpp */,
				292C9C0292C9C0292C9C0000 /* bzip2.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		228924022892402289240000 /* boost_iostreams-mt-static */ = {
			isa = PBXGroup;
			children = (
				22896D022896D022896D0000 /* Source Files */,
				2929B002929B002929B00000 /* CMakeLists.txt */,
			);
			name = "boost_iostreams-mt-static";
			sourceTree = "<group>";
		};
		22896D022896D022896D0000 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				292A540292A540292A540000 /* file_descriptor.cpp */,
				292B2B0292B2B0292B2B0000 /* mapped_file.cpp */,
				292BE50292BE50292BE50000 /* zlib.cpp */,
				292C9C0292C9C0292C9C0000 /* bzip2.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		2289DB02289DB02289DB0000 /* boost_iostreams-mt-static-debug */ = {
			isa = PBXGroup;
			children = (
				228A330228A330228A330000 /* Source Files */,
				2929B002929B002929B00000 /* CMakeLists.txt */,
			);
			name = "boost_iostreams-mt-static-debug";
			sourceTree = "<group>";
		};
		228A330228A330228A330000 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				292A540292A540292A540000 /* file_descriptor.cpp */,
				292B2B0292B2B0292B2B0000 /* mapped_file.cpp */,
				292BE50292BE50292BE50000 /* zlib.cpp */,
				292C9C0292C9C0292C9C0000 /* bzip2.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		228ADC0228ADC0228ADC0000 /* lambda-modularize */ = {
			isa = PBXGroup;
			children = (
				228B3D0228B3D0228B3D0000 /* CMake Rules */,
				296632029663202966320000 /* CMakeLists.txt */,
			);
			name = "lambda-modularize";
			sourceTree = "<group>";
		};
		228B3D0228B3D0228B3D0000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		228BAB0228BAB0228BAB0000 /* multi_array-modularize */ = {
			isa = PBXGroup;
			children = (
				228C170228C170228C170000 /* CMake Rules */,
				296E4E0296E4E0296E4E0000 /* CMakeLists.txt */,
			);
			name = "multi_array-modularize";
			sourceTree = "<group>";
		};
		228C170228C170228C170000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		228CBB0228CBB0228CBB0000 /* program_options-modularize */ = {
			isa = PBXGroup;
			children = (
				228CFA0228CFA0228CFA0000 /* CMake Rules */,
				297638029763802976380000 /* CMakeLists.txt */,
			);
			name = "program_options-modularize";
			sourceTree = "<group>";
		};
		228CFA0228CFA0228CFA0000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		228D790228D790228D790000 /* boost_program_options */ = {
			isa = PBXGroup;
			children = (
				228DCB0228DCB0228DCB0000 /* CMake Rules */,
				297E3E0297E3E0297E3E0000 /* CMakeLists.txt */,
			);
			name = boost_program_options;
			sourceTree = "<group>";
		};
		228DCB0228DCB0228DCB0000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		228E360228E360228E360000 /* boost_program_options-mt-shared */ = {
			isa = PBXGroup;
			children = (
				228E820228E820228E820000 /* Source Files */,
				297E3E0297E3E0297E3E0000 /* CMakeLists.txt */,
			);
			name = "boost_program_options-mt-shared";
			sourceTree = "<group>";
		};
		228E820228E820228E820000 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				297F2C0297F2C0297F2C0000 /* cmdline.cpp */,
				297FE10297FE10297FE10000 /* config_file.cpp */,
				29809D029809D029809D0000 /* options_description.cpp */,
				29815F029815F029815F0000 /* parsers.cpp */,
				29821B029821B029821B0000 /* variables_map.cpp */,
				2982DE02982DE02982DE0000 /* value_semantic.cpp */,
				29839A029839A029839A0000 /* positional_options.cpp */,
				29845B029845B029845B0000 /* utf8_codecvt_facet.cpp */,
				29851C029851C029851C0000 /* convert.cpp */,
				2985D502985D502985D50000 /* winmain.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		228F510228F510228F510000 /* boost_program_options-mt-shared-debug */ = {
			isa = PBXGroup;
			children = (
				228F9B0228F9B0228F9B0000 /* Source Files */,
				297E3E0297E3E0297E3E0000 /* CMakeLists.txt */,
			);
			name = "boost_program_options-mt-shared-debug";
			sourceTree = "<group>";
		};
		228F9B0228F9B0228F9B0000 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				297F2C0297F2C0297F2C0000 /* cmdline.cpp */,
				297FE10297FE10297FE10000 /* config_file.cpp */,
				29809D029809D029809D0000 /* options_description.cpp */,
				29815F029815F029815F0000 /* parsers.cpp */,
				29821B029821B029821B0000 /* variables_map.cpp */,
				2982DE02982DE02982DE0000 /* value_semantic.cpp */,
				29839A029839A029839A0000 /* positional_options.cpp */,
				29845B029845B029845B0000 /* utf8_codecvt_facet.cpp */,
				29851C029851C029851C0000 /* convert.cpp */,
				2985D502985D502985D50000 /* winmain.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		229072022907202290720000 /* boost_program_options-mt-static */ = {
			isa = PBXGroup;
			children = (
				2290B702290B702290B70000 /* Source Files */,
				297E3E0297E3E0297E3E0000 /* CMakeLists.txt */,
			);
			name = "boost_program_options-mt-static";
			sourceTree = "<group>";
		};
		2290B702290B702290B70000 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				297F2C0297F2C0297F2C0000 /* cmdline.cpp */,
				297FE10297FE10297FE10000 /* config_file.cpp */,
				29809D029809D029809D0000 /* options_description.cpp */,
				29815F029815F029815F0000 /* parsers.cpp */,
				29821B029821B029821B0000 /* variables_map.cpp */,
				2982DE02982DE02982DE0000 /* value_semantic.cpp */,
				29839A029839A029839A0000 /* positional_options.cpp */,
				29845B029845B029845B0000 /* utf8_codecvt_facet.cpp */,
				29851C029851C029851C0000 /* convert.cpp */,
				2985D502985D502985D50000 /* winmain.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		229189022918902291890000 /* boost_program_options-mt-static-debug */ = {
			isa = PBXGroup;
			children = (
				2291D302291D302291D30000 /* Source Files */,
				297E3E0297E3E0297E3E0000 /* CMakeLists.txt */,
			);
			name = "boost_program_options-mt-static-debug";
			sourceTree = "<group>";
		};
		2291D302291D302291D30000 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				297F2C0297F2C0297F2C0000 /* cmdline.cpp */,
				297FE10297FE10297FE10000 /* config_file.cpp */,
				29809D029809D029809D0000 /* options_description.cpp */,
				29815F029815F029815F0000 /* parsers.cpp */,
				29821B029821B029821B0000 /* variables_map.cpp */,
				2982DE02982DE02982DE0000 /* value_semantic.cpp */,
				29839A029839A029839A0000 /* positional_options.cpp */,
				29845B029845B029845B0000 /* utf8_codecvt_facet.cpp */,
				29851C029851C029851C0000 /* convert.cpp */,
				2985D502985D502985D50000 /* winmain.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		2292D902292D902292D90000 /* rational-modularize */ = {
			isa = PBXGroup;
			children = (
				229345022934502293450000 /* CMake Rules */,
				29C8F7029C8F7029C8F70000 /* CMakeLists.txt */,
			);
			name = "rational-modularize";
			sourceTree = "<group>";
		};
		229345022934502293450000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		2293AA02293AA02293AA0000 /* signals-modularize */ = {
			isa = PBXGroup;
			children = (
				229423022942302294230000 /* CMake Rules */,
				29D0FC029D0FC029D0FC0000 /* CMakeLists.txt */,
			);
			name = "signals-modularize";
			sourceTree = "<group>";
		};
		229423022942302294230000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		22947E022947E022947E0000 /* boost_signals */ = {
			isa = PBXGroup;
			children = (
				2294CE02294CE02294CE0000 /* CMake Rules */,
				29D8FE029D8FE029D8FE0000 /* CMakeLists.txt */,
			);
			name = boost_signals;
			sourceTree = "<group>";
		};
		2294CE02294CE02294CE0000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		229532022953202295320000 /* boost_signals-mt-shared */ = {
			isa = PBXGroup;
			children = (
				229580022958002295800000 /* Source Files */,
				29D8FE029D8FE029D8FE0000 /* CMakeLists.txt */,
			);
			name = "boost_signals-mt-shared";
			sourceTree = "<group>";
		};
		229580022958002295800000 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				29D981029D981029D9810000 /* trackable.cpp */,
				29DA6E029DA6E029DA6E0000 /* connection.cpp */,
				29DB26029DB26029DB260000 /* named_slot_map.cpp */,
				29DBE1029DBE1029DBE10000 /* signal_base.cpp */,
				29DC9B029DC9B029DC9B0000 /* slot.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		229604022960402296040000 /* boost_signals-mt-shared-debug */ = {
			isa = PBXGroup;
			children = (
				22964B022964B022964B0000 /* Source Files */,
				29D8FE029D8FE029D8FE0000 /* CMakeLists.txt */,
			);
			name = "boost_signals-mt-shared-debug";
			sourceTree = "<group>";
		};
		22964B022964B022964B0000 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				29D981029D981029D9810000 /* trackable.cpp */,
				29DA6E029DA6E029DA6E0000 /* connection.cpp */,
				29DB26029DB26029DB260000 /* named_slot_map.cpp */,
				29DBE1029DBE1029DBE10000 /* signal_base.cpp */,
				29DC9B029DC9B029DC9B0000 /* slot.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		2296D402296D402296D40000 /* boost_signals-mt-static */ = {
			isa = PBXGroup;
			children = (
				22971F022971F022971F0000 /* Source Files */,
				29D8FE029D8FE029D8FE0000 /* CMakeLists.txt */,
			);
			name = "boost_signals-mt-static";
			sourceTree = "<group>";
		};
		22971F022971F022971F0000 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				29D981029D981029D9810000 /* trackable.cpp */,
				29DA6E029DA6E029DA6E0000 /* connection.cpp */,
				29DB26029DB26029DB260000 /* named_slot_map.cpp */,
				29DBE1029DBE1029DBE10000 /* signal_base.cpp */,
				29DC9B029DC9B029DC9B0000 /* slot.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		2297A302297A302297A30000 /* boost_signals-mt-static-debug */ = {
			isa = PBXGroup;
			children = (
				2297EA02297EA02297EA0000 /* Source Files */,
				29D8FE029D8FE029D8FE0000 /* CMakeLists.txt */,
			);
			name = "boost_signals-mt-static-debug";
			sourceTree = "<group>";
		};
		2297EA02297EA02297EA0000 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				29D981029D981029D9810000 /* trackable.cpp */,
				29DA6E029DA6E029DA6E0000 /* connection.cpp */,
				29DB26029DB26029DB260000 /* named_slot_map.cpp */,
				29DBE1029DBE1029DBE10000 /* signal_base.cpp */,
				29DC9B029DC9B029DC9B0000 /* slot.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		2298A402298A402298A40000 /* signals2-modularize */ = {
			isa = PBXGroup;
			children = (
				229904022990402299040000 /* CMake Rules */,
				2A1BB402A1BB402A1BB40000 /* CMakeLists.txt */,
			);
			name = "signals2-modularize";
			sourceTree = "<group>";
		};
		229904022990402299040000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		229973022997302299730000 /* statechart-modularize */ = {
			isa = PBXGroup;
			children = (
				2299DF02299DF02299DF0000 /* CMake Rules */,
				2A238302A238302A23830000 /* CMakeLists.txt */,
			);
			name = "statechart-modularize";
			sourceTree = "<group>";
		};
		2299DF02299DF02299DF0000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		229A760229A760229A760000 /* tr1-modularize */ = {
			isa = PBXGroup;
			children = (
				229AC60229AC60229AC60000 /* CMake Rules */,
				2A2BC202A2BC202A2BC20000 /* CMakeLists.txt */,
			);
			name = "tr1-modularize";
			sourceTree = "<group>";
		};
		229AC60229AC60229AC60000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		229B580229B580229B580000 /* units-modularize */ = {
			isa = PBXGroup;
			children = (
				229BB90229BB90229BB90000 /* CMake Rules */,
				2A336D02A336D02A336D0000 /* CMakeLists.txt */,
			);
			name = "units-modularize";
			sourceTree = "<group>";
		};
		229BB90229BB90229BB90000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		229C3A0229C3A0229C3A0000 /* wave-modularize */ = {
			isa = PBXGroup;
			children = (
				229C9B0229C9B0229C9B0000 /* CMake Rules */,
				2A3BDD02A3BDD02A3BDD0000 /* CMakeLists.txt */,
			);
			name = "wave-modularize";
			sourceTree = "<group>";
		};
		229C9B0229C9B0229C9B0000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		229CED0229CED0229CED0000 /* boost_wave */ = {
			isa = PBXGroup;
			children = (
				229D4D0229D4D0229D4D0000 /* CMake Rules */,
				2A43F002A43F002A43F00000 /* CMakeLists.txt */,
			);
			name = boost_wave;
			sourceTree = "<group>";
		};
		229D4D0229D4D0229D4D0000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		229DA60229DA60229DA60000 /* boost_wave-mt-shared */ = {
			isa = PBXGroup;
			children = (
				229DF20229DF20229DF20000 /* Source Files */,
				2A43F002A43F002A43F00000 /* CMakeLists.txt */,
			);
			name = "boost_wave-mt-shared";
			sourceTree = "<group>";
		};
		229DF20229DF20229DF20000 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				2A447A02A447A02A447A0000 /* instantiate_cpp_exprgrammar.cpp */,
				2A456E02A456E02A456E0000 /* instantiate_cpp_grammar.cpp */,
				2A462A02A462A02A462A0000 /* instantiate_cpp_literalgrs.cpp */,
				2A46E702A46E702A46E70000 /* instantiate_defined_grammar.cpp */,
				2A47A402A47A402A47A40000 /* instantiate_predef_macros.cpp */,
				2A486702A486702A48670000 /* instantiate_re2c_lexer.cpp */,
				2A492202A492202A49220000 /* instantiate_re2c_lexer_str.cpp */,
				2A49DD02A49DD02A49DD0000 /* token_ids.cpp */,
				2A4A9802A4A9802A4A980000 /* wave_config_constant.cpp */,
				2A4B5502A4B5502A4B550000 /* aq.cpp */,
				2A4C1002A4C1002A4C100000 /* cpp_re.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		229EBE0229EBE0229EBE0000 /* boost_wave-mt-shared-debug */ = {
			isa = PBXGroup;
			children = (
				229F0A0229F0A0229F0A0000 /* Source Files */,
				2A43F002A43F002A43F00000 /* CMakeLists.txt */,
			);
			name = "boost_wave-mt-shared-debug";
			sourceTree = "<group>";
		};
		229F0A0229F0A0229F0A0000 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				2A447A02A447A02A447A0000 /* instantiate_cpp_exprgrammar.cpp */,
				2A456E02A456E02A456E0000 /* instantiate_cpp_grammar.cpp */,
				2A462A02A462A02A462A0000 /* instantiate_cpp_literalgrs.cpp */,
				2A46E702A46E702A46E70000 /* instantiate_defined_grammar.cpp */,
				2A47A402A47A402A47A40000 /* instantiate_predef_macros.cpp */,
				2A486702A486702A48670000 /* instantiate_re2c_lexer.cpp */,
				2A492202A492202A49220000 /* instantiate_re2c_lexer_str.cpp */,
				2A49DD02A49DD02A49DD0000 /* token_ids.cpp */,
				2A4A9802A4A9802A4A980000 /* wave_config_constant.cpp */,
				2A4B5502A4B5502A4B550000 /* aq.cpp */,
				2A4C1002A4C1002A4C100000 /* cpp_re.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		229FE10229FE10229FE10000 /* boost_wave-mt-static */ = {
			isa = PBXGroup;
			children = (
				22A02C022A02C022A02C0000 /* Source Files */,
				2A43F002A43F002A43F00000 /* CMakeLists.txt */,
			);
			name = "boost_wave-mt-static";
			sourceTree = "<group>";
		};
		22A02C022A02C022A02C0000 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				2A447A02A447A02A447A0000 /* instantiate_cpp_exprgrammar.cpp */,
				2A456E02A456E02A456E0000 /* instantiate_cpp_grammar.cpp */,
				2A462A02A462A02A462A0000 /* instantiate_cpp_literalgrs.cpp */,
				2A46E702A46E702A46E70000 /* instantiate_defined_grammar.cpp */,
				2A47A402A47A402A47A40000 /* instantiate_predef_macros.cpp */,
				2A486702A486702A48670000 /* instantiate_re2c_lexer.cpp */,
				2A492202A492202A49220000 /* instantiate_re2c_lexer_str.cpp */,
				2A49DD02A49DD02A49DD0000 /* token_ids.cpp */,
				2A4A9802A4A9802A4A980000 /* wave_config_constant.cpp */,
				2A4B5502A4B5502A4B550000 /* aq.cpp */,
				2A4C1002A4C1002A4C100000 /* cpp_re.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		22A0F8022A0F8022A0F80000 /* boost_wave-mt-static-debug */ = {
			isa = PBXGroup;
			children = (
				22A144022A144022A1440000 /* Source Files */,
				2A43F002A43F002A43F00000 /* CMakeLists.txt */,
			);
			name = "boost_wave-mt-static-debug";
			sourceTree = "<group>";
		};
		22A144022A144022A1440000 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				2A447A02A447A02A447A0000 /* instantiate_cpp_exprgrammar.cpp */,
				2A456E02A456E02A456E0000 /* instantiate_cpp_grammar.cpp */,
				2A462A02A462A02A462A0000 /* instantiate_cpp_literalgrs.cpp */,
				2A46E702A46E702A46E70000 /* instantiate_defined_grammar.cpp */,
				2A47A402A47A402A47A40000 /* instantiate_predef_macros.cpp */,
				2A486702A486702A48670000 /* instantiate_re2c_lexer.cpp */,
				2A492202A492202A49220000 /* instantiate_re2c_lexer_str.cpp */,
				2A49DD02A49DD02A49DD0000 /* token_ids.cpp */,
				2A4A9802A4A9802A4A980000 /* wave_config_constant.cpp */,
				2A4B5502A4B5502A4B550000 /* aq.cpp */,
				2A4C1002A4C1002A4C100000 /* cpp_re.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		22A247022A247022A2470000 /* bcp */ = {
			isa = PBXGroup;
			children = (
				22A286022A286022A2860000 /* Source Files */,
				2A911202A911202A91120000 /* CMakeLists.txt */,
			);
			name = bcp;
			sourceTree = "<group>";
		};
		22A286022A286022A2860000 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				2A893202A893202A89320000 /* add_path.cpp */,
				2A89DF02A89DF02A89DF0000 /* bcp_imp.cpp */,
				2A8A9602A8A9602A8A960000 /* copy_path.cpp */,
				2A8B4D02A8B4D02A8B4D0000 /* file_types.cpp */,
				2A8C0402A8C0402A8C040000 /* fileview.cpp */,
				2A8CBE02A8CBE02A8CBE0000 /* main.cpp */,
				2A8D7802A8D7802A8D780000 /* path_operations.cpp */,
				2A8E3002A8E3002A8E300000 /* scan_cvs_path.cpp */,
				2A8EE702A8EE702A8EE70000 /* licence_info.cpp */,
				2A8FA402A8FA402A8FA40000 /* scan_licence.cpp */,
				2A905702A905702A90570000 /* output_licence_info.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		22A36C022A36C022A36C0000 /* inspect */ = {
			isa = PBXGroup;
			children = (
				22A3AC022A3AC022A3AC0000 /* Source Files */,
				2AA32002AA32002AA3200000 /* CMakeLists.txt */,
			);
			name = inspect;
			sourceTree = "<group>";
		};
		22A3AC022A3AC022A3AC0000 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				2A9AC202A9AC202A9AC20000 /* inspect.cpp */,
				2A9BE302A9BE302A9BE30000 /* license_check.cpp */,
				2A9C9B02A9C9B02A9C9B0000 /* link_check.cpp */,
				2A9D5402A9D5402A9D540000 /* path_name_check.cpp */,
				2A9E0A02A9E0A02A9E0A0000 /* tab_check.cpp */,
				2A9EC702A9EC702A9EC70000 /* crlf_check.cpp */,
				2A9F8202A9F8202A9F820000 /* end_check.cpp */,
				2AA03B02AA03B02AA03B0000 /* unnamed_namespace_check.cpp */,
				2AA0F802AA0F802AA0F80000 /* ascii_check.cpp */,
				2AA1B302AA1B302AA1B30000 /* copyright_check.cpp */,
				2AA26802AA26802AA2680000 /* minmax_check.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
/* End PBXGroup section */

/* Begin PBXNativeTarget section */
		23DDB7023DDB7023DDB70000 /* libboost_date_time-mt.dylib */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 23DE0E023DE0E023DE0E0000 /* Build configuration list for PBXNativeTarget "libboost_date_time-mt.dylib" */;
			buildPhases = (
				23DCE5023DCE5023DCE50000 /* CMake ReRun */,
				23DCA2023DCA2023DCA20000 /* Sources */,
				23DD61023DD61023DD610000 /* CMake PostBuild Rules */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = "libboost_date_time-mt.dylib";
			productName = "libboost_date_time-mt.dylib";
			productReference = 23E68D023E68D023E68D0000 /* libboost_date_time-mt.dylib */;
			productType = "com.apple.product-type.library.dynamic";
		};
		23EAA8023EAA8023EAA80000 /* libboost_date_time-mt-d.dylib */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 23EAFF023EAFF023EAFF0000 /* Build configuration list for PBXNativeTarget "libboost_date_time-mt-d.dylib" */;
			buildPhases = (
				23E9D6023E9D6023E9D60000 /* CMake ReRun */,
				23E98E023E98E023E98E0000 /* Sources */,
				23EA52023EA52023EA520000 /* CMake PostBuild Rules */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = "libboost_date_time-mt-d.dylib";
			productName = "libboost_date_time-mt-d.dylib";
			productReference = 23F37C023F37C023F37C0000 /* libboost_date_time-mt-d.dylib */;
			productType = "com.apple.product-type.library.dynamic";
		};
		23F7A6023F7A6023F7A60000 /* libboost_date_time-mt.a */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 23F7FD023F7FD023F7FD0000 /* Build configuration list for PBXNativeTarget "libboost_date_time-mt.a" */;
			buildPhases = (
				23F6D4023F6D4023F6D40000 /* CMake ReRun */,
				23F691023F691023F6910000 /* Sources */,
				23F750023F750023F7500000 /* CMake PostBuild Rules */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = "libboost_date_time-mt.a";
			productName = "libboost_date_time-mt.a";
			productReference = 240351024035102403510000 /* libboost_date_time-mt.a */;
			productType = "com.apple.product-type.library.static";
		};
		24077A024077A024077A0000 /* libboost_date_time-mt-d.a */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 2407D002407D002407D00000 /* Build configuration list for PBXNativeTarget "libboost_date_time-mt-d.a" */;
			buildPhases = (
				2406AA02406AA02406AA0000 /* CMake ReRun */,
				24066A024066A024066A0000 /* Sources */,
				24072A024072A024072A0000 /* CMake PostBuild Rules */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = "libboost_date_time-mt-d.a";
			productName = "libboost_date_time-mt-d.a";
			productReference = 240F390240F390240F390000 /* libboost_date_time-mt-d.a */;
			productType = "com.apple.product-type.library.static";
		};
		242409024240902424090000 /* libboost_thread-mt.dylib */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 242455024245502424550000 /* Build configuration list for PBXNativeTarget "libboost_thread-mt.dylib" */;
			buildPhases = (
				24232E024232E024232E0000 /* CMake ReRun */,
				2422E802422E802422E80000 /* Sources */,
				2423AA02423AA02423AA0000 /* CMake PostBuild Rules */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = "libboost_thread-mt.dylib";
			productName = "libboost_thread-mt.dylib";
			productReference = 242CC60242CC60242CC60000 /* libboost_thread-mt.dylib */;
			productType = "com.apple.product-type.library.dynamic";
		};
		2430E902430E902430E90000 /* libboost_thread-mt-d.dylib */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 243134024313402431340000 /* Build configuration list for PBXNativeTarget "libboost_thread-mt-d.dylib" */;
			buildPhases = (
				24300E024300E024300E0000 /* CMake ReRun */,
				242FCE0242FCE0242FCE0000 /* Sources */,
				24308E024308E024308E0000 /* CMake PostBuild Rules */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = "libboost_thread-mt-d.dylib";
			productName = "libboost_thread-mt-d.dylib";
			productReference = 2439AA02439AA02439AA0000 /* libboost_thread-mt-d.dylib */;
			productType = "com.apple.product-type.library.dynamic";
		};
		243DD30243DD30243DD30000 /* libboost_thread-mt.a */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 243E1F0243E1F0243E1F0000 /* Build configuration list for PBXNativeTarget "libboost_thread-mt.a" */;
			buildPhases = (
				243CF80243CF80243CF80000 /* CMake ReRun */,
				243CB60243CB60243CB60000 /* Sources */,
				243D740243D740243D740000 /* CMake PostBuild Rules */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = "libboost_thread-mt.a";
			productName = "libboost_thread-mt.a";
			productReference = 244580024458002445800000 /* libboost_thread-mt.a */;
			productType = "com.apple.product-type.library.static";
		};
		2449AE02449AE02449AE0000 /* libboost_thread-mt-d.a */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 2449F902449F902449F90000 /* Build configuration list for PBXNativeTarget "libboost_thread-mt-d.a" */;
			buildPhases = (
				2448D302448D302448D30000 /* CMake ReRun */,
				244893024489302448930000 /* Sources */,
				244953024495302449530000 /* CMake PostBuild Rules */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = "libboost_thread-mt-d.a";
			productName = "libboost_thread-mt-d.a";
			productReference = 245150024515002451500000 /* libboost_thread-mt-d.a */;
			productType = "com.apple.product-type.library.static";
		};
		24707B024707B024707B0000 /* libboost_regex-mt.dylib */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 2470C702470C702470C70000 /* Build configuration list for PBXNativeTarget "libboost_regex-mt.dylib" */;
			buildPhases = (
				246F9D0246F9D0246F9D0000 /* CMake ReRun */,
				246F530246F530246F530000 /* Sources */,
				24701C024701C024701C0000 /* CMake PostBuild Rules */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = "libboost_regex-mt.dylib";
			productName = "libboost_regex-mt.dylib";
			productReference = 24793B024793B024793B0000 /* libboost_regex-mt.dylib */;
			productType = "com.apple.product-type.library.dynamic";
		};
		24849D024849D024849D0000 /* libboost_regex-mt-d.dylib */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 2484E802484E802484E80000 /* Build configuration list for PBXNativeTarget "libboost_regex-mt-d.dylib" */;
			buildPhases = (
				2483C302483C302483C30000 /* CMake ReRun */,
				24836F024836F024836F0000 /* Sources */,
				248442024844202484420000 /* CMake PostBuild Rules */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = "libboost_regex-mt-d.dylib";
			productName = "libboost_regex-mt-d.dylib";
			productReference = 248D640248D640248D640000 /* libboost_regex-mt-d.dylib */;
			productType = "com.apple.product-type.library.dynamic";
		};
		2498D702498D702498D70000 /* libboost_regex-mt.a */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 249922024992202499220000 /* Build configuration list for PBXNativeTarget "libboost_regex-mt.a" */;
			buildPhases = (
				2497FD02497FD02497FD0000 /* CMake ReRun */,
				2497AE02497AE02497AE0000 /* Sources */,
				24987C024987C024987C0000 /* CMake PostBuild Rules */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = "libboost_regex-mt.a";
			productName = "libboost_regex-mt.a";
			productReference = 24A08C024A08C024A08C0000 /* libboost_regex-mt.a */;
			productType = "com.apple.product-type.library.static";
		};
		24ABE7024ABE7024ABE70000 /* libboost_regex-mt-d.a */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 24AC33024AC33024AC330000 /* Build configuration list for PBXNativeTarget "libboost_regex-mt-d.a" */;
			buildPhases = (
				24AB0C024AB0C024AB0C0000 /* CMake ReRun */,
				24AAC3024AAC3024AAC30000 /* Sources */,
				24AB88024AB88024AB880000 /* CMake PostBuild Rules */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = "libboost_regex-mt-d.a";
			productName = "libboost_regex-mt-d.a";
			productReference = 24B39F024B39F024B39F0000 /* libboost_regex-mt-d.a */;
			productType = "com.apple.product-type.library.static";
		};
		252539025253902525390000 /* libboost_serialization-mt.dylib */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 25258E025258E025258E0000 /* Build configuration list for PBXNativeTarget "libboost_serialization-mt.dylib" */;
			buildPhases = (
				252467025246702524670000 /* CMake ReRun */,
				25241B025241B025241B0000 /* Sources */,
				2524E302524E302524E30000 /* CMake PostBuild Rules */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = "libboost_serialization-mt.dylib";
			productName = "libboost_serialization-mt.dylib";
			productReference = 252DFE0252DFE0252DFE0000 /* libboost_serialization-mt.dylib */;
			productType = "com.apple.product-type.library.dynamic";
		};
		253DD50253DD50253DD50000 /* libboost_serialization-mt-d.dylib */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 253E2B0253E2B0253E2B0000 /* Build configuration list for PBXNativeTarget "libboost_serialization-mt-d.dylib" */;
			buildPhases = (
				253D000253D000253D000000 /* CMake ReRun */,
				253CB60253CB60253CB60000 /* Sources */,
				253D7F0253D7F0253D7F0000 /* CMake PostBuild Rules */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = "libboost_serialization-mt-d.dylib";
			productName = "libboost_serialization-mt-d.dylib";
			productReference = 25469A025469A025469A0000 /* libboost_serialization-mt-d.dylib */;
			productType = "com.apple.product-type.library.dynamic";
		};
		255652025565202556520000 /* libboost_serialization-mt.a */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 2556A902556A902556A90000 /* Build configuration list for PBXNativeTarget "libboost_serialization-mt.a" */;
			buildPhases = (
				255583025558302555830000 /* CMake ReRun */,
				255537025553702555370000 /* Sources */,
				255602025560202556020000 /* CMake PostBuild Rules */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = "libboost_serialization-mt.a";
			productName = "libboost_serialization-mt.a";
			productReference = 255E0A0255E0A0255E0A0000 /* libboost_serialization-mt.a */;
			productType = "com.apple.product-type.library.static";
		};
		256DA00256DA00256DA00000 /* libboost_serialization-mt-d.a */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 256DF60256DF60256DF60000 /* Build configuration list for PBXNativeTarget "libboost_serialization-mt-d.a" */;
			buildPhases = (
				256CCE0256CCE0256CCE0000 /* CMake ReRun */,
				256C830256C830256C830000 /* Sources */,
				256D4A0256D4A0256D4A0000 /* CMake PostBuild Rules */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = "libboost_serialization-mt-d.a";
			productName = "libboost_serialization-mt-d.a";
			productReference = 257559025755902575590000 /* libboost_serialization-mt-d.a */;
			productType = "com.apple.product-type.library.static";
		};
		258687025868702586870000 /* libboost_wserialization-mt.dylib */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 2586DC02586DC02586DC0000 /* Build configuration list for PBXNativeTarget "libboost_wserialization-mt.dylib" */;
			buildPhases = (
				2585B502585B502585B50000 /* CMake ReRun */,
				2584E602584E602584E60000 /* Sources */,
				258631025863102586310000 /* CMake PostBuild Rules */,
			);
			buildRules = (
			);
			dependencies = (
				2AB3F302AB3F302AB3F30000 /* PBXTargetDependency */,
			);
			name = "libboost_wserialization-mt.dylib";
			productName = "libboost_wserialization-mt.dylib";
			productReference = 258F400258F400258F400000 /* libboost_wserialization-mt.dylib */;
			productType = "com.apple.product-type.library.dynamic";
		};
		2596BC02596BC02596BC0000 /* libboost_wserialization-mt-d.dylib */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 259712025971202597120000 /* Build configuration list for PBXNativeTarget "libboost_wserialization-mt-d.dylib" */;
			buildPhases = (
				2595EA02595EA02595EA0000 /* CMake ReRun */,
				25951A025951A025951A0000 /* Sources */,
				259666025966602596660000 /* CMake PostBuild Rules */,
			);
			buildRules = (
			);
			dependencies = (
				2AB4E302AB4E302AB4E30000 /* PBXTargetDependency */,
			);
			name = "libboost_wserialization-mt-d.dylib";
			productName = "libboost_wserialization-mt-d.dylib";
			productReference = 259F7B0259F7B0259F7B0000 /* libboost_wserialization-mt-d.dylib */;
			productType = "com.apple.product-type.library.dynamic";
		};
		25A6C7025A6C7025A6C70000 /* libboost_wserialization-mt.a */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 25A71C025A71C025A71C0000 /* Build configuration list for PBXNativeTarget "libboost_wserialization-mt.a" */;
			buildPhases = (
				25A5F5025A5F5025A5F50000 /* CMake ReRun */,
				25A5AF025A5AF025A5AF0000 /* Sources */,
				25A671025A671025A6710000 /* CMake PostBuild Rules */,
			);
			buildRules = (
			);
			dependencies = (
				2AB37B02AB37B02AB37B0000 /* PBXTargetDependency */,
			);
			name = "libboost_wserialization-mt.a";
			productName = "libboost_wserialization-mt.a";
			productReference = 25AE7D025AE7D025AE7D0000 /* libboost_wserialization-mt.a */;
			productType = "com.apple.product-type.library.static";
		};
		25B5CC025B5CC025B5CC0000 /* libboost_wserialization-mt-d.a */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 25B622025B622025B6220000 /* Build configuration list for PBXNativeTarget "libboost_wserialization-mt-d.a" */;
			buildPhases = (
				25B4FA025B4FA025B4FA0000 /* CMake ReRun */,
				25B4B3025B4B3025B4B30000 /* Sources */,
				25B576025B576025B5760000 /* CMake PostBuild Rules */,
			);
			buildRules = (
			);
			dependencies = (
				2AB46B02AB46B02AB46B0000 /* PBXTargetDependency */,
			);
			name = "libboost_wserialization-mt-d.a";
			productName = "libboost_wserialization-mt-d.a";
			productReference = 25BD85025BD85025BD850000 /* libboost_wserialization-mt-d.a */;
			productType = "com.apple.product-type.library.static";
		};
		25F90F025F90F025F90F0000 /* libboost_graph-mt.dylib */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 25F95B025F95B025F95B0000 /* Build configuration list for PBXNativeTarget "libboost_graph-mt.dylib" */;
			buildPhases = (
				25F834025F834025F8340000 /* CMake ReRun */,
				25F7F5025F7F5025F7F50000 /* Sources */,
				25F8B0025F8B0025F8B00000 /* CMake PostBuild Rules */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = "libboost_graph-mt.dylib";
			productName = "libboost_graph-mt.dylib";
			productReference = 260551026055102605510000 /* libboost_graph-mt.dylib */;
			productType = "com.apple.product-type.library.dynamic";
		};
		2608DD02608DD02608DD0000 /* libboost_graph-mt-d.dylib */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 260928026092802609280000 /* Build configuration list for PBXNativeTarget "libboost_graph-mt-d.dylib" */;
			buildPhases = (
				260802026080202608020000 /* CMake ReRun */,
				2607B902607B902607B90000 /* Sources */,
				260882026088202608820000 /* CMake PostBuild Rules */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = "libboost_graph-mt-d.dylib";
			productName = "libboost_graph-mt-d.dylib";
			productReference = 261128026112802611280000 /* libboost_graph-mt-d.dylib */;
			productType = "com.apple.product-type.library.dynamic";
		};
		2614BD02614BD02614BD0000 /* libboost_graph-mt.a */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 261508026150802615080000 /* Build configuration list for PBXNativeTarget "libboost_graph-mt.a" */;
			buildPhases = (
				2613E202613E202613E20000 /* CMake ReRun */,
				26139E026139E026139E0000 /* Sources */,
				261462026146202614620000 /* CMake PostBuild Rules */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = "libboost_graph-mt.a";
			productName = "libboost_graph-mt.a";
			productReference = 261BF40261BF40261BF40000 /* libboost_graph-mt.a */;
			productType = "com.apple.product-type.library.static";
		};
		261F850261F850261F850000 /* libboost_graph-mt-d.a */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 261FD10261FD10261FD10000 /* Build configuration list for PBXNativeTarget "libboost_graph-mt-d.a" */;
			buildPhases = (
				261EA70261EA70261EA70000 /* CMake ReRun */,
				261E6A0261E6A0261E6A0000 /* Sources */,
				261F260261F260261F260000 /* CMake PostBuild Rules */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = "libboost_graph-mt-d.a";
			productName = "libboost_graph-mt-d.a";
			productReference = 2626C902626C902626C90000 /* libboost_graph-mt-d.a */;
			productType = "com.apple.product-type.library.static";
		};
		264E780264E780264E780000 /* libboost_python-mt.dylib */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 264EC40264EC40264EC40000 /* Build configuration list for PBXNativeTarget "libboost_python-mt.dylib" */;
			buildPhases = (
				264D9A0264D9A0264D9A0000 /* CMake ReRun */,
				264D500264D500264D500000 /* Sources */,
				264E190264E190264E190000 /* CMake PostBuild Rules */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = "libboost_python-mt.dylib";
			productName = "libboost_python-mt.dylib";
			productReference = 2656F202656F202656F20000 /* libboost_python-mt.dylib */;
			productType = "com.apple.product-type.library.dynamic";
		};
		266851026685102668510000 /* libboost_python-mt-d.dylib */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 26689C026689C026689C0000 /* Build configuration list for PBXNativeTarget "libboost_python-mt-d.dylib" */;
			buildPhases = (
				266777026677702667770000 /* CMake ReRun */,
				266723026672302667230000 /* Sources */,
				2667F602667F602667F60000 /* CMake PostBuild Rules */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = "libboost_python-mt-d.dylib";
			productName = "libboost_python-mt-d.dylib";
			productReference = 2670C902670C902670C90000 /* libboost_python-mt-d.dylib */;
			productType = "com.apple.product-type.library.dynamic";
		};
		26829B026829B026829B0000 /* libboost_python-mt.a */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 2682E702682E702682E70000 /* Build configuration list for PBXNativeTarget "libboost_python-mt.a" */;
			buildPhases = (
				2681C002681C002681C00000 /* CMake ReRun */,
				268175026817502681750000 /* Sources */,
				26823C026823C026823C0000 /* CMake PostBuild Rules */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = "libboost_python-mt.a";
			productName = "libboost_python-mt.a";
			productReference = 2689BE02689BE02689BE0000 /* libboost_python-mt.a */;
			productType = "com.apple.product-type.library.static";
		};
		269BA60269BA60269BA60000 /* libboost_python-mt-d.a */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 269BF10269BF10269BF10000 /* Build configuration list for PBXNativeTarget "libboost_python-mt-d.a" */;
			buildPhases = (
				269ACC0269ACC0269ACC0000 /* CMake ReRun */,
				269A800269A800269A800000 /* Sources */,
				269B4B0269B4B0269B4B0000 /* CMake PostBuild Rules */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = "libboost_python-mt-d.a";
			productName = "libboost_python-mt-d.a";
			productReference = 26A2C0026A2C0026A2C00000 /* libboost_python-mt-d.a */;
			productType = "com.apple.product-type.library.static";
		};
		26B6D3026B6D3026B6D30000 /* accumulators-accumulators_example */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 26B72A026B72A026B72A0000 /* Build configuration list for PBXNativeTarget "accumulators-accumulators_example" */;
			buildPhases = (
				26B601026B601026B6010000 /* CMake ReRun */,
				26B5C2026B5C2026B5C20000 /* Sources */,
				26B67D026B67D026B67D0000 /* CMake PostBuild Rules */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = "accumulators-accumulators_example";
			productName = "accumulators-accumulators_example";
			productReference = 26BE4F026BE4F026BE4F0000 /* accumulators-accumulators_example */;
			productType = "com.apple.product-type.tool";
		};
		26D1BD026D1BD026D1BD0000 /* libboost_system-mt.dylib */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 26D209026D209026D2090000 /* Build configuration list for PBXNativeTarget "libboost_system-mt.dylib" */;
			buildPhases = (
				26D0E2026D0E2026D0E20000 /* CMake ReRun */,
				26D09D026D09D026D09D0000 /* Sources */,
				26D15E026D15E026D15E0000 /* CMake PostBuild Rules */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = "libboost_system-mt.dylib";
			productName = "libboost_system-mt.dylib";
			productReference = 26DA82026DA82026DA820000 /* libboost_system-mt.dylib */;
			productType = "com.apple.product-type.library.dynamic";
		};
		26DD8C026DD8C026DD8C0000 /* libboost_system-mt-d.dylib */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 26DDD7026DDD7026DDD70000 /* Build configuration list for PBXNativeTarget "libboost_system-mt-d.dylib" */;
			buildPhases = (
				26DCB1026DCB1026DCB10000 /* CMake ReRun */,
				26DC68026DC68026DC680000 /* Sources */,
				26DD31026DD31026DD310000 /* CMake PostBuild Rules */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = "libboost_system-mt-d.dylib";
			productName = "libboost_system-mt-d.dylib";
			productReference = 26E653026E653026E6530000 /* libboost_system-mt-d.dylib */;
			productType = "com.apple.product-type.library.dynamic";
		};
		26E960026E960026E9600000 /* libboost_system-mt.a */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 26E9AC026E9AC026E9AC0000 /* Build configuration list for PBXNativeTarget "libboost_system-mt.a" */;
			buildPhases = (
				26E882026E882026E8820000 /* CMake ReRun */,
				26E846026E846026E8460000 /* Sources */,
				26E901026E901026E9010000 /* CMake PostBuild Rules */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = "libboost_system-mt.a";
			productName = "libboost_system-mt.a";
			productReference = 26F11D026F11D026F11D0000 /* libboost_system-mt.a */;
			productType = "com.apple.product-type.library.static";
		};
		26F436026F436026F4360000 /* libboost_system-mt-d.a */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 26F482026F482026F4820000 /* Build configuration list for PBXNativeTarget "libboost_system-mt-d.a" */;
			buildPhases = (
				26F358026F358026F3580000 /* CMake ReRun */,
				26F31C026F31C026F31C0000 /* Sources */,
				26F3D7026F3D7026F3D70000 /* CMake PostBuild Rules */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = "libboost_system-mt-d.a";
			productName = "libboost_system-mt-d.a";
			productReference = 26FBF3026FBF3026FBF30000 /* libboost_system-mt-d.a */;
			productType = "com.apple.product-type.library.static";
		};
		27558F027558F027558F0000 /* libboost_prg_exec_monitor-mt.dylib */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 2755D902755D902755D90000 /* Build configuration list for PBXNativeTarget "libboost_prg_exec_monitor-mt.dylib" */;
			buildPhases = (
				2754B402754B402754B40000 /* CMake ReRun */,
				275474027547402754740000 /* Sources */,
				275534027553402755340000 /* CMake PostBuild Rules */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = "libboost_prg_exec_monitor-mt.dylib";
			productName = "libboost_prg_exec_monitor-mt.dylib";
			productReference = 275DF70275DF70275DF70000 /* libboost_prg_exec_monitor-mt.dylib */;
			productType = "com.apple.product-type.library.dynamic";
		};
		27626D027626D027626D0000 /* libboost_prg_exec_monitor-mt-d.dylib */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 2762BB02762BB02762BB0000 /* Build configuration list for PBXNativeTarget "libboost_prg_exec_monitor-mt-d.dylib" */;
			buildPhases = (
				276192027619202761920000 /* CMake ReRun */,
				27614A027614A027614A0000 /* Sources */,
				27620E027620E027620E0000 /* CMake PostBuild Rules */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = "libboost_prg_exec_monitor-mt-d.dylib";
			productName = "libboost_prg_exec_monitor-mt-d.dylib";
			productReference = 276AE60276AE60276AE60000 /* libboost_prg_exec_monitor-mt-d.dylib */;
			productType = "com.apple.product-type.library.dynamic";
		};
		276F4D0276F4D0276F4D0000 /* libboost_prg_exec_monitor-mt.a */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 276F9A0276F9A0276F9A0000 /* Build configuration list for PBXNativeTarget "libboost_prg_exec_monitor-mt.a" */;
			buildPhases = (
				276E720276E720276E720000 /* CMake ReRun */,
				276E300276E300276E300000 /* Sources */,
				276EEE0276EEE0276EEE0000 /* CMake PostBuild Rules */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = "libboost_prg_exec_monitor-mt.a";
			productName = "libboost_prg_exec_monitor-mt.a";
			productReference = 2776BE02776BE02776BE0000 /* libboost_prg_exec_monitor-mt.a */;
			productType = "com.apple.product-type.library.static";
		};
		277B2B0277B2B0277B2B0000 /* libboost_prg_exec_monitor-mt-d.a */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 277B790277B790277B790000 /* Build configuration list for PBXNativeTarget "libboost_prg_exec_monitor-mt-d.a" */;
			buildPhases = (
				277A500277A500277A500000 /* CMake ReRun */,
				277A0D0277A0D0277A0D0000 /* Sources */,
				277ACC0277ACC0277ACC0000 /* CMake PostBuild Rules */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = "libboost_prg_exec_monitor-mt-d.a";
			productName = "libboost_prg_exec_monitor-mt-d.a";
			productReference = 2782A402782A402782A40000 /* libboost_prg_exec_monitor-mt-d.a */;
			productType = "com.apple.product-type.library.static";
		};
		279979027997902799790000 /* libboost_test_exec_monitor-mt.a */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 2799C302799C302799C30000 /* Build configuration list for PBXNativeTarget "libboost_test_exec_monitor-mt.a" */;
			buildPhases = (
				27989F027989F027989F0000 /* CMake ReRun */,
				279853027985302798530000 /* Sources */,
				27991E027991E027991E0000 /* CMake PostBuild Rules */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = "libboost_test_exec_monitor-mt.a";
			productName = "libboost_test_exec_monitor-mt.a";
			productReference = 27A0DC027A0DC027A0DC0000 /* libboost_test_exec_monitor-mt.a */;
			productType = "com.apple.product-type.library.static";
		};
		27AC9D027AC9D027AC9D0000 /* libboost_test_exec_monitor-mt-d.a */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 27ACEB027ACEB027ACEB0000 /* Build configuration list for PBXNativeTarget "libboost_test_exec_monitor-mt-d.a" */;
			buildPhases = (
				27ABC2027ABC2027ABC20000 /* CMake ReRun */,
				27AB76027AB76027AB760000 /* Sources */,
				27AC3E027AC3E027AC3E0000 /* CMake PostBuild Rules */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = "libboost_test_exec_monitor-mt-d.a";
			productName = "libboost_test_exec_monitor-mt-d.a";
			productReference = 27B404027B404027B4040000 /* libboost_test_exec_monitor-mt-d.a */;
			productType = "com.apple.product-type.library.static";
		};
		27C987027C987027C9870000 /* libboost_unit_test_framework-mt.dylib */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 27C9D5027C9D5027C9D50000 /* Build configuration list for PBXNativeTarget "libboost_unit_test_framework-mt.dylib" */;
			buildPhases = (
				27C8AC027C8AC027C8AC0000 /* CMake ReRun */,
				27C85B027C85B027C85B0000 /* Sources */,
				27C928027C928027C9280000 /* CMake PostBuild Rules */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = "libboost_unit_test_framework-mt.dylib";
			productName = "libboost_unit_test_framework-mt.dylib";
			productReference = 27D1FE027D1FE027D1FE0000 /* libboost_unit_test_framework-mt.dylib */;
			productType = "com.apple.product-type.library.dynamic";
		};
		27DED2027DED2027DED20000 /* libboost_unit_test_framework-mt-d.dylib */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 27DF20027DF20027DF200000 /* Build configuration list for PBXNativeTarget "libboost_unit_test_framework-mt-d.dylib" */;
			buildPhases = (
				27DDF4027DDF4027DDF40000 /* CMake ReRun */,
				27DDAA027DDAA027DDAA0000 /* Sources */,
				27DE73027DE73027DE730000 /* CMake PostBuild Rules */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = "libboost_unit_test_framework-mt-d.dylib";
			productName = "libboost_unit_test_framework-mt-d.dylib";
			productReference = 27E74B027E74B027E74B0000 /* libboost_unit_test_framework-mt-d.dylib */;
			productType = "com.apple.product-type.library.dynamic";
		};
		27F422027F422027F4220000 /* libboost_unit_test_framework-mt.a */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 27F46D027F46D027F46D0000 /* Build configuration list for PBXNativeTarget "libboost_unit_test_framework-mt.a" */;
			buildPhases = (
				27F348027F348027F3480000 /* CMake ReRun */,
				27F2F7027F2F7027F2F70000 /* Sources */,
				27F3C7027F3C7027F3C70000 /* CMake PostBuild Rules */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = "libboost_unit_test_framework-mt.a";
			productName = "libboost_unit_test_framework-mt.a";
			productReference = 27FB58027FB58027FB580000 /* libboost_unit_test_framework-mt.a */;
			productType = "com.apple.product-type.library.static";
		};
		280C460280C460280C460000 /* libboost_unit_test_framework-mt-d.a */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 280C940280C940280C940000 /* Build configuration list for PBXNativeTarget "libboost_unit_test_framework-mt-d.a" */;
			buildPhases = (
				280B6B0280B6B0280B6B0000 /* CMake ReRun */,
				280B200280B200280B200000 /* Sources */,
				280BE70280BE70280BE70000 /* CMake PostBuild Rules */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = "libboost_unit_test_framework-mt-d.a";
			productName = "libboost_unit_test_framework-mt-d.a";
			productReference = 2813AC02813AC02813AC0000 /* libboost_unit_test_framework-mt-d.a */;
			productType = "com.apple.product-type.library.static";
		};
		283193028319302831930000 /* libboost_filesystem-mt.dylib */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 2831E902831E902831E90000 /* Build configuration list for PBXNativeTarget "libboost_filesystem-mt.dylib" */;
			buildPhases = (
				2830C302830C302830C30000 /* CMake ReRun */,
				283083028308302830830000 /* Sources */,
				283143028314302831430000 /* CMake PostBuild Rules */,
			);
			buildRules = (
			);
			dependencies = (
				2ABBF202ABBF202ABBF20000 /* PBXTargetDependency */,
			);
			name = "libboost_filesystem-mt.dylib";
			productName = "libboost_filesystem-mt.dylib";
			productReference = 283A520283A520283A520000 /* libboost_filesystem-mt.dylib */;
			productType = "com.apple.product-type.library.dynamic";
		};
		283EFE0283EFE0283EFE0000 /* libboost_filesystem-mt-d.dylib */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 283F540283F540283F540000 /* Build configuration list for PBXNativeTarget "libboost_filesystem-mt-d.dylib" */;
			buildPhases = (
				283E2E0283E2E0283E2E0000 /* CMake ReRun */,
				283DEE0283DEE0283DEE0000 /* Sources */,
				283EAE0283EAE0283EAE0000 /* CMake PostBuild Rules */,
			);
			buildRules = (
			);
			dependencies = (
				2ABCE202ABCE202ABCE20000 /* PBXTargetDependency */,
			);
			name = "libboost_filesystem-mt-d.dylib";
			productName = "libboost_filesystem-mt-d.dylib";
			productReference = 2847C202847C202847C20000 /* libboost_filesystem-mt-d.dylib */;
			productType = "com.apple.product-type.library.dynamic";
		};
		284C6D0284C6D0284C6D0000 /* libboost_filesystem-mt.a */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 284CC40284CC40284CC40000 /* Build configuration list for PBXNativeTarget "libboost_filesystem-mt.a" */;
			buildPhases = (
				284B9B0284B9B0284B9B0000 /* CMake ReRun */,
				284B580284B580284B580000 /* Sources */,
				284C170284C170284C170000 /* CMake PostBuild Rules */,
			);
			buildRules = (
			);
			dependencies = (
				2ABB7A02ABB7A02ABB7A0000 /* PBXTargetDependency */,
			);
			name = "libboost_filesystem-mt.a";
			productName = "libboost_filesystem-mt.a";
			productReference = 28542F028542F028542F0000 /* libboost_filesystem-mt.a */;
			productType = "com.apple.product-type.library.static";
		};
		2858DC02858DC02858DC0000 /* libboost_filesystem-mt-d.a */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 285932028593202859320000 /* Build configuration list for PBXNativeTarget "libboost_filesystem-mt-d.a" */;
			buildPhases = (
				28580C028580C028580C0000 /* CMake ReRun */,
				2857CC02857CC02857CC0000 /* Sources */,
				28588C028588C028588C0000 /* CMake PostBuild Rules */,
			);
			buildRules = (
			);
			dependencies = (
				2ABC6A02ABC6A02ABC6A0000 /* PBXTargetDependency */,
			);
			name = "libboost_filesystem-mt-d.a";
			productName = "libboost_filesystem-mt-d.a";
			productReference = 2860A702860A702860A70000 /* libboost_filesystem-mt-d.a */;
			productType = "com.apple.product-type.library.static";
		};
		2898D702898D702898D70000 /* libboost_mpi-mt.dylib */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 289923028992302899230000 /* Build configuration list for PBXNativeTarget "libboost_mpi-mt.dylib" */;
			buildPhases = (
				2897FC02897FC02897FC0000 /* CMake ReRun */,
				2897B002897B002897B00000 /* Sources */,
				289878028987802898780000 /* CMake PostBuild Rules */,
			);
			buildRules = (
			);
			dependencies = (
				2AB3F302AB3F302AB3F30000 /* PBXTargetDependency */,
			);
			name = "libboost_mpi-mt.dylib";
			productName = "libboost_mpi-mt.dylib";
			productReference = 28A14D028A14D028A14D0000 /* libboost_mpi-mt.dylib */;
			productType = "com.apple.product-type.library.dynamic";
		};
		28ADC4028ADC4028ADC40000 /* libboost_mpi-mt-d.dylib */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 28AE11028AE11028AE110000 /* Build configuration list for PBXNativeTarget "libboost_mpi-mt-d.dylib" */;
			buildPhases = (
				28ACE9028ACE9028ACE90000 /* CMake ReRun */,
				28ACA0028ACA0028ACA00000 /* Sources */,
				28AD65028AD65028AD650000 /* CMake PostBuild Rules */,
			);
			buildRules = (
			);
			dependencies = (
				2AB4E302AB4E302AB4E30000 /* PBXTargetDependency */,
			);
			name = "libboost_mpi-mt-d.dylib";
			productName = "libboost_mpi-mt-d.dylib";
			productReference = 28B637028B637028B6370000 /* libboost_mpi-mt-d.dylib */;
			productType = "com.apple.product-type.library.dynamic";
		};
		28C29B028C29B028C29B0000 /* libboost_mpi-mt.a */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 28C2E4028C2E4028C2E40000 /* Build configuration list for PBXNativeTarget "libboost_mpi-mt.a" */;
			buildPhases = (
				28C1C1028C1C1028C1C10000 /* CMake ReRun */,
				28C172028C172028C1720000 /* Sources */,
				28C240028C240028C2400000 /* CMake PostBuild Rules */,
			);
			buildRules = (
			);
			dependencies = (
				2AB37B02AB37B02AB37B0000 /* PBXTargetDependency */,
			);
			name = "libboost_mpi-mt.a";
			productName = "libboost_mpi-mt.a";
			productReference = 28C9F6028C9F6028C9F60000 /* libboost_mpi-mt.a */;
			productType = "com.apple.product-type.library.static";
		};
		28D640028D640028D6400000 /* libboost_mpi-mt-d.a */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 28D68A028D68A028D68A0000 /* Build configuration list for PBXNativeTarget "libboost_mpi-mt-d.a" */;
			buildPhases = (
				28D566028D566028D5660000 /* CMake ReRun */,
				28D51A028D51A028D51A0000 /* Sources */,
				28D5E5028D5E5028D5E50000 /* CMake PostBuild Rules */,
			);
			buildRules = (
			);
			dependencies = (
				2AB46B02AB46B02AB46B0000 /* PBXTargetDependency */,
			);
			name = "libboost_mpi-mt-d.a";
			productName = "libboost_mpi-mt-d.a";
			productReference = 28DDA2028DDA2028DDA20000 /* libboost_mpi-mt-d.a */;
			productType = "com.apple.product-type.library.static";
		};
		28EA10028EA10028EA100000 /* libboost_graph_parallel-mt.dylib */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 28EA68028EA68028EA680000 /* Build configuration list for PBXNativeTarget "libboost_graph_parallel-mt.dylib" */;
			buildPhases = (
				28E940028E940028E9400000 /* CMake ReRun */,
				28E900028E900028E9000000 /* Sources */,
				28E9C0028E9C0028E9C00000 /* CMake PostBuild Rules */,
			);
			buildRules = (
			);
			dependencies = (
				2AC47E02AC47E02AC47E0000 /* PBXTargetDependency */,
			);
			name = "libboost_graph_parallel-mt.dylib";
			productName = "libboost_graph_parallel-mt.dylib";
			productReference = 28F28B028F28B028F28B0000 /* libboost_graph_parallel-mt.dylib */;
			productType = "com.apple.product-type.library.dynamic";
		};
		28F67B028F67B028F67B0000 /* libboost_graph_parallel-mt-d.dylib */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 28F6D1028F6D1028F6D10000 /* Build configuration list for PBXNativeTarget "libboost_graph_parallel-mt-d.dylib" */;
			buildPhases = (
				28F5A9028F5A9028F5A90000 /* CMake ReRun */,
				28F566028F566028F5660000 /* Sources */,
				28F625028F625028F6250000 /* CMake PostBuild Rules */,
			);
			buildRules = (
			);
			dependencies = (
				2AC56502AC56502AC5650000 /* PBXTargetDependency */,
			);
			name = "libboost_graph_parallel-mt-d.dylib";
			productName = "libboost_graph_parallel-mt-d.dylib";
			productReference = 2902EE02902EE02902EE0000 /* libboost_graph_parallel-mt-d.dylib */;
			productType = "com.apple.product-type.library.dynamic";
		};
		2906D802906D802906D80000 /* libboost_graph_parallel-mt.a */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 29072E029072E029072E0000 /* Build configuration list for PBXNativeTarget "libboost_graph_parallel-mt.a" */;
			buildPhases = (
				290606029060602906060000 /* CMake ReRun */,
				2905C402905C402905C40000 /* Sources */,
				290682029068202906820000 /* CMake PostBuild Rules */,
			);
			buildRules = (
			);
			dependencies = (
				2AC40702AC40702AC4070000 /* PBXTargetDependency */,
			);
			name = "libboost_graph_parallel-mt.a";
			productName = "libboost_graph_parallel-mt.a";
			productReference = 290E3B0290E3B0290E3B0000 /* libboost_graph_parallel-mt.a */;
			productType = "com.apple.product-type.library.static";
		};
		29122A029122A029122A0000 /* libboost_graph_parallel-mt-d.a */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 291280029128002912800000 /* Build configuration list for PBXNativeTarget "libboost_graph_parallel-mt-d.a" */;
			buildPhases = (
				291158029115802911580000 /* CMake ReRun */,
				291111029111102911110000 /* Sources */,
				2911D402911D402911D40000 /* CMake PostBuild Rules */,
			);
			buildRules = (
			);
			dependencies = (
				2AC4ED02AC4ED02AC4ED0000 /* PBXTargetDependency */,
			);
			name = "libboost_graph_parallel-mt-d.a";
			productName = "libboost_graph_parallel-mt-d.a";
			productReference = 291990029199002919900000 /* libboost_graph_parallel-mt-d.a */;
			productType = "com.apple.product-type.library.static";
		};
		292F750292F750292F750000 /* libboost_iostreams-mt.dylib */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 292FCC0292FCC0292FCC0000 /* Build configuration list for PBXNativeTarget "libboost_iostreams-mt.dylib" */;
			buildPhases = (
				292EA30292EA30292EA30000 /* CMake ReRun */,
				292E600292E600292E600000 /* Sources */,
				292F1F0292F1F0292F1F0000 /* CMake PostBuild Rules */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = "libboost_iostreams-mt.dylib";
			productName = "libboost_iostreams-mt.dylib";
			productReference = 293843029384302938430000 /* libboost_iostreams-mt.dylib */;
			productType = "com.apple.product-type.library.dynamic";
		};
		293CE30293CE30293CE30000 /* libboost_iostreams-mt-d.dylib */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 293D390293D390293D390000 /* Build configuration list for PBXNativeTarget "libboost_iostreams-mt-d.dylib" */;
			buildPhases = (
				293C130293C130293C130000 /* CMake ReRun */,
				293BD30293BD30293BD30000 /* Sources */,
				293C930293C930293C930000 /* CMake PostBuild Rules */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = "libboost_iostreams-mt-d.dylib";
			productName = "libboost_iostreams-mt-d.dylib";
			productReference = 2945AA02945AA02945AA0000 /* libboost_iostreams-mt-d.dylib */;
			productType = "com.apple.product-type.library.dynamic";
		};
		294A4F0294A4F0294A4F0000 /* libboost_iostreams-mt.a */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 294AA60294AA60294AA60000 /* Build configuration list for PBXNativeTarget "libboost_iostreams-mt.a" */;
			buildPhases = (
				29497D029497D029497D0000 /* CMake ReRun */,
				29493A029493A029493A0000 /* Sources */,
				2949F902949F902949F90000 /* CMake PostBuild Rules */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = "libboost_iostreams-mt.a";
			productName = "libboost_iostreams-mt.a";
			productReference = 295204029520402952040000 /* libboost_iostreams-mt.a */;
			productType = "com.apple.product-type.library.static";
		};
		29569F029569F029569F0000 /* libboost_iostreams-mt-d.a */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 2956F502956F502956F50000 /* Build configuration list for PBXNativeTarget "libboost_iostreams-mt-d.a" */;
			buildPhases = (
				2955CF02955CF02955CF0000 /* CMake ReRun */,
				29558E029558E029558E0000 /* Sources */,
				29564F029564F029564F0000 /* CMake PostBuild Rules */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = "libboost_iostreams-mt-d.a";
			productName = "libboost_iostreams-mt-d.a";
			productReference = 295E5C0295E5C0295E5C0000 /* libboost_iostreams-mt-d.a */;
			productType = "com.apple.product-type.library.static";
		};
		2988B002988B002988B00000 /* libboost_program_options-mt.dylib */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 298907029890702989070000 /* Build configuration list for PBXNativeTarget "libboost_program_options-mt.dylib" */;
			buildPhases = (
				2987DE02987DE02987DE0000 /* CMake ReRun */,
				298797029879702987970000 /* Sources */,
				29885A029885A029885A0000 /* CMake PostBuild Rules */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = "libboost_program_options-mt.dylib";
			productName = "libboost_program_options-mt.dylib";
			productReference = 299115029911502991150000 /* libboost_program_options-mt.dylib */;
			productType = "com.apple.product-type.library.dynamic";
		};
		299954029995402999540000 /* libboost_program_options-mt-d.dylib */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 2999AB02999AB02999AB0000 /* Build configuration list for PBXNativeTarget "libboost_program_options-mt-d.dylib" */;
			buildPhases = (
				299882029988202998820000 /* CMake ReRun */,
				29983B029983B029983B0000 /* Sources */,
				2998FE02998FE02998FE0000 /* CMake PostBuild Rules */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = "libboost_program_options-mt-d.dylib";
			productName = "libboost_program_options-mt-d.dylib";
			productReference = 29A1BC029A1BC029A1BC0000 /* libboost_program_options-mt-d.dylib */;
			productType = "com.apple.product-type.library.dynamic";
		};
		29A9F0029A9F0029A9F00000 /* libboost_program_options-mt.a */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 29AA47029AA47029AA470000 /* Build configuration list for PBXNativeTarget "libboost_program_options-mt.a" */;
			buildPhases = (
				29A91E029A91E029A91E0000 /* CMake ReRun */,
				29A8D8029A8D8029A8D80000 /* Sources */,
				29A99A029A99A029A99A0000 /* CMake PostBuild Rules */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = "libboost_program_options-mt.a";
			productName = "libboost_program_options-mt.a";
			productReference = 29B146029B146029B1460000 /* libboost_program_options-mt.a */;
			productType = "com.apple.product-type.library.static";
		};
		29B96E029B96E029B96E0000 /* libboost_program_options-mt-d.a */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 29B9C5029B9C5029B9C50000 /* Build configuration list for PBXNativeTarget "libboost_program_options-mt-d.a" */;
			buildPhases = (
				29B89C029B89C029B89C0000 /* CMake ReRun */,
				29B855029B855029B8550000 /* Sources */,
				29B918029B918029B9180000 /* CMake PostBuild Rules */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = "libboost_program_options-mt-d.a";
			productName = "libboost_program_options-mt-d.a";
			productReference = 29C0C7029C0C7029C0C70000 /* libboost_program_options-mt-d.a */;
			productType = "com.apple.product-type.library.static";
		};
		29DF71029DF71029DF710000 /* libboost_signals-mt.dylib */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 29DFC6029DFC6029DFC60000 /* Build configuration list for PBXNativeTarget "libboost_signals-mt.dylib" */;
			buildPhases = (
				29DEA1029DEA1029DEA10000 /* CMake ReRun */,
				29DE5F029DE5F029DE5F0000 /* Sources */,
				29DF21029DF21029DF210000 /* CMake PostBuild Rules */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = "libboost_signals-mt.dylib";
			productName = "libboost_signals-mt.dylib";
			productReference = 29E83C029E83C029E83C0000 /* libboost_signals-mt.dylib */;
			productType = "com.apple.product-type.library.dynamic";
		};
		29ED59029ED59029ED590000 /* libboost_signals-mt-d.dylib */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 29EDB1029EDB1029EDB10000 /* Build configuration list for PBXNativeTarget "libboost_signals-mt-d.dylib" */;
			buildPhases = (
				29EC87029EC87029EC870000 /* CMake ReRun */,
				29EC45029EC45029EC450000 /* Sources */,
				29ED03029ED03029ED030000 /* CMake PostBuild Rules */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = "libboost_signals-mt-d.dylib";
			productName = "libboost_signals-mt-d.dylib";
			productReference = 29F632029F632029F6320000 /* libboost_signals-mt-d.dylib */;
			productType = "com.apple.product-type.library.dynamic";
		};
		29FB4B029FB4B029FB4B0000 /* libboost_signals-mt.a */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 29FBA1029FBA1029FBA10000 /* Build configuration list for PBXNativeTarget "libboost_signals-mt.a" */;
			buildPhases = (
				29FA79029FA79029FA790000 /* CMake ReRun */,
				29FA35029FA35029FA350000 /* Sources */,
				29FAF5029FAF5029FAF50000 /* CMake PostBuild Rules */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = "libboost_signals-mt.a";
			productName = "libboost_signals-mt.a";
			productReference = 2A070902A070902A07090000 /* libboost_signals-mt.a */;
			productType = "com.apple.product-type.library.static";
		};
		2A0C2902A0C2902A0C290000 /* libboost_signals-mt-d.a */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 2A0C8002A0C8002A0C800000 /* Build configuration list for PBXNativeTarget "libboost_signals-mt-d.a" */;
			buildPhases = (
				2A0B5902A0B5902A0B590000 /* CMake ReRun */,
				2A0B1602A0B1602A0B160000 /* Sources */,
				2A0BD902A0BD902A0BD90000 /* CMake PostBuild Rules */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = "libboost_signals-mt-d.a";
			productName = "libboost_signals-mt-d.a";
			productReference = 2A13EE02A13EE02A13EE0000 /* libboost_signals-mt-d.a */;
			productType = "com.apple.product-type.library.static";
		};
		2A4EEE02A4EEE02A4EEE0000 /* libboost_wave-mt.dylib */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 2A4F3B02A4F3B02A4F3B0000 /* Build configuration list for PBXNativeTarget "libboost_wave-mt.dylib" */;
			buildPhases = (
				2A4E1302A4E1302A4E130000 /* CMake ReRun */,
				2A4DCF02A4DCF02A4DCF0000 /* Sources */,
				2A4E8F02A4E8F02A4E8F0000 /* CMake PostBuild Rules */,
			);
			buildRules = (
			);
			dependencies = (
				2AAE4402AAE4402AAE440000 /* PBXTargetDependency */,
				2AB02B02AB02B02AB02B0000 /* PBXTargetDependency */,
				2AC29702AC29702AC2970000 /* PBXTargetDependency */,
			);
			name = "libboost_wave-mt.dylib";
			productName = "libboost_wave-mt.dylib";
			productReference = 2A57A802A57A802A57A80000 /* libboost_wave-mt.dylib */;
			productType = "com.apple.product-type.library.dynamic";
		};
		2A5FF702A5FF702A5FF70000 /* libboost_wave-mt-d.dylib */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 2A604402A604402A60440000 /* Build configuration list for PBXNativeTarget "libboost_wave-mt-d.dylib" */;
			buildPhases = (
				2A5F1C02A5F1C02A5F1C0000 /* CMake ReRun */,
				2A5ECE02A5ECE02A5ECE0000 /* Sources */,
				2A5F9802A5F9802A5F980000 /* CMake PostBuild Rules */,
			);
			buildRules = (
			);
			dependencies = (
				2AAF3202AAF3202AAF320000 /* PBXTargetDependency */,
				2AB11F02AB11F02AB11F0000 /* PBXTargetDependency */,
				2AC38702AC38702AC3870000 /* PBXTargetDependency */,
			);
			name = "libboost_wave-mt-d.dylib";
			productName = "libboost_wave-mt-d.dylib";
			productReference = 2A68B202A68B202A68B20000 /* libboost_wave-mt-d.dylib */;
			productType = "com.apple.product-type.library.dynamic";
		};
		2A710902A710902A71090000 /* libboost_wave-mt.a */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 2A715602A715602A71560000 /* Build configuration list for PBXNativeTarget "libboost_wave-mt.a" */;
			buildPhases = (
				2A702E02A702E02A702E0000 /* CMake ReRun */,
				2A6FE802A6FE802A6FE80000 /* Sources */,
				2A70AA02A70AA02A70AA0000 /* CMake PostBuild Rules */,
			);
			buildRules = (
			);
			dependencies = (
				2AADCB02AADCB02AADCB0000 /* PBXTargetDependency */,
				2AAFAF02AAFAF02AAFAF0000 /* PBXTargetDependency */,
				2AC21F02AC21F02AC21F0000 /* PBXTargetDependency */,
			);
			name = "libboost_wave-mt.a";
			productName = "libboost_wave-mt.a";
			productReference = 2A78B702A78B702A78B70000 /* libboost_wave-mt.a */;
			productType = "com.apple.product-type.library.static";
		};
		2A810602A810602A81060000 /* libboost_wave-mt-d.a */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 2A815302A815302A81530000 /* Build configuration list for PBXNativeTarget "libboost_wave-mt-d.a" */;
			buildPhases = (
				2A802B02A802B02A802B0000 /* CMake ReRun */,
				2A7FE602A7FE602A7FE60000 /* Sources */,
				2A80A702A80A702A80A70000 /* CMake PostBuild Rules */,
			);
			buildRules = (
			);
			dependencies = (
				2AAEBD02AAEBD02AAEBD0000 /* PBXTargetDependency */,
				2AB0A502AB0A502AB0A50000 /* PBXTargetDependency */,
				2AC30F02AC30F02AC30F0000 /* PBXTargetDependency */,
			);
			name = "libboost_wave-mt-d.a";
			productName = "libboost_wave-mt-d.a";
			productReference = 2A88B102A88B102A88B10000 /* libboost_wave-mt-d.a */;
			productType = "com.apple.product-type.library.static";
		};
		2A936502A936502A93650000 /* bcp */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 2A93B002A93B002A93B00000 /* Build configuration list for PBXNativeTarget "bcp" */;
			buildPhases = (
				2A928A02A928A02A928A0000 /* CMake ReRun */,
				2A924002A924002A92400000 /* Sources */,
				2A930602A930602A93060000 /* CMake PostBuild Rules */,
			);
			buildRules = (
			);
			dependencies = (
				2AB19902AB19902AB1990000 /* PBXTargetDependency */,
				2AB28B02AB28B02AB28B0000 /* PBXTargetDependency */,
				2ABB7A02ABB7A02ABB7A0000 /* PBXTargetDependency */,
				2ABC6A02ABC6A02ABC6A0000 /* PBXTargetDependency */,
				2ABD6502ABD6502ABD650000 /* PBXTargetDependency */,
				2ABE6202ABE6202ABE620000 /* PBXTargetDependency */,
				2AC21F02AC21F02AC21F0000 /* PBXTargetDependency */,
				2AC30F02AC30F02AC30F0000 /* PBXTargetDependency */,
			);
			name = bcp;
			productName = bcp;
			productReference = 2A9A5202A9A5202A9A520000 /* bcp */;
			productType = "com.apple.product-type.tool";
		};
		2AA57702AA57702AA5770000 /* inspect */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 2AA5C302AA5C302AA5C30000 /* Build configuration list for PBXNativeTarget "inspect" */;
			buildPhases = (
				2AA49C02AA49C02AA49C0000 /* CMake ReRun */,
				2AA45102AA45102AA4510000 /* Sources */,
				2AA51802AA51802AA5180000 /* CMake PostBuild Rules */,
			);
			buildRules = (
			);
			dependencies = (
				2AB19902AB19902AB1990000 /* PBXTargetDependency */,
				2AB28B02AB28B02AB28B0000 /* PBXTargetDependency */,
				2AC21F02AC21F02AC21F0000 /* PBXTargetDependency */,
				2AC30F02AC30F02AC30F0000 /* PBXTargetDependency */,
			);
			name = inspect;
			productName = inspect;
			productReference = 2AAD2802AAD2802AAD280000 /* inspect */;
			productType = "com.apple.product-type.tool";
		};
/* End PBXNativeTarget section */

/* Begin PBXProject section */
		22A47E022A47E022A47E0000 /* Project object */ = {
			isa = PBXProject;
			buildConfigurationList = 22A4D8022A4D8022A4D80000 /* Build configuration list for PBXProject "Boost" */;
			compatibilityVersion = "Xcode 2.4";
			hasScannedForEncodings = 0;
			mainGroup = 21FAC6021FAC6021FAC60000;
			projectDirPath = "";
			projectRoot = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0;
			targets = (
				22A632022A632022A6320000 /* ALL_BUILD */,
				22AE57022AE57022AE570000 /* Continuous */,
				22B602022B602022B6020000 /* Experimental */,
				22BDBA022BDBA022BDBA0000 /* Nightly */,
				22C56F022C56F022C56F0000 /* NightlyMemoryCheck */,
				22CD19022CD19022CD190000 /* RUN_TESTS */,
				22D497022D497022D4970000 /* install */,
				22DC02022DC02022DC020000 /* modularize */,
				22E3BF022E3BF022E3BF0000 /* package */,
				22EB34022EB34022EB340000 /* preprocessor-modularize */,
				22F37A022F37A022F37A0000 /* concept_check-modularize */,
				22FBDE022FBDE022FBDE0000 /* property_map-modularize */,
				230857023085702308570000 /* config-modularize */,
				23109C023109C023109C0000 /* mpl-modularize */,
				2318A802318A802318A80000 /* type_traits-modularize */,
				2320BC02320BC02320BC0000 /* function-modularize */,
				2328CB02328CB02328CB0000 /* iterator-modularize */,
				2330DF02330DF02330DF0000 /* smart_ptr-modularize */,
				2338EB02338EB02338EB0000 /* exception-modularize */,
				2340FD02340FD02340FD0000 /* utility-modularize */,
				234902023490202349020000 /* integer-modularize */,
				23510D023510D023510D0000 /* detail-modularize */,
				235913023591302359130000 /* static_assert-modularize */,
				236127023612702361270000 /* tuple-modularize */,
				236931023693102369310000 /* function_types-modularize */,
				237149023714902371490000 /* fusion-modularize */,
				23794A023794A023794A0000 /* typeof-modularize */,
				238154023815402381540000 /* proto-modularize */,
				238955023895502389550000 /* intrusive-modularize */,
				239169023916902391690000 /* logic-modularize */,
				23996F023996F023996F0000 /* numeric-modularize */,
				23A171023A171023A1710000 /* xpressive-modularize */,
				23A97A023A97A023A97A0000 /* optional-modularize */,
				23B196023B196023B1960000 /* tokenizer-modularize */,
				23B9A8023B9A8023B9A80000 /* io-modularize */,
				23C1BD023C1BD023C1BD0000 /* bind-modularize */,
				23C9C5023C9C5023C9C50000 /* date_time-modularize */,
				23D1CB023D1CB023D1CB0000 /* boost_date_time */,
				23DDB7023DDB7023DDB70000 /* libboost_date_time-mt.dylib */,
				23EAA8023EAA8023EAA80000 /* libboost_date_time-mt-d.dylib */,
				23F7A6023F7A6023F7A60000 /* libboost_date_time-mt.a */,
				24077A024077A024077A0000 /* libboost_date_time-mt-d.a */,
				241020024102002410200000 /* thread-modularize */,
				241821024182102418210000 /* boost_thread */,
				242409024240902424090000 /* libboost_thread-mt.dylib */,
				2430E902430E902430E90000 /* libboost_thread-mt-d.dylib */,
				243DD30243DD30243DD30000 /* libboost_thread-mt.a */,
				2449AE02449AE02449AE0000 /* libboost_thread-mt-d.a */,
				245237024523702452370000 /* regex-modularize */,
				245A360245A360245A360000 /* boost_regex */,
				24707B024707B024707B0000 /* libboost_regex-mt.dylib */,
				24849D024849D024849D0000 /* libboost_regex-mt-d.dylib */,
				2498D702498D702498D70000 /* libboost_regex-mt.a */,
				24ABE7024ABE7024ABE70000 /* libboost_regex-mt-d.a */,
				24B47E024B47E024B47E0000 /* algorithm-modularize */,
				24BC83024BC83024BC830000 /* range-modularize */,
				24C485024C485024C4850000 /* foreach-modularize */,
				24CC87024CC87024CC870000 /* array-modularize */,
				24D48F024D48F024D48F0000 /* functional-modularize */,
				24DCA4024DCA4024DCA40000 /* unordered-modularize */,
				24E4B2024E4B2024E4B20000 /* pool-modularize */,
				24ECB9024ECB9024ECB90000 /* spirit-modularize */,
				24F4BA024F4BA024F4BA0000 /* variant-modularize */,
				2500C602500C602500C60000 /* serialization-modularize */,
				2508D402508D402508D40000 /* boost_serialization */,
				252539025253902525390000 /* libboost_serialization-mt.dylib */,
				253DD50253DD50253DD50000 /* libboost_serialization-mt-d.dylib */,
				255652025565202556520000 /* libboost_serialization-mt.a */,
				256DA00256DA00256DA00000 /* libboost_serialization-mt-d.a */,
				257639025763902576390000 /* boost_wserialization */,
				258687025868702586870000 /* libboost_wserialization-mt.dylib */,
				2596BC02596BC02596BC0000 /* libboost_wserialization-mt-d.dylib */,
				25A6C7025A6C7025A6C70000 /* libboost_wserialization-mt.a */,
				25B5CC025B5CC025B5CC0000 /* libboost_wserialization-mt-d.a */,
				25BE68025BE68025BE680000 /* format-modularize */,
				25C66D025C66D025C66D0000 /* math-modularize */,
				25CE6D025CE6D025CE6D0000 /* multi_index-modularize */,
				25D673025D673025D6730000 /* any-modularize */,
				25DE7F025DE7F025DE7F0000 /* random-modularize */,
				25E68D025E68D025E68D0000 /* graph-modularize */,
				25EE93025EE93025EE930000 /* boost_graph */,
				25F90F025F90F025F90F0000 /* libboost_graph-mt.dylib */,
				2608DD02608DD02608DD0000 /* libboost_graph-mt-d.dylib */,
				2614BD02614BD02614BD0000 /* libboost_graph-mt.a */,
				261F850261F850261F850000 /* libboost_graph-mt-d.a */,
				262829026282902628290000 /* Python-modularize */,
				263032026303202630320000 /* boost_python */,
				264E780264E780264E780000 /* libboost_python-mt.dylib */,
				266851026685102668510000 /* libboost_python-mt-d.dylib */,
				26829B026829B026829B0000 /* libboost_python-mt.a */,
				269BA60269BA60269BA60000 /* libboost_python-mt-d.a */,
				26A399026A399026A3990000 /* parameter-modularize */,
				26AC2F026AC2F026AC2F0000 /* accumulators-modularize */,
				26B6D3026B6D3026B6D30000 /* accumulators-accumulators_example */,
				26BF35026BF35026BF350000 /* system-modularize */,
				26C740026C740026C7400000 /* boost_system */,
				26D1BD026D1BD026D1BD0000 /* libboost_system-mt.dylib */,
				26DD8C026DD8C026DD8C0000 /* libboost_system-mt-d.dylib */,
				26E960026E960026E9600000 /* libboost_system-mt.a */,
				26F436026F436026F4360000 /* libboost_system-mt-d.a */,
				2700CC02700CC02700CC0000 /* asio-modularize */,
				2708C902708C902708C90000 /* circular_buffer-modularize */,
				2710D202710D202710D20000 /* ptr_container-modularize */,
				2718DD02718DD02718DD0000 /* assign-modularize */,
				2720E202720E202720E20000 /* bimap-modularize */,
				2728EB02728EB02728EB0000 /* compatibility-modularize */,
				273130027313002731300000 /* crc-modularize */,
				273939027393902739390000 /* timer-modularize */,
				27418A027418A027418A0000 /* test-modularize */,
				27498C027498C027498C0000 /* boost_prg_exec_monitor */,
				27558F027558F027558F0000 /* libboost_prg_exec_monitor-mt.dylib */,
				27626D027626D027626D0000 /* libboost_prg_exec_monitor-mt-d.dylib */,
				276F4D0276F4D0276F4D0000 /* libboost_prg_exec_monitor-mt.a */,
				277B2B0277B2B0277B2B0000 /* libboost_prg_exec_monitor-mt-d.a */,
				2783D702783D702783D70000 /* boost_test_exec_monitor */,
				279979027997902799790000 /* libboost_test_exec_monitor-mt.a */,
				27AC9D027AC9D027AC9D0000 /* libboost_test_exec_monitor-mt-d.a */,
				27B532027B532027B5320000 /* boost_unit_test_framework */,
				27C987027C987027C9870000 /* libboost_unit_test_framework-mt.dylib */,
				27DED2027DED2027DED20000 /* libboost_unit_test_framework-mt-d.dylib */,
				27F422027F422027F4220000 /* libboost_unit_test_framework-mt.a */,
				280C460280C460280C460000 /* libboost_unit_test_framework-mt-d.a */,
				2814D802814D802814D80000 /* dynamic_bitset-modularize */,
				281CEE0281CEE0281CEE0000 /* filesystem-modularize */,
				2824FD02824FD02824FD0000 /* boost_filesystem */,
				283193028319302831930000 /* libboost_filesystem-mt.dylib */,
				283EFE0283EFE0283EFE0000 /* libboost_filesystem-mt-d.dylib */,
				284C6D0284C6D0284C6D0000 /* libboost_filesystem-mt.a */,
				2858DC02858DC02858DC0000 /* libboost_filesystem-mt-d.a */,
				286185028618502861850000 /* interprocess-modularize */,
				286991028699102869910000 /* flyweight-modularize */,
				287196028719602871960000 /* gil-modularize */,
				2879AC02879AC02879AC0000 /* mpi-modularize */,
				2881BA02881BA02881BA0000 /* boost_mpi */,
				2898D702898D702898D70000 /* libboost_mpi-mt.dylib */,
				28ADC4028ADC4028ADC40000 /* libboost_mpi-mt-d.dylib */,
				28C29B028C29B028C29B0000 /* libboost_mpi-mt.a */,
				28D640028D640028D6400000 /* libboost_mpi-mt-d.a */,
				28DED4028DED4028DED40000 /* boost_graph_parallel */,
				28EA10028EA10028EA100000 /* libboost_graph_parallel-mt.dylib */,
				28F67B028F67B028F67B0000 /* libboost_graph_parallel-mt-d.dylib */,
				2906D802906D802906D80000 /* libboost_graph_parallel-mt.a */,
				29122A029122A029122A0000 /* libboost_graph_parallel-mt-d.a */,
				291AD10291AD10291AD10000 /* iostreams-modularize */,
				2922D202922D202922D20000 /* boost_iostreams */,
				292F750292F750292F750000 /* libboost_iostreams-mt.dylib */,
				293CE30293CE30293CE30000 /* libboost_iostreams-mt-d.dylib */,
				294A4F0294A4F0294A4F0000 /* libboost_iostreams-mt.a */,
				29569F029569F029569F0000 /* libboost_iostreams-mt-d.a */,
				295F430295F430295F430000 /* lambda-modularize */,
				29674D029674D029674D0000 /* multi_array-modularize */,
				296F6B0296F6B0296F6B0000 /* program_options-modularize */,
				297777029777702977770000 /* boost_program_options */,
				2988B002988B002988B00000 /* libboost_program_options-mt.dylib */,
				299954029995402999540000 /* libboost_program_options-mt-d.dylib */,
				29A9F0029A9F0029A9F00000 /* libboost_program_options-mt.a */,
				29B96E029B96E029B96E0000 /* libboost_program_options-mt-d.a */,
				29C20B029C20B029C20B0000 /* rational-modularize */,
				29CA16029CA16029CA160000 /* signals-modularize */,
				29D219029D219029D2190000 /* boost_signals */,
				29DF71029DF71029DF710000 /* libboost_signals-mt.dylib */,
				29ED59029ED59029ED590000 /* libboost_signals-mt-d.dylib */,
				29FB4B029FB4B029FB4B0000 /* libboost_signals-mt.a */,
				2A0C2902A0C2902A0C290000 /* libboost_signals-mt-d.a */,
				2A14D202A14D202A14D20000 /* signals2-modularize */,
				2A1CD602A1CD602A1CD60000 /* statechart-modularize */,
				2A24DD02A24DD02A24DD0000 /* tr1-modularize */,
				2A2CE402A2CE402A2CE40000 /* units-modularize */,
				2A34F202A34F202A34F20000 /* wave-modularize */,
				2A3D0002A3D0002A3D000000 /* boost_wave */,
				2A4EEE02A4EEE02A4EEE0000 /* libboost_wave-mt.dylib */,
				2A5FF702A5FF702A5FF70000 /* libboost_wave-mt-d.dylib */,
				2A710902A710902A71090000 /* libboost_wave-mt.a */,
				2A810602A810602A81060000 /* libboost_wave-mt-d.a */,
				2A936502A936502A93650000 /* bcp */,
				2AA57702AA57702AA5770000 /* inspect */,
			);
		};
/* End PBXProject section */

/* Begin PBXShellScriptBuildPhase section */
		22A653022A653022A6530000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		22A6D3022A6D3022A6D30000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ALL_BUILD_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		22AE80022AE80022AE800000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		22AEFA022AEFA022AEFA0000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/Continuous_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		22B62B022B62B022B62B0000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		22B6A5022B6A5022B6A50000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/Experimental_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		22BDE3022BDE3022BDE30000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		22BE5D022BE5D022BE5D0000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/Nightly_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		22C598022C598022C5980000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		22C612022C612022C6120000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/NightlyMemoryCheck_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		22CD36022CD36022CD360000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		22CDB2022CDB2022CDB20000 /* CMake PostBuild Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake PostBuild Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/RUN_TESTS_postBuildPhase.make$CONFIGURATION all";
		};
		22D4B4022D4B4022D4B40000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		22D530022D530022D5300000 /* CMake PostBuild Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake PostBuild Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/install_postBuildPhase.make$CONFIGURATION all";
		};
		22DC23022DC23022DC230000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		22DCA3022DCA3022DCA30000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		22E3DC022E3DC022E3DC0000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		22E458022E458022E4580000 /* CMake PostBuild Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake PostBuild Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/package_postBuildPhase.make$CONFIGURATION all";
		};
		22EB5F022EB5F022EB5F0000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		22EBDB022EBDB022EBDB0000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/CMakeScripts/preprocessor-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		22F3A7022F3A7022F3A70000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		22F423022F423022F4230000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/CMakeScripts/concept_check-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		230000023000002300000000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		23007C023007C023007C0000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/CMakeScripts/property_map-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		230882023088202308820000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		2308FE02308FE02308FE0000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/CMakeScripts/config-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		2310C502310C502310C50000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		23113D023113D023113D0000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/CMakeScripts/mpl-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		2318D302318D302318D30000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		23194F023194F023194F0000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/CMakeScripts/type_traits-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		2320E702320E702320E70000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		232163023216302321630000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/CMakeScripts/function-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		2328F602328F602328F60000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		232972023297202329720000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/CMakeScripts/iterator-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		23311A023311A023311A0000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		233196023319602331960000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/CMakeScripts/smart_ptr-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		233918023391802339180000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		233994023399402339940000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/CMakeScripts/exception-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		23413F023413F023413F0000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		2341BB02341BB02341BB0000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/CMakeScripts/utility-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		234933023493302349330000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		2349AF02349AF02349AF0000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/CMakeScripts/integer-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		235136023513602351360000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		2351AE02351AE02351AE0000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/CMakeScripts/detail-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		23593C023593C023593C0000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		2359B402359B402359B40000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/CMakeScripts/static_assert-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		236150023615002361500000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		2361C802361C802361C80000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/CMakeScripts/tuple-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		23695A023695A023695A0000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		2369D202369D202369D20000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/CMakeScripts/function_types-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		237172023717202371720000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		2371EA02371EA02371EA0000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/CMakeScripts/fusion-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		237973023797302379730000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		2379EB02379EB02379EB0000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/CMakeScripts/typeof-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		23817D023817D023817D0000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		2381F502381F502381F50000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/CMakeScripts/proto-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		238980023898002389800000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		2389FC02389FC02389FC0000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/CMakeScripts/intrusive-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		239192023919202391920000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		23920A023920A023920A0000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/CMakeScripts/logic-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		239998023999802399980000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		239A100239A100239A100000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/CMakeScripts/numeric-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		23A19A023A19A023A19A0000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		23A212023A212023A2120000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/CMakeScripts/xpressive-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		23A9A5023A9A5023A9A50000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		23AA21023AA21023AA210000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/CMakeScripts/optional-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		23B1BF023B1BF023B1BF0000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		23B237023B237023B2370000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/CMakeScripts/tokenizer-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		23B9D3023B9D3023B9D30000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		23BA4F023BA4F023BA4F0000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/CMakeScripts/io-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		23C1E8023C1E8023C1E80000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		23C264023C264023C2640000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/CMakeScripts/bind-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		23C9F0023C9F0023C9F00000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		23CA6C023CA6C023CA6C0000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/CMakeScripts/date_time-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		23D1EC023D1EC023D1EC0000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		23D26C023D26C023D26C0000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/src -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/src/CMakeScripts/boost_date_time_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		23DCE5023DCE5023DCE50000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		23DD61023DD61023DD610000 /* CMake PostBuild Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake PostBuild Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/src -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/src/CMakeScripts/boost_date_time-mt-shared_postBuildPhase.make$CONFIGURATION all";
		};
		23E9D6023E9D6023E9D60000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		23EA52023EA52023EA520000 /* CMake PostBuild Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake PostBuild Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/src -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/src/CMakeScripts/boost_date_time-mt-shared-debug_postBuildPhase.make$CONFIGURATION all";
		};
		23F6D4023F6D4023F6D40000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		23F750023F750023F7500000 /* CMake PostBuild Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake PostBuild Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/src -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/src/CMakeScripts/boost_date_time-mt-static_postBuildPhase.make$CONFIGURATION all";
		};
		2406AA02406AA02406AA0000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		24072A024072A024072A0000 /* CMake PostBuild Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake PostBuild Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/src -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/src/CMakeScripts/boost_date_time-mt-static-debug_postBuildPhase.make$CONFIGURATION all";
		};
		24104B024104B024104B0000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		2410C702410C702410C70000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/CMakeScripts/thread-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		241842024184202418420000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		2418C202418C202418C20000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/src -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/src/CMakeScripts/boost_thread_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		24232E024232E024232E0000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		2423AA02423AA02423AA0000 /* CMake PostBuild Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake PostBuild Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/src -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/src/CMakeScripts/boost_thread-mt-shared_postBuildPhase.make$CONFIGURATION all";
		};
		24300E024300E024300E0000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		24308E024308E024308E0000 /* CMake PostBuild Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake PostBuild Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/src -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/src/CMakeScripts/boost_thread-mt-shared-debug_postBuildPhase.make$CONFIGURATION all";
		};
		243CF80243CF80243CF80000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		243D740243D740243D740000 /* CMake PostBuild Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake PostBuild Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/src -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/src/CMakeScripts/boost_thread-mt-static_postBuildPhase.make$CONFIGURATION all";
		};
		2448D302448D302448D30000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		244953024495302449530000 /* CMake PostBuild Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake PostBuild Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/src -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/src/CMakeScripts/boost_thread-mt-static-debug_postBuildPhase.make$CONFIGURATION all";
		};
		24526B024526B024526B0000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		2452E702452E702452E70000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/CMakeScripts/regex-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		245A570245A570245A570000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		245AD70245AD70245AD70000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/src -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/src/CMakeScripts/boost_regex_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		246F9D0246F9D0246F9D0000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		24701C024701C024701C0000 /* CMake PostBuild Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake PostBuild Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/src -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/src/CMakeScripts/boost_regex-mt-shared_postBuildPhase.make$CONFIGURATION all";
		};
		2483C302483C302483C30000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		248442024844202484420000 /* CMake PostBuild Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake PostBuild Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/src -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/src/CMakeScripts/boost_regex-mt-shared-debug_postBuildPhase.make$CONFIGURATION all";
		};
		2497FD02497FD02497FD0000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		24987C024987C024987C0000 /* CMake PostBuild Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake PostBuild Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/src -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/src/CMakeScripts/boost_regex-mt-static_postBuildPhase.make$CONFIGURATION all";
		};
		24AB0C024AB0C024AB0C0000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		24AB88024AB88024AB880000 /* CMake PostBuild Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake PostBuild Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/src -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/src/CMakeScripts/boost_regex-mt-static-debug_postBuildPhase.make$CONFIGURATION all";
		};
		24B4A7024B4A7024B4A70000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		24B51F024B51F024B51F0000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/CMakeScripts/algorithm-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		24BCAE024BCAE024BCAE0000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		24BD2A024BD2A024BD2A0000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/CMakeScripts/range-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		24C4AE024C4AE024C4AE0000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		24C526024C526024C5260000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/CMakeScripts/foreach-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		24CCB0024CCB0024CCB00000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		24CD28024CD28024CD280000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/CMakeScripts/array-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		24D4BA024D4BA024D4BA0000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		24D536024D536024D5360000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/CMakeScripts/functional-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		24DCD1024DCD1024DCD10000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		24DD4D024DD4D024DD4D0000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/CMakeScripts/unordered-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		24E4DB024E4DB024E4DB0000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		24E553024E553024E5530000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/CMakeScripts/pool-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		24ECE4024ECE4024ECE40000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		24ED60024ED60024ED600000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/CMakeScripts/spirit-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		24F4E5024F4E5024F4E50000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		24F561024F561024F5610000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/CMakeScripts/variant-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		2500F102500F102500F10000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		25016D025016D025016D0000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/CMakeScripts/serialization-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		2508F502508F502508F50000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		250975025097502509750000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/src -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/src/CMakeScripts/boost_serialization_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		252467025246702524670000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		2524E302524E302524E30000 /* CMake PostBuild Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake PostBuild Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/src -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/src/CMakeScripts/boost_serialization-mt-shared_postBuildPhase.make$CONFIGURATION all";
		};
		253D000253D000253D000000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		253D7F0253D7F0253D7F0000 /* CMake PostBuild Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake PostBuild Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/src -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/src/CMakeScripts/boost_serialization-mt-shared-debug_postBuildPhase.make$CONFIGURATION all";
		};
		255583025558302555830000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		255602025560202556020000 /* CMake PostBuild Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake PostBuild Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/src -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/src/CMakeScripts/boost_serialization-mt-static_postBuildPhase.make$CONFIGURATION all";
		};
		256CCE0256CCE0256CCE0000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		256D4A0256D4A0256D4A0000 /* CMake PostBuild Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake PostBuild Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/src -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/src/CMakeScripts/boost_serialization-mt-static-debug_postBuildPhase.make$CONFIGURATION all";
		};
		25765A025765A025765A0000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		2576DA02576DA02576DA0000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/src -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/src/CMakeScripts/boost_wserialization_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		2585B502585B502585B50000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		258631025863102586310000 /* CMake PostBuild Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake PostBuild Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/src -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/src/CMakeScripts/boost_wserialization-mt-shared_postBuildPhase.make$CONFIGURATION all";
		};
		2595EA02595EA02595EA0000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		259666025966602596660000 /* CMake PostBuild Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake PostBuild Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/src -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/src/CMakeScripts/boost_wserialization-mt-shared-debug_postBuildPhase.make$CONFIGURATION all";
		};
		25A5F5025A5F5025A5F50000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		25A671025A671025A6710000 /* CMake PostBuild Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake PostBuild Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/src -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/src/CMakeScripts/boost_wserialization-mt-static_postBuildPhase.make$CONFIGURATION all";
		};
		25B4FA025B4FA025B4FA0000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		25B576025B576025B5760000 /* CMake PostBuild Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake PostBuild Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/src -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/src/CMakeScripts/boost_wserialization-mt-static-debug_postBuildPhase.make$CONFIGURATION all";
		};
		25BE93025BE93025BE930000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		25BF0F025BF0F025BF0F0000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/CMakeScripts/format-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		25C698025C698025C6980000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		25C714025C714025C7140000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/CMakeScripts/math-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		25CE9A025CE9A025CE9A0000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		25CF16025CF16025CF160000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/CMakeScripts/multi_index-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		25D69C025D69C025D69C0000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		25D714025D714025D7140000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/CMakeScripts/any-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		25DEAA025DEAA025DEAA0000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		25DF26025DF26025DF260000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/CMakeScripts/random-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		25E6B6025E6B6025E6B60000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		25E72E025E72E025E72E0000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/CMakeScripts/graph-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		25EEB4025EEB4025EEB40000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		25EF34025EF34025EF340000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/src -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/src/CMakeScripts/boost_graph_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		25F834025F834025F8340000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		25F8B0025F8B0025F8B00000 /* CMake PostBuild Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake PostBuild Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/src -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/src/CMakeScripts/boost_graph-mt-shared_postBuildPhase.make$CONFIGURATION all";
		};
		260802026080202608020000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		260882026088202608820000 /* CMake PostBuild Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake PostBuild Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/src -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/src/CMakeScripts/boost_graph-mt-shared-debug_postBuildPhase.make$CONFIGURATION all";
		};
		2613E202613E202613E20000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		261462026146202614620000 /* CMake PostBuild Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake PostBuild Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/src -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/src/CMakeScripts/boost_graph-mt-static_postBuildPhase.make$CONFIGURATION all";
		};
		261EA70261EA70261EA70000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		261F260261F260261F260000 /* CMake PostBuild Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake PostBuild Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/src -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/src/CMakeScripts/boost_graph-mt-static-debug_postBuildPhase.make$CONFIGURATION all";
		};
		262854026285402628540000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		2628D002628D002628D00000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/CMakeScripts/Python-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		263053026305302630530000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		2630D302630D302630D30000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/src -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/src/CMakeScripts/boost_python_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		264D9A0264D9A0264D9A0000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		264E190264E190264E190000 /* CMake PostBuild Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake PostBuild Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/src -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/src/CMakeScripts/boost_python-mt-shared_postBuildPhase.make$CONFIGURATION all";
		};
		266777026677702667770000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		2667F602667F602667F60000 /* CMake PostBuild Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake PostBuild Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/src -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/src/CMakeScripts/boost_python-mt-shared-debug_postBuildPhase.make$CONFIGURATION all";
		};
		2681C002681C002681C00000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		26823C026823C026823C0000 /* CMake PostBuild Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake PostBuild Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/src -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/src/CMakeScripts/boost_python-mt-static_postBuildPhase.make$CONFIGURATION all";
		};
		269ACC0269ACC0269ACC0000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		269B4B0269B4B0269B4B0000 /* CMake PostBuild Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake PostBuild Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/src -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/src/CMakeScripts/boost_python-mt-static-debug_postBuildPhase.make$CONFIGURATION all";
		};
		26A451026A451026A4510000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		26A4CD026A4CD026A4CD0000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/parameter -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/parameter/CMakeScripts/parameter-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		26AC58026AC58026AC580000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		26ACD0026ACD0026ACD00000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/accumulators -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/accumulators/CMakeScripts/accumulators-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		26B601026B601026B6010000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		26B67D026B67D026B67D0000 /* CMake PostBuild Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake PostBuild Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/accumulators/example -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/accumulators/example/CMakeScripts/accumulators-accumulators_example_postBuildPhase.make$CONFIGURATION all";
		};
		26BF5F026BF5F026BF5F0000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		26BFD7026BFD7026BFD70000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/CMakeScripts/system-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		26C761026C761026C7610000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		26C7E1026C7E1026C7E10000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/src -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/src/CMakeScripts/boost_system_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		26D0E2026D0E2026D0E20000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		26D15E026D15E026D15E0000 /* CMake PostBuild Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake PostBuild Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/src -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/src/CMakeScripts/boost_system-mt-shared_postBuildPhase.make$CONFIGURATION all";
		};
		26DCB1026DCB1026DCB10000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		26DD31026DD31026DD310000 /* CMake PostBuild Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake PostBuild Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/src -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/src/CMakeScripts/boost_system-mt-shared-debug_postBuildPhase.make$CONFIGURATION all";
		};
		26E882026E882026E8820000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		26E901026E901026E9010000 /* CMake PostBuild Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake PostBuild Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/src -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/src/CMakeScripts/boost_system-mt-static_postBuildPhase.make$CONFIGURATION all";
		};
		26F358026F358026F3580000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		26F3D7026F3D7026F3D70000 /* CMake PostBuild Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake PostBuild Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/src -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/src/CMakeScripts/boost_system-mt-static-debug_postBuildPhase.make$CONFIGURATION all";
		};
		2700F702700F702700F70000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		270173027017302701730000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/asio -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/asio/CMakeScripts/asio-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		2708F602708F602708F60000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		270972027097202709720000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/circular_buffer -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/circular_buffer/CMakeScripts/circular_buffer-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		2710FB02710FB02710FB0000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		271173027117302711730000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/ptr_container -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/ptr_container/CMakeScripts/ptr_container-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		271908027190802719080000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		271984027198402719840000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/assign -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/assign/CMakeScripts/assign-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		27210D027210D027210D0000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		272189027218902721890000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bimap -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bimap/CMakeScripts/bimap-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		272914027291402729140000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		27298C027298C027298C0000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/compatibility -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/compatibility/CMakeScripts/compatibility-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		273159027315902731590000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		2731D102731D102731D10000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/crc -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/crc/CMakeScripts/crc-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		273962027396202739620000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		2739DA02739DA02739DA0000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/CMakeScripts/timer-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		2741B302741B302741B30000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		27422B027422B027422B0000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/CMakeScripts/test-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		2749AD02749AD02749AD0000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		274A2D0274A2D0274A2D0000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/src -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/src/CMakeScripts/boost_prg_exec_monitor_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		2754B402754B402754B40000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		275534027553402755340000 /* CMake PostBuild Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake PostBuild Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/src -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/src/CMakeScripts/boost_prg_exec_monitor-mt-shared_postBuildPhase.make$CONFIGURATION all";
		};
		276192027619202761920000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		27620E027620E027620E0000 /* CMake PostBuild Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake PostBuild Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/src -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/src/CMakeScripts/boost_prg_exec_monitor-mt-shared-debug_postBuildPhase.make$CONFIGURATION all";
		};
		276E720276E720276E720000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		276EEE0276EEE0276EEE0000 /* CMake PostBuild Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake PostBuild Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/src -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/src/CMakeScripts/boost_prg_exec_monitor-mt-static_postBuildPhase.make$CONFIGURATION all";
		};
		277A500277A500277A500000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		277ACC0277ACC0277ACC0000 /* CMake PostBuild Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake PostBuild Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/src -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/src/CMakeScripts/boost_prg_exec_monitor-mt-static-debug_postBuildPhase.make$CONFIGURATION all";
		};
		2783F802783F802783F80000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		278478027847802784780000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/src -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/src/CMakeScripts/boost_test_exec_monitor_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		27989F027989F027989F0000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		27991E027991E027991E0000 /* CMake PostBuild Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake PostBuild Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/src -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/src/CMakeScripts/boost_test_exec_monitor-mt-static_postBuildPhase.make$CONFIGURATION all";
		};
		27ABC2027ABC2027ABC20000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		27AC3E027AC3E027AC3E0000 /* CMake PostBuild Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake PostBuild Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/src -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/src/CMakeScripts/boost_test_exec_monitor-mt-static-debug_postBuildPhase.make$CONFIGURATION all";
		};
		27B553027B553027B5530000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		27B5D3027B5D3027B5D30000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/src -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/src/CMakeScripts/boost_unit_test_framework_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		27C8AC027C8AC027C8AC0000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		27C928027C928027C9280000 /* CMake PostBuild Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake PostBuild Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/src -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/src/CMakeScripts/boost_unit_test_framework-mt-shared_postBuildPhase.make$CONFIGURATION all";
		};
		27DDF4027DDF4027DDF40000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		27DE73027DE73027DE730000 /* CMake PostBuild Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake PostBuild Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/src -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/src/CMakeScripts/boost_unit_test_framework-mt-shared-debug_postBuildPhase.make$CONFIGURATION all";
		};
		27F348027F348027F3480000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		27F3C7027F3C7027F3C70000 /* CMake PostBuild Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake PostBuild Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/src -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/src/CMakeScripts/boost_unit_test_framework-mt-static_postBuildPhase.make$CONFIGURATION all";
		};
		280B6B0280B6B0280B6B0000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		280BE70280BE70280BE70000 /* CMake PostBuild Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake PostBuild Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/src -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/src/CMakeScripts/boost_unit_test_framework-mt-static-debug_postBuildPhase.make$CONFIGURATION all";
		};
		281505028150502815050000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		281581028158102815810000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/dynamic_bitset -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/dynamic_bitset/CMakeScripts/dynamic_bitset-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		281D190281D190281D190000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		281D950281D950281D950000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/filesystem -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/filesystem/CMakeScripts/filesystem-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		28251E028251E028251E0000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		28259E028259E028259E0000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/filesystem/src -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/filesystem/src/CMakeScripts/boost_filesystem_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		2830C302830C302830C30000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		283143028314302831430000 /* CMake PostBuild Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake PostBuild Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/filesystem/src -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/filesystem/src/CMakeScripts/boost_filesystem-mt-shared_postBuildPhase.make$CONFIGURATION all";
		};
		283E2E0283E2E0283E2E0000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		283EAE0283EAE0283EAE0000 /* CMake PostBuild Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake PostBuild Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/filesystem/src -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/filesystem/src/CMakeScripts/boost_filesystem-mt-shared-debug_postBuildPhase.make$CONFIGURATION all";
		};
		284B9B0284B9B0284B9B0000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		284C170284C170284C170000 /* CMake PostBuild Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake PostBuild Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/filesystem/src -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/filesystem/src/CMakeScripts/boost_filesystem-mt-static_postBuildPhase.make$CONFIGURATION all";
		};
		28580C028580C028580C0000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		28588C028588C028588C0000 /* CMake PostBuild Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake PostBuild Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/filesystem/src -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/filesystem/src/CMakeScripts/boost_filesystem-mt-static-debug_postBuildPhase.make$CONFIGURATION all";
		};
		2861AE02861AE02861AE0000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		286226028622602862260000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/interprocess -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/interprocess/CMakeScripts/interprocess-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		2869BC02869BC02869BC0000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		286A380286A380286A380000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/flyweight -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/flyweight/CMakeScripts/flyweight-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		2871BF02871BF02871BF0000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		287237028723702872370000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/gil -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/gil/CMakeScripts/gil-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		2879D702879D702879D70000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		287A530287A530287A530000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpi -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpi/CMakeScripts/mpi-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		2881DB02881DB02881DB0000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		28825B028825B028825B0000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpi/src -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpi/src/CMakeScripts/boost_mpi_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		2897FC02897FC02897FC0000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		289878028987802898780000 /* CMake PostBuild Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake PostBuild Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpi/src -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpi/src/CMakeScripts/boost_mpi-mt-shared_postBuildPhase.make$CONFIGURATION all";
		};
		28ACE9028ACE9028ACE90000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		28AD65028AD65028AD650000 /* CMake PostBuild Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake PostBuild Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpi/src -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpi/src/CMakeScripts/boost_mpi-mt-shared-debug_postBuildPhase.make$CONFIGURATION all";
		};
		28C1C1028C1C1028C1C10000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		28C240028C240028C2400000 /* CMake PostBuild Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake PostBuild Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpi/src -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpi/src/CMakeScripts/boost_mpi-mt-static_postBuildPhase.make$CONFIGURATION all";
		};
		28D566028D566028D5660000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		28D5E5028D5E5028D5E50000 /* CMake PostBuild Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake PostBuild Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpi/src -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpi/src/CMakeScripts/boost_mpi-mt-static-debug_postBuildPhase.make$CONFIGURATION all";
		};
		28DEF4028DEF4028DEF40000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		28DF74028DF74028DF740000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph_parallel/src -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph_parallel/src/CMakeScripts/boost_graph_parallel_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		28E940028E940028E9400000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		28E9C0028E9C0028E9C00000 /* CMake PostBuild Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake PostBuild Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph_parallel/src -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph_parallel/src/CMakeScripts/boost_graph_parallel-mt-shared_postBuildPhase.make$CONFIGURATION all";
		};
		28F5A9028F5A9028F5A90000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		28F625028F625028F6250000 /* CMake PostBuild Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake PostBuild Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph_parallel/src -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph_parallel/src/CMakeScripts/boost_graph_parallel-mt-shared-debug_postBuildPhase.make$CONFIGURATION all";
		};
		290606029060602906060000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		290682029068202906820000 /* CMake PostBuild Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake PostBuild Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph_parallel/src -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph_parallel/src/CMakeScripts/boost_graph_parallel-mt-static_postBuildPhase.make$CONFIGURATION all";
		};
		291158029115802911580000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		2911D402911D402911D40000 /* CMake PostBuild Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake PostBuild Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph_parallel/src -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph_parallel/src/CMakeScripts/boost_graph_parallel-mt-static-debug_postBuildPhase.make$CONFIGURATION all";
		};
		291AF60291AF60291AF60000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		291B720291B720291B720000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iostreams -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iostreams/CMakeScripts/iostreams-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		2922F302922F302922F30000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		292373029237302923730000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iostreams/src -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iostreams/src/CMakeScripts/boost_iostreams_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		292EA30292EA30292EA30000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		292F1F0292F1F0292F1F0000 /* CMake PostBuild Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake PostBuild Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iostreams/src -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iostreams/src/CMakeScripts/boost_iostreams-mt-shared_postBuildPhase.make$CONFIGURATION all";
		};
		293C130293C130293C130000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		293C930293C930293C930000 /* CMake PostBuild Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake PostBuild Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iostreams/src -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iostreams/src/CMakeScripts/boost_iostreams-mt-shared-debug_postBuildPhase.make$CONFIGURATION all";
		};
		29497D029497D029497D0000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		2949F902949F902949F90000 /* CMake PostBuild Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake PostBuild Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iostreams/src -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iostreams/src/CMakeScripts/boost_iostreams-mt-static_postBuildPhase.make$CONFIGURATION all";
		};
		2955CF02955CF02955CF0000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		29564F029564F029564F0000 /* CMake PostBuild Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake PostBuild Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iostreams/src -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iostreams/src/CMakeScripts/boost_iostreams-mt-static-debug_postBuildPhase.make$CONFIGURATION all";
		};
		295F6C0295F6C0295F6C0000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		295FE40295FE40295FE40000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/lambda -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/lambda/CMakeScripts/lambda-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		296778029677802967780000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		2967F402967F402967F40000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_array -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_array/CMakeScripts/multi_array-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		296F960296F960296F960000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		297012029701202970120000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/program_options -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/program_options/CMakeScripts/program_options-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		297798029779802977980000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		297818029781802978180000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/program_options/src -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/program_options/src/CMakeScripts/boost_program_options_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		2987DE02987DE02987DE0000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		29885A029885A029885A0000 /* CMake PostBuild Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake PostBuild Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/program_options/src -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/program_options/src/CMakeScripts/boost_program_options-mt-shared_postBuildPhase.make$CONFIGURATION all";
		};
		299882029988202998820000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		2998FE02998FE02998FE0000 /* CMake PostBuild Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake PostBuild Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/program_options/src -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/program_options/src/CMakeScripts/boost_program_options-mt-shared-debug_postBuildPhase.make$CONFIGURATION all";
		};
		29A91E029A91E029A91E0000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		29A99A029A99A029A99A0000 /* CMake PostBuild Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake PostBuild Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/program_options/src -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/program_options/src/CMakeScripts/boost_program_options-mt-static_postBuildPhase.make$CONFIGURATION all";
		};
		29B89C029B89C029B89C0000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		29B918029B918029B9180000 /* CMake PostBuild Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake PostBuild Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/program_options/src -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/program_options/src/CMakeScripts/boost_program_options-mt-static-debug_postBuildPhase.make$CONFIGURATION all";
		};
		29C234029C234029C2340000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		29C2AC029C2AC029C2AC0000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/rational -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/rational/CMakeScripts/rational-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		29CA43029CA43029CA430000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		29CABF029CABF029CABF0000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/signals -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/signals/CMakeScripts/signals-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		29D23A029D23A029D23A0000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		29D2BA029D2BA029D2BA0000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/signals/src -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/signals/src/CMakeScripts/boost_signals_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		29DEA1029DEA1029DEA10000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		29DF21029DF21029DF210000 /* CMake PostBuild Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake PostBuild Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/signals/src -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/signals/src/CMakeScripts/boost_signals-mt-shared_postBuildPhase.make$CONFIGURATION all";
		};
		29EC87029EC87029EC870000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		29ED03029ED03029ED030000 /* CMake PostBuild Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake PostBuild Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/signals/src -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/signals/src/CMakeScripts/boost_signals-mt-shared-debug_postBuildPhase.make$CONFIGURATION all";
		};
		29FA79029FA79029FA790000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		29FAF5029FAF5029FAF50000 /* CMake PostBuild Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake PostBuild Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/signals/src -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/signals/src/CMakeScripts/boost_signals-mt-static_postBuildPhase.make$CONFIGURATION all";
		};
		2A0B5902A0B5902A0B590000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		2A0BD902A0BD902A0BD90000 /* CMake PostBuild Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake PostBuild Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/signals/src -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/signals/src/CMakeScripts/boost_signals-mt-static-debug_postBuildPhase.make$CONFIGURATION all";
		};
		2A14FD02A14FD02A14FD0000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		2A157902A157902A15790000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/signals2 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/signals2/CMakeScripts/signals2-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		2A1CFF02A1CFF02A1CFF0000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		2A1D7702A1D7702A1D770000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/statechart -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/statechart/CMakeScripts/statechart-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		2A250602A250602A25060000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		2A257E02A257E02A257E0000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tr1 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tr1/CMakeScripts/tr1-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		2A2D0D02A2D0D02A2D0D0000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		2A2D8502A2D8502A2D850000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/units -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/units/CMakeScripts/units-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		2A351D02A351D02A351D0000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		2A359902A359902A35990000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/wave -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/wave/CMakeScripts/wave-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		2A3D2102A3D2102A3D210000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		2A3DA102A3DA102A3DA10000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/wave/src -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/wave/src/CMakeScripts/boost_wave_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		2A4E1302A4E1302A4E130000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		2A4E8F02A4E8F02A4E8F0000 /* CMake PostBuild Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake PostBuild Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/wave/src -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/wave/src/CMakeScripts/boost_wave-mt-shared_postBuildPhase.make$CONFIGURATION all";
		};
		2A5F1C02A5F1C02A5F1C0000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		2A5F9802A5F9802A5F980000 /* CMake PostBuild Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake PostBuild Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/wave/src -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/wave/src/CMakeScripts/boost_wave-mt-shared-debug_postBuildPhase.make$CONFIGURATION all";
		};
		2A702E02A702E02A702E0000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		2A70AA02A70AA02A70AA0000 /* CMake PostBuild Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake PostBuild Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/wave/src -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/wave/src/CMakeScripts/boost_wave-mt-static_postBuildPhase.make$CONFIGURATION all";
		};
		2A802B02A802B02A802B0000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		2A80A702A80A702A80A70000 /* CMake PostBuild Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake PostBuild Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/wave/src -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/wave/src/CMakeScripts/boost_wave-mt-static-debug_postBuildPhase.make$CONFIGURATION all";
		};
		2A928A02A928A02A928A0000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		2A930602A930602A93060000 /* CMake PostBuild Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake PostBuild Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/tools/bcp -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/tools/bcp/CMakeScripts/bcp_postBuildPhase.make$CONFIGURATION all";
		};
		2AA49C02AA49C02AA49C0000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		2AA51802AA51802AA5180000 /* CMake PostBuild Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake PostBuild Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/tools/inspect -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/tools/inspect/CMakeScripts/inspect_postBuildPhase.make$CONFIGURATION all";
		};
/* End PBXShellScriptBuildPhase section */

/* Begin PBXSourcesBuildPhase section */
		23DCA2023DCA2023DCA20000 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				23D9BA023D9BA023D9BA0000 /* greg_month.cpp in Sources */,
				23DA77023DA77023DA770000 /* greg_weekday.cpp in Sources */,
				23DB1C023DB1C023DB1C0000 /* date_generators.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		23E98E023E98E023E98E0000 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				23E72C023E72C023E72C0000 /* greg_month.cpp in Sources */,
				23E7A0023E7A0023E7A00000 /* greg_weekday.cpp in Sources */,
				23E824023E824023E8240000 /* date_generators.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		23F691023F691023F6910000 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				23F408023F408023F4080000 /* greg_month.cpp in Sources */,
				23F48F023F48F023F48F0000 /* greg_weekday.cpp in Sources */,
				23F51A023F51A023F51A0000 /* date_generators.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		24066A024066A024066A0000 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				2403F802403F802403F80000 /* greg_month.cpp in Sources */,
				2404AE02404AE02404AE0000 /* greg_weekday.cpp in Sources */,
				240511024051102405110000 /* date_generators.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		2422E802422E802422E80000 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				24200B024200B024200B0000 /* thread.cpp in Sources */,
				2420C702420C702420C70000 /* exceptions.cpp in Sources */,
				242182024218202421820000 /* once.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		242FCE0242FCE0242FCE0000 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				242D650242D650242D650000 /* thread.cpp in Sources */,
				242E170242E170242E170000 /* exceptions.cpp in Sources */,
				242E6B0242E6B0242E6B0000 /* once.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		243CB60243CB60243CB60000 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				243A470243A470243A470000 /* thread.cpp in Sources */,
				243ABD0243ABD0243ABD0000 /* exceptions.cpp in Sources */,
				243B440243B440243B440000 /* once.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		244893024489302448930000 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				24462D024462D024462D0000 /* thread.cpp in Sources */,
				2446DE02446DE02446DE0000 /* exceptions.cpp in Sources */,
				244764024476402447640000 /* once.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		246F530246F530246F530000 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				246221024622102462210000 /* c_regex_traits.cpp in Sources */,
				2462DB02462DB02462DB0000 /* cpp_regex_traits.cpp in Sources */,
				246395024639502463950000 /* cregex.cpp in Sources */,
				246450024645002464500000 /* fileiter.cpp in Sources */,
				246509024650902465090000 /* icu.cpp in Sources */,
				2465C502465C502465C50000 /* instances.cpp in Sources */,
				24667E024667E024667E0000 /* posix_api.cpp in Sources */,
				246735024673502467350000 /* regex.cpp in Sources */,
				2467F102467F102467F10000 /* regex_debug.cpp in Sources */,
				2468AF02468AF02468AF0000 /* regex_raw_buffer.cpp in Sources */,
				24696E024696E024696E0000 /* regex_traits_defaults.cpp in Sources */,
				246A2C0246A2C0246A2C0000 /* static_mutex.cpp in Sources */,
				246AE50246AE50246AE50000 /* w32_regex_traits.cpp in Sources */,
				246BE90246BE90246BE90000 /* wc_regex_traits.cpp in Sources */,
				246CA40246CA40246CA40000 /* wide_posix_api.cpp in Sources */,
				246D160246D160246D160000 /* winstances.cpp in Sources */,
				246DD10246DD10246DD10000 /* usinstances.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		24836F024836F024836F0000 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				2479BC02479BC02479BC0000 /* c_regex_traits.cpp in Sources */,
				247A420247A420247A420000 /* cpp_regex_traits.cpp in Sources */,
				247ADB0247ADB0247ADB0000 /* cregex.cpp in Sources */,
				247B5F0247B5F0247B5F0000 /* fileiter.cpp in Sources */,
				247BD30247BD30247BD30000 /* icu.cpp in Sources */,
				247C560247C560247C560000 /* instances.cpp in Sources */,
				247CD60247CD60247CD60000 /* posix_api.cpp in Sources */,
				247D580247D580247D580000 /* regex.cpp in Sources */,
				247DDF0247DDF0247DDF0000 /* regex_debug.cpp in Sources */,
				247E610247E610247E610000 /* regex_raw_buffer.cpp in Sources */,
				247F260247F260247F260000 /* regex_traits_defaults.cpp in Sources */,
				247F6B0247F6B0247F6B0000 /* static_mutex.cpp in Sources */,
				247FEF0247FEF0247FEF0000 /* w32_regex_traits.cpp in Sources */,
				248076024807602480760000 /* wc_regex_traits.cpp in Sources */,
				2480FC02480FC02480FC0000 /* wide_posix_api.cpp in Sources */,
				248194024819402481940000 /* winstances.cpp in Sources */,
				24820A024820A024820A0000 /* usinstances.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		2497AE02497AE02497AE0000 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				248DE50248DE50248DE50000 /* c_regex_traits.cpp in Sources */,
				248E6D0248E6D0248E6D0000 /* cpp_regex_traits.cpp in Sources */,
				248F060248F060248F060000 /* cregex.cpp in Sources */,
				248F8B0248F8B0248F8B0000 /* fileiter.cpp in Sources */,
				249011024901102490110000 /* icu.cpp in Sources */,
				2490C102490C102490C10000 /* instances.cpp in Sources */,
				249143024914302491430000 /* posix_api.cpp in Sources */,
				249188024918802491880000 /* regex.cpp in Sources */,
				249209024920902492090000 /* regex_debug.cpp in Sources */,
				24928D024928D024928D0000 /* regex_raw_buffer.cpp in Sources */,
				249315024931502493150000 /* regex_traits_defaults.cpp in Sources */,
				2493AF02493AF02493AF0000 /* static_mutex.cpp in Sources */,
				249421024942102494210000 /* w32_regex_traits.cpp in Sources */,
				2494A902494A902494A90000 /* wc_regex_traits.cpp in Sources */,
				24952F024952F024952F0000 /* wide_posix_api.cpp in Sources */,
				2495C702495C702495C70000 /* winstances.cpp in Sources */,
				24963D024963D024963D0000 /* usinstances.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		24AAC3024AAC3024AAC30000 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				24A112024A112024A1120000 /* c_regex_traits.cpp in Sources */,
				24A197024A197024A1970000 /* cpp_regex_traits.cpp in Sources */,
				24A231024A231024A2310000 /* cregex.cpp in Sources */,
				24A2DD024A2DD024A2DD0000 /* fileiter.cpp in Sources */,
				24A363024A363024A3630000 /* icu.cpp in Sources */,
				24A3E8024A3E8024A3E80000 /* instances.cpp in Sources */,
				24A432024A432024A4320000 /* posix_api.cpp in Sources */,
				24A4B0024A4B0024A4B00000 /* regex.cpp in Sources */,
				24A532024A532024A5320000 /* regex_debug.cpp in Sources */,
				24A5B5024A5B5024A5B50000 /* regex_raw_buffer.cpp in Sources */,
				24A63D024A63D024A63D0000 /* regex_traits_defaults.cpp in Sources */,
				24A6C1024A6C1024A6C10000 /* static_mutex.cpp in Sources */,
				24A744024A744024A7440000 /* w32_regex_traits.cpp in Sources */,
				24A801024A801024A8010000 /* wc_regex_traits.cpp in Sources */,
				24A883024A883024A8830000 /* wide_posix_api.cpp in Sources */,
				24A8CB024A8CB024A8CB0000 /* winstances.cpp in Sources */,
				24A98E024A98E024A98E0000 /* usinstances.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		25241B025241B025241B0000 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				2510C802510C802510C80000 /* basic_archive.cpp in Sources */,
				251189025118902511890000 /* basic_iarchive.cpp in Sources */,
				251233025123302512330000 /* basic_iserializer.cpp in Sources */,
				2512EA02512EA02512EA0000 /* basic_oarchive.cpp in Sources */,
				2513AD02513AD02513AD0000 /* basic_oserializer.cpp in Sources */,
				251485025148502514850000 /* basic_pointer_iserializer.cpp in Sources */,
				251540025154002515400000 /* basic_pointer_oserializer.cpp in Sources */,
				2515F202515F202515F20000 /* basic_serializer_map.cpp in Sources */,
				2516C602516C602516C60000 /* basic_text_iprimitive.cpp in Sources */,
				25178B025178B025178B0000 /* basic_text_oprimitive.cpp in Sources */,
				25183B025183B025183B0000 /* basic_xml_archive.cpp in Sources */,
				25190C025190C025190C0000 /* binary_iarchive.cpp in Sources */,
				2519C702519C702519C70000 /* binary_oarchive.cpp in Sources */,
				251A720251A720251A720000 /* extended_type_info.cpp in Sources */,
				251B470251B470251B470000 /* extended_type_info_typeid.cpp in Sources */,
				251C020251C020251C020000 /* extended_type_info_no_rtti.cpp in Sources */,
				251CB90251CB90251CB90000 /* polymorphic_iarchive.cpp in Sources */,
				251D7B0251D7B0251D7B0000 /* polymorphic_oarchive.cpp in Sources */,
				251E320251E320251E320000 /* stl_port.cpp in Sources */,
				251F080251F080251F080000 /* text_iarchive.cpp in Sources */,
				251FC30251FC30251FC30000 /* text_oarchive.cpp in Sources */,
				25207E025207E025207E0000 /* void_cast.cpp in Sources */,
				252139025213902521390000 /* xml_grammar.cpp in Sources */,
				2521F402521F402521F40000 /* xml_iarchive.cpp in Sources */,
				2522AF02522AF02522AF0000 /* xml_oarchive.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		253CB60253CB60253CB60000 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				252E960252E960252E960000 /* basic_archive.cpp in Sources */,
				252F1E0252F1E0252F1E0000 /* basic_iarchive.cpp in Sources */,
				252F940252F940252F940000 /* basic_iserializer.cpp in Sources */,
				253058025305802530580000 /* basic_oarchive.cpp in Sources */,
				2530A302530A302530A30000 /* basic_oserializer.cpp in Sources */,
				253143025314302531430000 /* basic_pointer_iserializer.cpp in Sources */,
				2531CD02531CD02531CD0000 /* basic_pointer_oserializer.cpp in Sources */,
				253254025325402532540000 /* basic_serializer_map.cpp in Sources */,
				2532DF02532DF02532DF0000 /* basic_text_iprimitive.cpp in Sources */,
				25336A025336A025336A0000 /* basic_text_oprimitive.cpp in Sources */,
				2533F302533F302533F30000 /* basic_xml_archive.cpp in Sources */,
				25347A025347A025347A0000 /* binary_iarchive.cpp in Sources */,
				253500025350002535000000 /* binary_oarchive.cpp in Sources */,
				253588025358802535880000 /* extended_type_info.cpp in Sources */,
				2535FE02535FE02535FE0000 /* extended_type_info_typeid.cpp in Sources */,
				25369C025369C025369C0000 /* extended_type_info_no_rtti.cpp in Sources */,
				253717025371702537170000 /* polymorphic_iarchive.cpp in Sources */,
				2537B502537B502537B50000 /* polymorphic_oarchive.cpp in Sources */,
				25383A025383A025383A0000 /* stl_port.cpp in Sources */,
				2538BF02538BF02538BF0000 /* text_iarchive.cpp in Sources */,
				253944025394402539440000 /* text_oarchive.cpp in Sources */,
				2539C902539C902539C90000 /* void_cast.cpp in Sources */,
				253A4E0253A4E0253A4E0000 /* xml_grammar.cpp in Sources */,
				253AD30253AD30253AD30000 /* xml_iarchive.cpp in Sources */,
				253B580253B580253B580000 /* xml_oarchive.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		255537025553702555370000 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				254736025473602547360000 /* basic_archive.cpp in Sources */,
				2547EB02547EB02547EB0000 /* basic_iarchive.cpp in Sources */,
				254834025483402548340000 /* basic_iserializer.cpp in Sources */,
				2548F802548F802548F80000 /* basic_oarchive.cpp in Sources */,
				254955025495502549550000 /* basic_oserializer.cpp in Sources */,
				2549E402549E402549E40000 /* basic_pointer_iserializer.cpp in Sources */,
				254A670254A670254A670000 /* basic_pointer_oserializer.cpp in Sources */,
				254AED0254AED0254AED0000 /* basic_serializer_map.cpp in Sources */,
				254B760254B760254B760000 /* basic_text_iprimitive.cpp in Sources */,
				254BEC0254BEC0254BEC0000 /* basic_text_oprimitive.cpp in Sources */,
				254C800254C800254C800000 /* basic_xml_archive.cpp in Sources */,
				254CF80254CF80254CF80000 /* binary_iarchive.cpp in Sources */,
				254D7E0254D7E0254D7E0000 /* binary_oarchive.cpp in Sources */,
				254E020254E020254E020000 /* extended_type_info.cpp in Sources */,
				254EA00254EA00254EA00000 /* extended_type_info_typeid.cpp in Sources */,
				254F2B0254F2B0254F2B0000 /* extended_type_info_no_rtti.cpp in Sources */,
				254F9F0254F9F0254F9F0000 /* polymorphic_iarchive.cpp in Sources */,
				25502B025502B025502B0000 /* polymorphic_oarchive.cpp in Sources */,
				2550ED02550ED02550ED0000 /* stl_port.cpp in Sources */,
				255171025517102551710000 /* text_iarchive.cpp in Sources */,
				2551F502551F502551F50000 /* text_oarchive.cpp in Sources */,
				255279025527902552790000 /* void_cast.cpp in Sources */,
				2552FD02552FD02552FD0000 /* xml_grammar.cpp in Sources */,
				255381025538102553810000 /* xml_iarchive.cpp in Sources */,
				255405025540502554050000 /* xml_oarchive.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		256C830256C830256C830000 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				255E980255E980255E980000 /* basic_archive.cpp in Sources */,
				255F200255F200255F200000 /* basic_iarchive.cpp in Sources */,
				255FB50255FB50255FB50000 /* basic_iserializer.cpp in Sources */,
				256027025602702560270000 /* basic_oarchive.cpp in Sources */,
				2560BF02560BF02560BF0000 /* basic_oserializer.cpp in Sources */,
				256145025614502561450000 /* basic_pointer_iserializer.cpp in Sources */,
				2561CD02561CD02561CD0000 /* basic_pointer_oserializer.cpp in Sources */,
				256240025624002562400000 /* basic_serializer_map.cpp in Sources */,
				2562DA02562DA02562DA0000 /* basic_text_iprimitive.cpp in Sources */,
				256360025636002563600000 /* basic_text_oprimitive.cpp in Sources */,
				2563D302563D302563D30000 /* basic_xml_archive.cpp in Sources */,
				256493025649302564930000 /* binary_iarchive.cpp in Sources */,
				2564ED02564ED02564ED0000 /* binary_oarchive.cpp in Sources */,
				25655E025655E025655E0000 /* extended_type_info.cpp in Sources */,
				2565F802565F802565F80000 /* extended_type_info_typeid.cpp in Sources */,
				256669025666902566690000 /* extended_type_info_no_rtti.cpp in Sources */,
				25670A025670A025670A0000 /* polymorphic_iarchive.cpp in Sources */,
				256780025678002567800000 /* polymorphic_oarchive.cpp in Sources */,
				256807025680702568070000 /* stl_port.cpp in Sources */,
				25689D025689D025689D0000 /* text_iarchive.cpp in Sources */,
				25690D025690D025690D0000 /* text_oarchive.cpp in Sources */,
				2569A302569A302569A30000 /* void_cast.cpp in Sources */,
				256A130256A130256A130000 /* xml_grammar.cpp in Sources */,
				256AA90256AA90256AA90000 /* xml_iarchive.cpp in Sources */,
				256B190256B190256B190000 /* xml_oarchive.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		2584E602584E602584E60000 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				257E030257E030257E030000 /* basic_text_wiprimitive.cpp in Sources */,
				257EC70257EC70257EC70000 /* basic_text_woprimitive.cpp in Sources */,
				257F870257F870257F870000 /* text_wiarchive.cpp in Sources */,
				258044025804402580440000 /* text_woarchive.cpp in Sources */,
				2580EF02580EF02580EF0000 /* utf8_codecvt_facet.cpp in Sources */,
				2581C702581C702581C70000 /* xml_wgrammar.cpp in Sources */,
				258285025828502582850000 /* xml_wiarchive.cpp in Sources */,
				258343025834302583430000 /* xml_woarchive.cpp in Sources */,
				2583FC02583FC02583FC0000 /* codecvt_null.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		25951A025951A025951A0000 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				258FE40258FE40258FE40000 /* basic_text_wiprimitive.cpp in Sources */,
				259076025907602590760000 /* basic_text_woprimitive.cpp in Sources */,
				2590FF02590FF02590FF0000 /* text_wiarchive.cpp in Sources */,
				259173025917302591730000 /* text_woarchive.cpp in Sources */,
				259216025921602592160000 /* utf8_codecvt_facet.cpp in Sources */,
				25928D025928D025928D0000 /* xml_wgrammar.cpp in Sources */,
				259356025935602593560000 /* xml_wiarchive.cpp in Sources */,
				2593DE02593DE02593DE0000 /* xml_woarchive.cpp in Sources */,
				259469025946902594690000 /* codecvt_null.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		25A5AF025A5AF025A5AF0000 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				25A025025A025025A0250000 /* basic_text_wiprimitive.cpp in Sources */,
				25A0AF025A0AF025A0AF0000 /* basic_text_woprimitive.cpp in Sources */,
				25A15C025A15C025A15C0000 /* text_wiarchive.cpp in Sources */,
				25A1E0025A1E0025A1E00000 /* text_woarchive.cpp in Sources */,
				25A23D025A23D025A23D0000 /* utf8_codecvt_facet.cpp in Sources */,
				25A2F0025A2F0025A2F00000 /* xml_wgrammar.cpp in Sources */,
				25A374025A374025A3740000 /* xml_wiarchive.cpp in Sources */,
				25A3F8025A3F8025A3F80000 /* xml_woarchive.cpp in Sources */,
				25A441025A441025A4410000 /* codecvt_null.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		25B4B3025B4B3025B4B30000 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				25AF10025AF10025AF100000 /* basic_text_wiprimitive.cpp in Sources */,
				25AFAB025AFAB025AFAB0000 /* basic_text_woprimitive.cpp in Sources */,
				25B01B025B01B025B01B0000 /* text_wiarchive.cpp in Sources */,
				25B0A4025B0A4025B0A40000 /* text_woarchive.cpp in Sources */,
				25B13D025B13D025B13D0000 /* utf8_codecvt_facet.cpp in Sources */,
				25B1B0025B1B0025B1B00000 /* xml_wgrammar.cpp in Sources */,
				25B239025B239025B2390000 /* xml_wiarchive.cpp in Sources */,
				25B2BD025B2BD025B2BD0000 /* xml_woarchive.cpp in Sources */,
				25B343025B343025B3430000 /* codecvt_null.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		25F7F5025F7F5025F7F50000 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				25F673025F673025F6730000 /* read_graphviz_spirit.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		2607B902607B902607B90000 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				2605DC02605DC02605DC0000 /* read_graphviz_spirit.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		26139E026139E026139E0000 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				2611C502611C502611C50000 /* read_graphviz_spirit.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		261E6A0261E6A0261E6A0000 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				261C7D0261C7D0261C7D0000 /* read_graphviz_spirit.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		264D500264D500264D500000 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				26380C026380C026380C0000 /* numeric.cpp in Sources */,
				2638C302638C302638C30000 /* list.cpp in Sources */,
				26397D026397D026397D0000 /* long.cpp in Sources */,
				263A350263A350263A350000 /* dict.cpp in Sources */,
				263AF30263AF30263AF30000 /* tuple.cpp in Sources */,
				263BAC0263BAC0263BAC0000 /* str.cpp in Sources */,
				263C680263C680263C680000 /* slice.cpp in Sources */,
				263D380263D380263D380000 /* from_python.cpp in Sources */,
				263DDE0263DDE0263DDE0000 /* registry.cpp in Sources */,
				263E990263E990263E990000 /* type_id.cpp in Sources */,
				263F5D0263F5D0263F5D0000 /* enum.cpp in Sources */,
				264027026402702640270000 /* class.cpp in Sources */,
				2640E202640E202640E20000 /* function.cpp in Sources */,
				26419D026419D026419D0000 /* inheritance.cpp in Sources */,
				264258026425802642580000 /* life_support.cpp in Sources */,
				264314026431402643140000 /* pickle_support.cpp in Sources */,
				2643BA02643BA02643BA0000 /* errors.cpp in Sources */,
				264473026447302644730000 /* module.cpp in Sources */,
				26454E026454E026454E0000 /* builtin_converters.cpp in Sources */,
				26460D026460D026460D0000 /* arg_to_python_base.cpp in Sources */,
				2646AF02646AF02646AF0000 /* iterator.cpp in Sources */,
				2647B802647B802647B80000 /* stl_iterator.cpp in Sources */,
				264872026487202648720000 /* object_protocol.cpp in Sources */,
				2648E502648E502648E50000 /* object_operators.cpp in Sources */,
				2649A302649A302649A30000 /* wrapper.cpp in Sources */,
				264A590264A590264A590000 /* import.cpp in Sources */,
				264B110264B110264B110000 /* exec.cpp in Sources */,
				264BE90264BE90264BE90000 /* function_doc_signature.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		266723026672302667230000 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				2655A302655A302655A30000 /* numeric.cpp in Sources */,
				265849026584902658490000 /* list.cpp in Sources */,
				2658CA02658CA02658CA0000 /* long.cpp in Sources */,
				265948026594802659480000 /* dict.cpp in Sources */,
				2659E202659E202659E20000 /* tuple.cpp in Sources */,
				265A620265A620265A620000 /* str.cpp in Sources */,
				265AD50265AD50265AD50000 /* slice.cpp in Sources */,
				265B960265B960265B960000 /* from_python.cpp in Sources */,
				265BDF0265BDF0265BDF0000 /* registry.cpp in Sources */,
				265C650265C650265C650000 /* type_id.cpp in Sources */,
				265CE60265CE60265CE60000 /* enum.cpp in Sources */,
				265D690265D690265D690000 /* class.cpp in Sources */,
				265DEF0265DEF0265DEF0000 /* function.cpp in Sources */,
				265EB10265EB10265EB10000 /* inheritance.cpp in Sources */,
				265F350265F350265F350000 /* life_support.cpp in Sources */,
				265FB90265FB90265FB90000 /* pickle_support.cpp in Sources */,
				26603F026603F026603F0000 /* errors.cpp in Sources */,
				2660C802660C802660C80000 /* module.cpp in Sources */,
				266126026612602661260000 /* builtin_converters.cpp in Sources */,
				2661AB02661AB02661AB0000 /* arg_to_python_base.cpp in Sources */,
				266222026622202662220000 /* iterator.cpp in Sources */,
				2662E402662E402662E40000 /* stl_iterator.cpp in Sources */,
				266368026636802663680000 /* object_protocol.cpp in Sources */,
				2663B002663B002663B00000 /* object_operators.cpp in Sources */,
				266470026647002664700000 /* wrapper.cpp in Sources */,
				2664B702664B702664B70000 /* import.cpp in Sources */,
				26654D026654D026654D0000 /* exec.cpp in Sources */,
				2665D402665D402665D40000 /* function_doc_signature.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		268175026817502681750000 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				266DE80266DE80266DE80000 /* numeric.cpp in Sources */,
				267227026722702672270000 /* list.cpp in Sources */,
				2672B102672B102672B10000 /* long.cpp in Sources */,
				26733B026733B026733B0000 /* dict.cpp in Sources */,
				2673C702673C702673C70000 /* tuple.cpp in Sources */,
				26744A026744A026744A0000 /* str.cpp in Sources */,
				2674D302674D302674D30000 /* slice.cpp in Sources */,
				26755C026755C026755C0000 /* from_python.cpp in Sources */,
				267622026762202676220000 /* registry.cpp in Sources */,
				267686026768602676860000 /* type_id.cpp in Sources */,
				267709026770902677090000 /* enum.cpp in Sources */,
				26777B026777B026777B0000 /* class.cpp in Sources */,
				267817026781702678170000 /* function.cpp in Sources */,
				26788B026788B026788B0000 /* inheritance.cpp in Sources */,
				267912026791202679120000 /* life_support.cpp in Sources */,
				2679AF02679AF02679AF0000 /* pickle_support.cpp in Sources */,
				267A640267A640267A640000 /* errors.cpp in Sources */,
				267AED0267AED0267AED0000 /* module.cpp in Sources */,
				267B4F0267B4F0267B4F0000 /* builtin_converters.cpp in Sources */,
				267BDA0267BDA0267BDA0000 /* arg_to_python_base.cpp in Sources */,
				267C500267C500267C500000 /* iterator.cpp in Sources */,
				267CD70267CD70267CD70000 /* stl_iterator.cpp in Sources */,
				267D5C0267D5C0267D5C0000 /* object_protocol.cpp in Sources */,
				267DFB0267DFB0267DFB0000 /* object_operators.cpp in Sources */,
				267E6F0267E6F0267E6F0000 /* wrapper.cpp in Sources */,
				267EF60267EF60267EF60000 /* import.cpp in Sources */,
				267F790267F790267F790000 /* exec.cpp in Sources */,
				268018026801802680180000 /* function_doc_signature.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		269A800269A800269A800000 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				268A4F0268A4F0268A4F0000 /* numeric.cpp in Sources */,
				268B6F0268B6F0268B6F0000 /* list.cpp in Sources */,
				268BF30268BF30268BF30000 /* long.cpp in Sources */,
				268C690268C690268C690000 /* dict.cpp in Sources */,
				268CFF0268CFF0268CFF0000 /* tuple.cpp in Sources */,
				268D740268D740268D740000 /* str.cpp in Sources */,
				268DF80268DF80268DF80000 /* slice.cpp in Sources */,
				268EBC0268EBC0268EBC0000 /* from_python.cpp in Sources */,
				268F080268F080268F080000 /* registry.cpp in Sources */,
				268FD20268FD20268FD20000 /* type_id.cpp in Sources */,
				26901D026901D026901D0000 /* enum.cpp in Sources */,
				2690DD02690DD02690DD0000 /* class.cpp in Sources */,
				269129026912902691290000 /* function.cpp in Sources */,
				2691ED02691ED02691ED0000 /* inheritance.cpp in Sources */,
				269239026923902692390000 /* life_support.cpp in Sources */,
				2692FD02692FD02692FD0000 /* pickle_support.cpp in Sources */,
				269385026938502693850000 /* errors.cpp in Sources */,
				2693D202693D202693D20000 /* module.cpp in Sources */,
				269468026946802694680000 /* builtin_converters.cpp in Sources */,
				2694F402694F402694F40000 /* arg_to_python_base.cpp in Sources */,
				2695A402695A402695A40000 /* iterator.cpp in Sources */,
				2695F002695F002695F00000 /* stl_iterator.cpp in Sources */,
				2696B402696B402696B40000 /* object_protocol.cpp in Sources */,
				2696FD02696FD02696FD0000 /* object_operators.cpp in Sources */,
				269783026978302697830000 /* wrapper.cpp in Sources */,
				269807026980702698070000 /* import.cpp in Sources */,
				26988B026988B026988B0000 /* exec.cpp in Sources */,
				269925026992502699250000 /* function_doc_signature.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		26B5C2026B5C2026B5C20000 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				26B428026B428026B4280000 /* main.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		26D09D026D09D026D09D0000 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				26CF1E026CF1E026CF1E0000 /* error_code.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		26DC68026DC68026DC680000 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				26DB42026DB42026DB420000 /* error_code.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		26E846026E846026E8460000 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				26E6DA026E6DA026E6DA0000 /* error_code.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		26F31C026F31C026F31C0000 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				26F1A7026F1A7026F1A70000 /* error_code.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		275474027547402754740000 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				27518A027518A027518A0000 /* execution_monitor.cpp in Sources */,
				275243027524302752430000 /* cpp_main.cpp in Sources */,
				2752FB02752FB02752FB0000 /* debug.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		27614A027614A027614A0000 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				275EDB0275EDB0275EDB0000 /* execution_monitor.cpp in Sources */,
				275F740275F740275F740000 /* cpp_main.cpp in Sources */,
				275FE10275FE10275FE10000 /* debug.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		276E300276E300276E300000 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				276C030276C030276C030000 /* execution_monitor.cpp in Sources */,
				276C4B0276C4B0276C4B0000 /* cpp_main.cpp in Sources */,
				276CCC0276CCC0276CCC0000 /* debug.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		277A0D0277A0D0277A0D0000 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				277754027775402777540000 /* execution_monitor.cpp in Sources */,
				277829027782902778290000 /* cpp_main.cpp in Sources */,
				2778A802778A802778A80000 /* debug.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		279853027985302798530000 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				278B9C0278B9C0278B9C0000 /* compiler_log_formatter.cpp in Sources */,
				278C2F0278C2F0278C2F0000 /* debug.cpp in Sources */,
				278CB10278CB10278CB10000 /* execution_monitor.cpp in Sources */,
				278D5C0278D5C0278D5C0000 /* framework.cpp in Sources */,
				278E240278E240278E240000 /* plain_report_formatter.cpp in Sources */,
				278ED10278ED10278ED10000 /* progress_monitor.cpp in Sources */,
				278F8E0278F8E0278F8E0000 /* results_collector.cpp in Sources */,
				27904B027904B027904B0000 /* results_reporter.cpp in Sources */,
				279107027910702791070000 /* test_main.cpp in Sources */,
				2791C002791C002791C00000 /* test_tools.cpp in Sources */,
				279278027927802792780000 /* unit_test_log.cpp in Sources */,
				27937B027937B027937B0000 /* unit_test_main.cpp in Sources */,
				2793EC02793EC02793EC0000 /* unit_test_monitor.cpp in Sources */,
				2794B402794B402794B40000 /* unit_test_parameters.cpp in Sources */,
				2795A902795A902795A90000 /* unit_test_suite.cpp in Sources */,
				27961A027961A027961A0000 /* xml_log_formatter.cpp in Sources */,
				2796E602796E602796E60000 /* xml_report_formatter.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		27AB76027AB76027AB760000 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				27A16E027A16E027A16E0000 /* compiler_log_formatter.cpp in Sources */,
				27A236027A236027A2360000 /* debug.cpp in Sources */,
				27A2FF027A2FF027A2FF0000 /* execution_monitor.cpp in Sources */,
				27A33E027A33E027A33E0000 /* framework.cpp in Sources */,
				27A3CA027A3CA027A3CA0000 /* plain_report_formatter.cpp in Sources */,
				27A454027A454027A4540000 /* progress_monitor.cpp in Sources */,
				27A4DA027A4DA027A4DA0000 /* results_collector.cpp in Sources */,
				27A560027A560027A5600000 /* results_reporter.cpp in Sources */,
				27A5E7027A5E7027A5E70000 /* test_main.cpp in Sources */,
				27A664027A664027A6640000 /* test_tools.cpp in Sources */,
				27A6EE027A6EE027A6EE0000 /* unit_test_log.cpp in Sources */,
				27A7AB027A7AB027A7AB0000 /* unit_test_main.cpp in Sources */,
				27A82F027A82F027A82F0000 /* unit_test_monitor.cpp in Sources */,
				27A876027A876027A8760000 /* unit_test_parameters.cpp in Sources */,
				27A910027A910027A9100000 /* unit_test_suite.cpp in Sources */,
				27A980027A980027A9800000 /* xml_log_formatter.cpp in Sources */,
				27AA08027AA08027AA080000 /* xml_report_formatter.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		27C85B027C85B027C85B0000 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				27BB62027BB62027BB620000 /* compiler_log_formatter.cpp in Sources */,
				27BD7C027BD7C027BD7C0000 /* debug.cpp in Sources */,
				27BDFF027BDFF027BDFF0000 /* exception_safety.cpp in Sources */,
				27BEC2027BEC2027BEC20000 /* execution_monitor.cpp in Sources */,
				27BF1F027BF1F027BF1F0000 /* framework.cpp in Sources */,
				27BFBE027BFBE027BFBE0000 /* interaction_based.cpp in Sources */,
				27C08A027C08A027C08A0000 /* logged_expectations.cpp in Sources */,
				27C14F027C14F027C14F0000 /* plain_report_formatter.cpp in Sources */,
				27C1B0027C1B0027C1B00000 /* progress_monitor.cpp in Sources */,
				27C265027C265027C2650000 /* results_collector.cpp in Sources */,
				27C2C3027C2C3027C2C30000 /* results_reporter.cpp in Sources */,
				27C343027C343027C3430000 /* test_tools.cpp in Sources */,
				27C3F6027C3F6027C3F60000 /* unit_test_log.cpp in Sources */,
				27C43B027C43B027C43B0000 /* unit_test_main.cpp in Sources */,
				27C506027C506027C5060000 /* unit_test_monitor.cpp in Sources */,
				27C564027C564027C5640000 /* unit_test_parameters.cpp in Sources */,
				27C5E9027C5E9027C5E90000 /* unit_test_suite.cpp in Sources */,
				27C6A8027C6A8027C6A80000 /* xml_log_formatter.cpp in Sources */,
				27C706027C706027C7060000 /* xml_report_formatter.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		27DDAA027DDAA027DDAA0000 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				27D2DA027D2DA027D2DA0000 /* compiler_log_formatter.cpp in Sources */,
				27D35F027D35F027D35F0000 /* debug.cpp in Sources */,
				27D422027D422027D4220000 /* exception_safety.cpp in Sources */,
				27D468027D468027D4680000 /* execution_monitor.cpp in Sources */,
				27D502027D502027D5020000 /* framework.cpp in Sources */,
				27D5B3027D5B3027D5B30000 /* interaction_based.cpp in Sources */,
				27D63A027D63A027D63A0000 /* logged_expectations.cpp in Sources */,
				27D681027D681027D6810000 /* plain_report_formatter.cpp in Sources */,
				27D706027D706027D7060000 /* progress_monitor.cpp in Sources */,
				27D78E027D78E027D78E0000 /* results_collector.cpp in Sources */,
				27D813027D813027D8130000 /* results_reporter.cpp in Sources */,
				27D897027D897027D8970000 /* test_tools.cpp in Sources */,
				27D91C027D91C027D91C0000 /* unit_test_log.cpp in Sources */,
				27D9DB027D9DB027D9DB0000 /* unit_test_main.cpp in Sources */,
				27DA24027DA24027DA240000 /* unit_test_monitor.cpp in Sources */,
				27DAA9027DAA9027DAA90000 /* unit_test_parameters.cpp in Sources */,
				27DB32027DB32027DB320000 /* unit_test_suite.cpp in Sources */,
				27DBBA027DBBA027DBBA0000 /* xml_log_formatter.cpp in Sources */,
				27DC54027DC54027DC540000 /* xml_report_formatter.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		27F2F7027F2F7027F2F70000 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				27E830027E830027E8300000 /* compiler_log_formatter.cpp in Sources */,
				27E8E4027E8E4027E8E40000 /* debug.cpp in Sources */,
				27E92B027E92B027E92B0000 /* exception_safety.cpp in Sources */,
				27E9AF027E9AF027E9AF0000 /* execution_monitor.cpp in Sources */,
				27EA3A027EA3A027EA3A0000 /* framework.cpp in Sources */,
				27EAC1027EAC1027EAC10000 /* interaction_based.cpp in Sources */,
				27EB59027EB59027EB590000 /* logged_expectations.cpp in Sources */,
				27EC0B027EC0B027EC0B0000 /* plain_report_formatter.cpp in Sources */,
				27EC55027EC55027EC550000 /* progress_monitor.cpp in Sources */,
				27ECDB027ECDB027ECDB0000 /* results_collector.cpp in Sources */,
				27ED5F027ED5F027ED5F0000 /* results_reporter.cpp in Sources */,
				27EE23027EE23027EE230000 /* test_tools.cpp in Sources */,
				27EEA5027EEA5027EEA50000 /* unit_test_log.cpp in Sources */,
				27EEEB027EEEB027EEEB0000 /* unit_test_main.cpp in Sources */,
				27EF83027EF83027EF830000 /* unit_test_monitor.cpp in Sources */,
				27F035027F035027F0350000 /* unit_test_parameters.cpp in Sources */,
				27F081027F081027F0810000 /* unit_test_suite.cpp in Sources */,
				27F108027F108027F1080000 /* xml_log_formatter.cpp in Sources */,
				27F18C027F18C027F18C0000 /* xml_report_formatter.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		280B200280B200280B200000 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				27FBEA027FBEA027FBEA0000 /* compiler_log_formatter.cpp in Sources */,
				2800D902800D902800D90000 /* debug.cpp in Sources */,
				280163028016302801630000 /* exception_safety.cpp in Sources */,
				2801EA02801EA02801EA0000 /* execution_monitor.cpp in Sources */,
				28026D028026D028026D0000 /* framework.cpp in Sources */,
				2802EE02802EE02802EE0000 /* interaction_based.cpp in Sources */,
				280374028037402803740000 /* logged_expectations.cpp in Sources */,
				2803FB02803FB02803FB0000 /* plain_report_formatter.cpp in Sources */,
				280481028048102804810000 /* progress_monitor.cpp in Sources */,
				280546028054602805460000 /* results_collector.cpp in Sources */,
				28058E028058E028058E0000 /* results_reporter.cpp in Sources */,
				280610028061002806100000 /* test_tools.cpp in Sources */,
				280693028069302806930000 /* unit_test_log.cpp in Sources */,
				280710028071002807100000 /* unit_test_main.cpp in Sources */,
				2807D802807D802807D80000 /* unit_test_monitor.cpp in Sources */,
				28081E028081E028081E0000 /* unit_test_parameters.cpp in Sources */,
				2808A702808A702808A70000 /* unit_test_suite.cpp in Sources */,
				280931028093102809310000 /* xml_log_formatter.cpp in Sources */,
				2809B602809B602809B60000 /* xml_report_formatter.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		283083028308302830830000 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				282CE60282CE60282CE60000 /* operations.cpp in Sources */,
				282D920282D920282D920000 /* path.cpp in Sources */,
				282E5D0282E5D0282E5D0000 /* portability.cpp in Sources */,
				282F090282F090282F090000 /* utf8_codecvt_facet.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		283DEE0283DEE0283DEE0000 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				283AE50283AE50283AE50000 /* operations.cpp in Sources */,
				283B6E0283B6E0283B6E0000 /* path.cpp in Sources */,
				283BFD0283BFD0283BFD0000 /* portability.cpp in Sources */,
				283C890283C890283C890000 /* utf8_codecvt_facet.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		284B580284B580284B580000 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				284863028486302848630000 /* operations.cpp in Sources */,
				2848D402848D402848D40000 /* path.cpp in Sources */,
				284959028495902849590000 /* portability.cpp in Sources */,
				2849E202849E202849E20000 /* utf8_codecvt_facet.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		2857CC02857CC02857CC0000 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				2854D402854D402854D40000 /* operations.cpp in Sources */,
				28554A028554A028554A0000 /* path.cpp in Sources */,
				28560B028560B028560B0000 /* portability.cpp in Sources */,
				285654028565402856540000 /* utf8_codecvt_facet.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		2897B002897B002897B00000 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				2889A702889A702889A70000 /* broadcast.cpp in Sources */,
				288A610288A610288A610000 /* communicator.cpp in Sources */,
				288B1C0288B1C0288B1C0000 /* computation_tree.cpp in Sources */,
				288BD90288BD90288BD90000 /* content_oarchive.cpp in Sources */,
				288C920288C920288C920000 /* environment.cpp in Sources */,
				288D500288D500288D500000 /* exception.cpp in Sources */,
				288E0E0288E0E0288E0E0000 /* graph_communicator.cpp in Sources */,
				288EC70288EC70288EC70000 /* group.cpp in Sources */,
				288F880288F880288F880000 /* intercommunicator.cpp in Sources */,
				289048028904802890480000 /* mpi_datatype_cache.cpp in Sources */,
				289108028910802891080000 /* mpi_datatype_oarchive.cpp in Sources */,
				28920D028920D028920D0000 /* packed_iarchive.cpp in Sources */,
				2892C902892C902892C90000 /* packed_oarchive.cpp in Sources */,
				28933D028933D028933D0000 /* packed_skeleton_iarchive.cpp in Sources */,
				2893FA02893FA02893FA0000 /* packed_skeleton_oarchive.cpp in Sources */,
				2894B402894B402894B40000 /* point_to_point.cpp in Sources */,
				289571028957102895710000 /* request.cpp in Sources */,
				289632028963202896320000 /* text_skeleton_oarchive.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		28ACA0028ACA0028ACA00000 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				28A015028A015028A0150000 /* broadcast.cpp in Sources */,
				28A2B5028A2B5028A2B50000 /* communicator.cpp in Sources */,
				28A34E028A34E028A34E0000 /* computation_tree.cpp in Sources */,
				28A3C5028A3C5028A3C50000 /* content_oarchive.cpp in Sources */,
				28A450028A450028A4500000 /* environment.cpp in Sources */,
				28A4D3028A4D3028A4D30000 /* exception.cpp in Sources */,
				28A599028A599028A5990000 /* graph_communicator.cpp in Sources */,
				28A5DF028A5DF028A5DF0000 /* group.cpp in Sources */,
				28A666028A666028A6660000 /* intercommunicator.cpp in Sources */,
				28A6FD028A6FD028A6FD0000 /* mpi_datatype_cache.cpp in Sources */,
				28A783028A783028A7830000 /* mpi_datatype_oarchive.cpp in Sources */,
				28A7D5028A7D5028A7D50000 /* packed_iarchive.cpp in Sources */,
				28A884028A884028A8840000 /* packed_oarchive.cpp in Sources */,
				28A90B028A90B028A90B0000 /* packed_skeleton_iarchive.cpp in Sources */,
				28A9D3028A9D3028A9D30000 /* packed_skeleton_oarchive.cpp in Sources */,
				28AA19028AA19028AA190000 /* point_to_point.cpp in Sources */,
				28AAA3028AAA3028AAA30000 /* request.cpp in Sources */,
				28AB2D028AB2D028AB2D0000 /* text_skeleton_oarchive.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		28C172028C172028C1720000 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				28B4FF028B4FF028B4FF0000 /* broadcast.cpp in Sources */,
				28B7B2028B7B2028B7B20000 /* communicator.cpp in Sources */,
				28B827028B827028B8270000 /* computation_tree.cpp in Sources */,
				28B8EA028B8EA028B8EA0000 /* content_oarchive.cpp in Sources */,
				28B946028B946028B9460000 /* environment.cpp in Sources */,
				28B9B9028B9B9028B9B90000 /* exception.cpp in Sources */,
				28BA3B028BA3B028BA3B0000 /* graph_communicator.cpp in Sources */,
				28BAD4028BAD4028BAD40000 /* group.cpp in Sources */,
				28BB48028BB48028BB480000 /* intercommunicator.cpp in Sources */,
				28BBCF028BBCF028BBCF0000 /* mpi_datatype_cache.cpp in Sources */,
				28BC54028BC54028BC540000 /* mpi_datatype_oarchive.cpp in Sources */,
				28BCDB028BCDB028BCDB0000 /* packed_iarchive.cpp in Sources */,
				28BD61028BD61028BD610000 /* packed_oarchive.cpp in Sources */,
				28BDE7028BDE7028BDE70000 /* packed_skeleton_iarchive.cpp in Sources */,
				28BE6F028BE6F028BE6F0000 /* packed_skeleton_oarchive.cpp in Sources */,
				28BF09028BF09028BF090000 /* point_to_point.cpp in Sources */,
				28BF7E028BF7E028BF7E0000 /* request.cpp in Sources */,
				28C009028C009028C0090000 /* text_skeleton_oarchive.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		28D51A028D51A028D51A0000 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				28CA7C028CA7C028CA7C0000 /* broadcast.cpp in Sources */,
				28CB55028CB55028CB550000 /* communicator.cpp in Sources */,
				28CBE1028CBE1028CBE10000 /* computation_tree.cpp in Sources */,
				28CC7B028CC7B028CC7B0000 /* content_oarchive.cpp in Sources */,
				28CD00028CD00028CD000000 /* environment.cpp in Sources */,
				28CD75028CD75028CD750000 /* exception.cpp in Sources */,
				28CDF3028CDF3028CDF30000 /* graph_communicator.cpp in Sources */,
				28CE77028CE77028CE770000 /* group.cpp in Sources */,
				28CEFC028CEFC028CEFC0000 /* intercommunicator.cpp in Sources */,
				28CF88028CF88028CF880000 /* mpi_datatype_cache.cpp in Sources */,
				28D00E028D00E028D00E0000 /* mpi_datatype_oarchive.cpp in Sources */,
				28D0D0028D0D0028D0D00000 /* packed_iarchive.cpp in Sources */,
				28D118028D118028D1180000 /* packed_oarchive.cpp in Sources */,
				28D19D028D19D028D19D0000 /* packed_skeleton_iarchive.cpp in Sources */,
				28D236028D236028D2360000 /* packed_skeleton_oarchive.cpp in Sources */,
				28D2E1028D2E1028D2E10000 /* point_to_point.cpp in Sources */,
				28D329028D329028D3290000 /* request.cpp in Sources */,
				28D3B2028D3B2028D3B20000 /* text_skeleton_oarchive.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		28E900028E900028E9000000 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				28E6C7028E6C7028E6C70000 /* mpi_process_group.cpp in Sources */,
				28E797028E797028E7970000 /* tag_allocator.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		28F566028F566028F5660000 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				28F157028F157028F1570000 /* mpi_process_group.cpp in Sources */,
				28F3F8028F3F8028F3F80000 /* tag_allocator.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		2905C402905C402905C40000 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				2901CE02901CE02901CE0000 /* mpi_process_group.cpp in Sources */,
				290457029045702904570000 /* tag_allocator.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		291111029111102911110000 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				290EE10290EE10290EE10000 /* mpi_process_group.cpp in Sources */,
				290FAC0290FAC0290FAC0000 /* tag_allocator.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		292E600292E600292E600000 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				292AC40292AC40292AC40000 /* file_descriptor.cpp in Sources */,
				292B800292B800292B800000 /* mapped_file.cpp in Sources */,
				292C280292C280292C280000 /* zlib.cpp in Sources */,
				292CEB0292CEB0292CEB0000 /* bzip2.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		293BD30293BD30293BD30000 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				29390D029390D029390D0000 /* file_descriptor.cpp in Sources */,
				293993029399302939930000 /* mapped_file.cpp in Sources */,
				2939DB02939DB02939DB0000 /* zlib.cpp in Sources */,
				293A5E0293A5E0293A5E0000 /* bzip2.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		29493A029493A029493A0000 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				29463A029463A029463A0000 /* file_descriptor.cpp in Sources */,
				2946C502946C502946C50000 /* mapped_file.cpp in Sources */,
				29474B029474B029474B0000 /* zlib.cpp in Sources */,
				2947DF02947DF02947DF0000 /* bzip2.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		29558E029558E029558E0000 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				295299029529902952990000 /* file_descriptor.cpp in Sources */,
				295320029532002953200000 /* mapped_file.cpp in Sources */,
				29539F029539F029539F0000 /* zlib.cpp in Sources */,
				295420029542002954200000 /* bzip2.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		298797029879702987970000 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				297F740297F740297F740000 /* cmdline.cpp in Sources */,
				298035029803502980350000 /* config_file.cpp in Sources */,
				2980F302980F302980F30000 /* options_description.cpp in Sources */,
				298199029819902981990000 /* parsers.cpp in Sources */,
				29825C029825C029825C0000 /* variables_map.cpp in Sources */,
				298333029833302983330000 /* value_semantic.cpp in Sources */,
				2983DE02983DE02983DE0000 /* positional_options.cpp in Sources */,
				29849F029849F029849F0000 /* utf8_codecvt_facet.cpp in Sources */,
				29856E029856E029856E0000 /* convert.cpp in Sources */,
				29862B029862B029862B0000 /* winmain.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		29983B029983B029983B0000 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				299214029921402992140000 /* cmdline.cpp in Sources */,
				299288029928802992880000 /* config_file.cpp in Sources */,
				299321029932102993210000 /* options_description.cpp in Sources */,
				2993AA02993AA02993AA0000 /* parsers.cpp in Sources */,
				299436029943602994360000 /* variables_map.cpp in Sources */,
				2994BC02994BC02994BC0000 /* value_semantic.cpp in Sources */,
				299542029954202995420000 /* positional_options.cpp in Sources */,
				2995CB02995CB02995CB0000 /* utf8_codecvt_facet.cpp in Sources */,
				299653029965302996530000 /* convert.cpp in Sources */,
				29970A029970A029970A0000 /* winmain.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		29A8D8029A8D8029A8D80000 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				29A2C1029A2C1029A2C10000 /* cmdline.cpp in Sources */,
				29A331029A331029A3310000 /* config_file.cpp in Sources */,
				29A3CB029A3CB029A3CB0000 /* options_description.cpp in Sources */,
				29A44F029A44F029A44F0000 /* parsers.cpp in Sources */,
				29A4C4029A4C4029A4C40000 /* variables_map.cpp in Sources */,
				29A589029A589029A5890000 /* value_semantic.cpp in Sources */,
				29A5CF029A5CF029A5CF0000 /* positional_options.cpp in Sources */,
				29A667029A667029A6670000 /* utf8_codecvt_facet.cpp in Sources */,
				29A6F6029A6F6029A6F60000 /* convert.cpp in Sources */,
				29A7A6029A7A6029A7A60000 /* winmain.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		29B855029B855029B8550000 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				29B1D9029B1D9029B1D90000 /* cmdline.cpp in Sources */,
				29B2BE029B2BE029B2BE0000 /* config_file.cpp in Sources */,
				29B33E029B33E029B33E0000 /* options_description.cpp in Sources */,
				29B3C5029B3C5029B3C50000 /* parsers.cpp in Sources */,
				29B44B029B44B029B44B0000 /* variables_map.cpp in Sources */,
				29B511029B511029B5110000 /* value_semantic.cpp in Sources */,
				29B56B029B56B029B56B0000 /* positional_options.cpp in Sources */,
				29B5F0029B5F0029B5F00000 /* utf8_codecvt_facet.cpp in Sources */,
				29B6A5029B6A5029B6A50000 /* convert.cpp in Sources */,
				29B72A029B72A029B72A0000 /* winmain.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		29DE5F029DE5F029DE5F0000 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				29DA01029DA01029DA010000 /* trackable.cpp in Sources */,
				29DAB1029DAB1029DAB10000 /* connection.cpp in Sources */,
				29DB7B029DB7B029DB7B0000 /* named_slot_map.cpp in Sources */,
				29DC36029DC36029DC360000 /* signal_base.cpp in Sources */,
				29DCDC029DCDC029DCDC0000 /* slot.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		29EC45029EC45029EC450000 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				29E8C1029E8C1029E8C10000 /* trackable.cpp in Sources */,
				29E944029E944029E9440000 /* connection.cpp in Sources */,
				29E9D6029E9D6029E9D60000 /* named_slot_map.cpp in Sources */,
				29EA51029EA51029EA510000 /* signal_base.cpp in Sources */,
				29EAEB029EAEB029EAEB0000 /* slot.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		29FA35029FA35029FA350000 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				29F6B9029F6B9029F6B90000 /* trackable.cpp in Sources */,
				29F74E029F74E029F74E0000 /* connection.cpp in Sources */,
				29F7C0029F7C0029F7C00000 /* named_slot_map.cpp in Sources */,
				29F859029F859029F8590000 /* signal_base.cpp in Sources */,
				29F8DA029F8DA029F8DA0000 /* slot.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		2A0B1602A0B1602A0B160000 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				2A079C02A079C02A079C0000 /* trackable.cpp in Sources */,
				2A081B02A081B02A081B0000 /* connection.cpp in Sources */,
				2A089E02A089E02A089E0000 /* named_slot_map.cpp in Sources */,
				2A096002A096002A09600000 /* signal_base.cpp in Sources */,
				2A09A702A09A702A09A70000 /* slot.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		2A4DCF02A4DCF02A4DCF0000 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				2A44F002A44F002A44F00000 /* instantiate_cpp_exprgrammar.cpp in Sources */,
				2A45AD02A45AD02A45AD0000 /* instantiate_cpp_grammar.cpp in Sources */,
				2A466A02A466A02A466A0000 /* instantiate_cpp_literalgrs.cpp in Sources */,
				2A472702A472702A47270000 /* instantiate_defined_grammar.cpp in Sources */,
				2A47E602A47E602A47E60000 /* instantiate_predef_macros.cpp in Sources */,
				2A48B402A48B402A48B40000 /* instantiate_re2c_lexer.cpp in Sources */,
				2A497002A497002A49700000 /* instantiate_re2c_lexer_str.cpp in Sources */,
				2A4A1602A4A1602A4A160000 /* token_ids.cpp in Sources */,
				2A4AE702A4AE702A4AE70000 /* wave_config_constant.cpp in Sources */,
				2A4BAA02A4BAA02A4BAA0000 /* aq.cpp in Sources */,
				2A4C6502A4C6502A4C650000 /* cpp_re.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		2A5ECE02A5ECE02A5ECE0000 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				2A583302A583302A58330000 /* instantiate_cpp_exprgrammar.cpp in Sources */,
				2A58B902A58B902A58B90000 /* instantiate_cpp_grammar.cpp in Sources */,
				2A593E02A593E02A593E0000 /* instantiate_cpp_literalgrs.cpp in Sources */,
				2A59C202A59C202A59C20000 /* instantiate_defined_grammar.cpp in Sources */,
				2A5A4C02A5A4C02A5A4C0000 /* instantiate_predef_macros.cpp in Sources */,
				2A5AD102A5AD102A5AD10000 /* instantiate_re2c_lexer.cpp in Sources */,
				2A5B5502A5B5502A5B550000 /* instantiate_re2c_lexer_str.cpp in Sources */,
				2A5BED02A5BED02A5BED0000 /* token_ids.cpp in Sources */,
				2A5CA202A5CA202A5CA20000 /* wave_config_constant.cpp in Sources */,
				2A5CEB02A5CEB02A5CEB0000 /* aq.cpp in Sources */,
				2A5DAB02A5DAB02A5DAB0000 /* cpp_re.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		2A6FE802A6FE802A6FE80000 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				2A693A02A693A02A693A0000 /* instantiate_cpp_exprgrammar.cpp in Sources */,
				2A69C002A69C002A69C00000 /* instantiate_cpp_grammar.cpp in Sources */,
				2A6A4702A6A4702A6A470000 /* instantiate_cpp_literalgrs.cpp in Sources */,
				2A6ACE02A6ACE02A6ACE0000 /* instantiate_defined_grammar.cpp in Sources */,
				2A6B6B02A6B6B02A6B6B0000 /* instantiate_predef_macros.cpp in Sources */,
				2A6BE102A6BE102A6BE10000 /* instantiate_re2c_lexer.cpp in Sources */,
				2A6C7A02A6C7A02A6C7A0000 /* instantiate_re2c_lexer_str.cpp in Sources */,
				2A6D2502A6D2502A6D250000 /* token_ids.cpp in Sources */,
				2A6D6B02A6D6B02A6D6B0000 /* wave_config_constant.cpp in Sources */,
				2A6E3102A6E3102A6E310000 /* aq.cpp in Sources */,
				2A6E7902A6E7902A6E790000 /* cpp_re.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		2A7FE602A7FE602A7FE60000 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				2A794302A794302A79430000 /* instantiate_cpp_exprgrammar.cpp in Sources */,
				2A79CB02A79CB02A79CB0000 /* instantiate_cpp_grammar.cpp in Sources */,
				2A7A5102A7A5102A7A510000 /* instantiate_cpp_literalgrs.cpp in Sources */,
				2A7AEA02A7AEA02A7AEA0000 /* instantiate_defined_grammar.cpp in Sources */,
				2A7B6F02A7B6F02A7B6F0000 /* instantiate_predef_macros.cpp in Sources */,
				2A7BF402A7BF402A7BF40000 /* instantiate_re2c_lexer.cpp in Sources */,
				2A7C6602A7C6602A7C660000 /* instantiate_re2c_lexer_str.cpp in Sources */,
				2A7CEA02A7CEA02A7CEA0000 /* token_ids.cpp in Sources */,
				2A7D8602A7D8602A7D860000 /* wave_config_constant.cpp in Sources */,
				2A7E0C02A7E0C02A7E0C0000 /* aq.cpp in Sources */,
				2A7EBA02A7EBA02A7EBA0000 /* cpp_re.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		2A924002A924002A92400000 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				2A894002A894002A89400000 /* add_path.cpp in Sources */,
				2A89F502A89F502A89F50000 /* bcp_imp.cpp in Sources */,
				2A8AAC02A8AAC02A8AAC0000 /* copy_path.cpp in Sources */,
				2A8B6302A8B6302A8B630000 /* file_types.cpp in Sources */,
				2A8C1A02A8C1A02A8C1A0000 /* fileview.cpp in Sources */,
				2A8CD702A8CD702A8CD70000 /* main.cpp in Sources */,
				2A8DB702A8DB702A8DB70000 /* path_operations.cpp in Sources */,
				2A8E4602A8E4602A8E460000 /* scan_cvs_path.cpp in Sources */,
				2A8EFD02A8EFD02A8EFD0000 /* licence_info.cpp in Sources */,
				2A8FBB02A8FBB02A8FBB0000 /* scan_licence.cpp in Sources */,
				2A909702A909702A90970000 /* output_licence_info.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		2AA45102AA45102AA4510000 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				2A9AFE02A9AFE02A9AFE0000 /* inspect.cpp in Sources */,
				2A9C2202A9C2202A9C220000 /* license_check.cpp in Sources */,
				2A9CDA02A9CDA02A9CDA0000 /* link_check.cpp in Sources */,
				2A9DDC02A9DDC02A9DDC0000 /* path_name_check.cpp in Sources */,
				2A9E4E02A9E4E02A9E4E0000 /* tab_check.cpp in Sources */,
				2A9F0902A9F0902A9F090000 /* crlf_check.cpp in Sources */,
				2A9FC102A9FC102A9FC10000 /* end_check.cpp in Sources */,
				2AA07C02AA07C02AA07C0000 /* unnamed_namespace_check.cpp in Sources */,
				2AA13402AA13402AA1340000 /* ascii_check.cpp in Sources */,
				2AA1EF02AA1EF02AA1EF0000 /* copyright_check.cpp in Sources */,
				2AA2A702AA2A702AA2A70000 /* minmax_check.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXSourcesBuildPhase section */

/* Begin PBXTargetDependency section */
		2AADCB02AADCB02AADCB0000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 23F7A6023F7A6023F7A60000 /* libboost_date_time-mt.a */;
			targetProxy = 2AAD8C02AAD8C02AAD8C0000 /* PBXContainerItemProxy */;
		};
		2AAE4402AAE4402AAE440000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 23DDB7023DDB7023DDB70000 /* libboost_date_time-mt.dylib */;
			targetProxy = 2AADFD02AADFD02AADFD0000 /* PBXContainerItemProxy */;
		};
		2AAEBD02AAEBD02AAEBD0000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 24077A024077A024077A0000 /* libboost_date_time-mt-d.a */;
			targetProxy = 2AAE7302AAE7302AAE730000 /* PBXContainerItemProxy */;
		};
		2AAF3202AAF3202AAF320000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 23EAA8023EAA8023EAA80000 /* libboost_date_time-mt-d.dylib */;
			targetProxy = 2AAEEB02AAEEB02AAEEB0000 /* PBXContainerItemProxy */;
		};
		2AAFAF02AAFAF02AAFAF0000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 243DD30243DD30243DD30000 /* libboost_thread-mt.a */;
			targetProxy = 2AAF6802AAF6802AAF680000 /* PBXContainerItemProxy */;
		};
		2AB02B02AB02B02AB02B0000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 242409024240902424090000 /* libboost_thread-mt.dylib */;
			targetProxy = 2AAFE002AAFE002AAFE00000 /* PBXContainerItemProxy */;
		};
		2AB0A502AB0A502AB0A50000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 2449AE02449AE02449AE0000 /* libboost_thread-mt-d.a */;
			targetProxy = 2AB06102AB06102AB0610000 /* PBXContainerItemProxy */;
		};
		2AB11F02AB11F02AB11F0000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 2430E902430E902430E90000 /* libboost_thread-mt-d.dylib */;
			targetProxy = 2AB0DB02AB0DB02AB0DB0000 /* PBXContainerItemProxy */;
		};
		2AB19902AB19902AB1990000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 2498D702498D702498D70000 /* libboost_regex-mt.a */;
			targetProxy = 2AB15502AB15502AB1550000 /* PBXContainerItemProxy */;
		};
		2AB21202AB21202AB2120000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 24707B024707B024707B0000 /* libboost_regex-mt.dylib */;
			targetProxy = 2AB1CF02AB1CF02AB1CF0000 /* PBXContainerItemProxy */;
		};
		2AB28B02AB28B02AB28B0000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 24ABE7024ABE7024ABE70000 /* libboost_regex-mt-d.a */;
			targetProxy = 2AB24402AB24402AB2440000 /* PBXContainerItemProxy */;
		};
		2AB30302AB30302AB3030000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 24849D024849D024849D0000 /* libboost_regex-mt-d.dylib */;
			targetProxy = 2AB2BC02AB2BC02AB2BC0000 /* PBXContainerItemProxy */;
		};
		2AB37B02AB37B02AB37B0000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 255652025565202556520000 /* libboost_serialization-mt.a */;
			targetProxy = 2AB33402AB33402AB3340000 /* PBXContainerItemProxy */;
		};
		2AB3F302AB3F302AB3F30000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 252539025253902525390000 /* libboost_serialization-mt.dylib */;
			targetProxy = 2AB3AC02AB3AC02AB3AC0000 /* PBXContainerItemProxy */;
		};
		2AB46B02AB46B02AB46B0000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 256DA00256DA00256DA00000 /* libboost_serialization-mt-d.a */;
			targetProxy = 2AB42402AB42402AB4240000 /* PBXContainerItemProxy */;
		};
		2AB4E302AB4E302AB4E30000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 253DD50253DD50253DD50000 /* libboost_serialization-mt-d.dylib */;
			targetProxy = 2AB49C02AB49C02AB49C0000 /* PBXContainerItemProxy */;
		};
		2AB55B02AB55B02AB55B0000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 25A6C7025A6C7025A6C70000 /* libboost_wserialization-mt.a */;
			targetProxy = 2AB51402AB51402AB5140000 /* PBXContainerItemProxy */;
		};
		2AB5D802AB5D802AB5D80000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 258687025868702586870000 /* libboost_wserialization-mt.dylib */;
			targetProxy = 2AB58A02AB58A02AB58A0000 /* PBXContainerItemProxy */;
		};
		2AB65802AB65802AB6580000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 25B5CC025B5CC025B5CC0000 /* libboost_wserialization-mt-d.a */;
			targetProxy = 2AB60902AB60902AB6090000 /* PBXContainerItemProxy */;
		};
		2AB6D102AB6D102AB6D10000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 2596BC02596BC02596BC0000 /* libboost_wserialization-mt-d.dylib */;
			targetProxy = 2AB68202AB68202AB6820000 /* PBXContainerItemProxy */;
		};
		2AB74202AB74202AB7420000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 2614BD02614BD02614BD0000 /* libboost_graph-mt.a */;
			targetProxy = 2AB6FB02AB6FB02AB6FB0000 /* PBXContainerItemProxy */;
		};
		2AB7BA02AB7BA02AB7BA0000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 25F90F025F90F025F90F0000 /* libboost_graph-mt.dylib */;
			targetProxy = 2AB77302AB77302AB7730000 /* PBXContainerItemProxy */;
		};
		2AB83202AB83202AB8320000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 261F850261F850261F850000 /* libboost_graph-mt-d.a */;
			targetProxy = 2AB7EB02AB7EB02AB7EB0000 /* PBXContainerItemProxy */;
		};
		2AB8AA02AB8AA02AB8AA0000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 2608DD02608DD02608DD0000 /* libboost_graph-mt-d.dylib */;
			targetProxy = 2AB86302AB86302AB8630000 /* PBXContainerItemProxy */;
		};
		2AB92202AB92202AB9220000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 26829B026829B026829B0000 /* libboost_python-mt.a */;
			targetProxy = 2AB8DB02AB8DB02AB8DB0000 /* PBXContainerItemProxy */;
		};
		2AB99A02AB99A02AB99A0000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 264E780264E780264E780000 /* libboost_python-mt.dylib */;
			targetProxy = 2AB95302AB95302AB9530000 /* PBXContainerItemProxy */;
		};
		2ABA1202ABA1202ABA120000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 269BA60269BA60269BA60000 /* libboost_python-mt-d.a */;
			targetProxy = 2AB9CB02AB9CB02AB9CB0000 /* PBXContainerItemProxy */;
		};
		2ABA8A02ABA8A02ABA8A0000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 266851026685102668510000 /* libboost_python-mt-d.dylib */;
			targetProxy = 2ABA4302ABA4302ABA430000 /* PBXContainerItemProxy */;
		};
		2ABB0202ABB0202ABB020000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 26B6D3026B6D3026B6D30000 /* accumulators-accumulators_example */;
			targetProxy = 2ABABB02ABABB02ABABB0000 /* PBXContainerItemProxy */;
		};
		2ABB7A02ABB7A02ABB7A0000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 26E960026E960026E9600000 /* libboost_system-mt.a */;
			targetProxy = 2ABB3302ABB3302ABB330000 /* PBXContainerItemProxy */;
		};
		2ABBF202ABBF202ABBF20000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 26D1BD026D1BD026D1BD0000 /* libboost_system-mt.dylib */;
			targetProxy = 2ABBAB02ABBAB02ABBAB0000 /* PBXContainerItemProxy */;
		};
		2ABC6A02ABC6A02ABC6A0000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 26F436026F436026F4360000 /* libboost_system-mt-d.a */;
			targetProxy = 2ABC2302ABC2302ABC230000 /* PBXContainerItemProxy */;
		};
		2ABCE202ABCE202ABCE20000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 26DD8C026DD8C026DD8C0000 /* libboost_system-mt-d.dylib */;
			targetProxy = 2ABC9B02ABC9B02ABC9B0000 /* PBXContainerItemProxy */;
		};
		2ABD6502ABD6502ABD650000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 276F4D0276F4D0276F4D0000 /* libboost_prg_exec_monitor-mt.a */;
			targetProxy = 2AB59302AB59302AB5930000 /* PBXContainerItemProxy */;
		};
		2ABDDF02ABDDF02ABDDF0000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 27558F027558F027558F0000 /* libboost_prg_exec_monitor-mt.dylib */;
			targetProxy = 2ABD9B02ABD9B02ABD9B0000 /* PBXContainerItemProxy */;
		};
		2ABE6202ABE6202ABE620000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 277B2B0277B2B0277B2B0000 /* libboost_prg_exec_monitor-mt-d.a */;
			targetProxy = 2ABE1502ABE1502ABE150000 /* PBXContainerItemProxy */;
		};
		2ABEDB02ABEDB02ABEDB0000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 27626D027626D027626D0000 /* libboost_prg_exec_monitor-mt-d.dylib */;
			targetProxy = 2ABE8C02ABE8C02ABE8C0000 /* PBXContainerItemProxy */;
		};
		2ABF4C02ABF4C02ABF4C0000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 279979027997902799790000 /* libboost_test_exec_monitor-mt.a */;
			targetProxy = 2ABF0502ABF0502ABF050000 /* PBXContainerItemProxy */;
		};
		2ABFCC02ABFCC02ABFCC0000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 27AC9D027AC9D027AC9D0000 /* libboost_test_exec_monitor-mt-d.a */;
			targetProxy = 2ABF7D02ABF7D02ABF7D0000 /* PBXContainerItemProxy */;
		};
		2AC03D02AC03D02AC03D0000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 27F422027F422027F4220000 /* libboost_unit_test_framework-mt.a */;
			targetProxy = 2ABFF602ABFF602ABFF60000 /* PBXContainerItemProxy */;
		};
		2AC0B502AC0B502AC0B50000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 27C987027C987027C9870000 /* libboost_unit_test_framework-mt.dylib */;
			targetProxy = 2AC06E02AC06E02AC06E0000 /* PBXContainerItemProxy */;
		};
		2AC13502AC13502AC1350000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 280C460280C460280C460000 /* libboost_unit_test_framework-mt-d.a */;
			targetProxy = 2AC0E602AC0E602AC0E60000 /* PBXContainerItemProxy */;
		};
		2AC1AE02AC1AE02AC1AE0000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 27DED2027DED2027DED20000 /* libboost_unit_test_framework-mt-d.dylib */;
			targetProxy = 2AC15F02AC15F02AC15F0000 /* PBXContainerItemProxy */;
		};
		2AC21F02AC21F02AC21F0000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 284C6D0284C6D0284C6D0000 /* libboost_filesystem-mt.a */;
			targetProxy = 2AC1D802AC1D802AC1D80000 /* PBXContainerItemProxy */;
		};
		2AC29702AC29702AC2970000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 283193028319302831930000 /* libboost_filesystem-mt.dylib */;
			targetProxy = 2AC25002AC25002AC2500000 /* PBXContainerItemProxy */;
		};
		2AC30F02AC30F02AC30F0000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 2858DC02858DC02858DC0000 /* libboost_filesystem-mt-d.a */;
			targetProxy = 2AC2C802AC2C802AC2C80000 /* PBXContainerItemProxy */;
		};
		2AC38702AC38702AC3870000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 283EFE0283EFE0283EFE0000 /* libboost_filesystem-mt-d.dylib */;
			targetProxy = 2AC34002AC34002AC3400000 /* PBXContainerItemProxy */;
		};
		2AC40702AC40702AC4070000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 28C29B028C29B028C29B0000 /* libboost_mpi-mt.a */;
			targetProxy = 2AC3B802AC3B802AC3B80000 /* PBXContainerItemProxy */;
		};
		2AC47E02AC47E02AC47E0000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 2898D702898D702898D70000 /* libboost_mpi-mt.dylib */;
			targetProxy = 2AC42F02AC42F02AC42F0000 /* PBXContainerItemProxy */;
		};
		2AC4ED02AC4ED02AC4ED0000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 28D640028D640028D6400000 /* libboost_mpi-mt-d.a */;
			targetProxy = 2AC4A602AC4A602AC4A60000 /* PBXContainerItemProxy */;
		};
		2AC56502AC56502AC5650000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 28ADC4028ADC4028ADC40000 /* libboost_mpi-mt-d.dylib */;
			targetProxy = 2AC51E02AC51E02AC51E0000 /* PBXContainerItemProxy */;
		};
		2AC5DD02AC5DD02AC5DD0000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 2906D802906D802906D80000 /* libboost_graph_parallel-mt.a */;
			targetProxy = 2AC59602AC59602AC5960000 /* PBXContainerItemProxy */;
		};
		2AC65502AC65502AC6550000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 28EA10028EA10028EA100000 /* libboost_graph_parallel-mt.dylib */;
			targetProxy = 2AC60E02AC60E02AC60E0000 /* PBXContainerItemProxy */;
		};
		2AC6D502AC6D502AC6D50000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 29122A029122A029122A0000 /* libboost_graph_parallel-mt-d.a */;
			targetProxy = 2AC68602AC68602AC6860000 /* PBXContainerItemProxy */;
		};
		2AC74E02AC74E02AC74E0000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 28F67B028F67B028F67B0000 /* libboost_graph_parallel-mt-d.dylib */;
			targetProxy = 2AC6FF02AC6FF02AC6FF0000 /* PBXContainerItemProxy */;
		};
		2AC7BF02AC7BF02AC7BF0000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 294A4F0294A4F0294A4F0000 /* libboost_iostreams-mt.a */;
			targetProxy = 2AC77802AC77802AC7780000 /* PBXContainerItemProxy */;
		};
		2AC83702AC83702AC8370000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 292F750292F750292F750000 /* libboost_iostreams-mt.dylib */;
			targetProxy = 2AC7F002AC7F002AC7F00000 /* PBXContainerItemProxy */;
		};
		2AC8AF02AC8AF02AC8AF0000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 29569F029569F029569F0000 /* libboost_iostreams-mt-d.a */;
			targetProxy = 2AC86802AC86802AC8680000 /* PBXContainerItemProxy */;
		};
		2AC92702AC92702AC9270000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 293CE30293CE30293CE30000 /* libboost_iostreams-mt-d.dylib */;
			targetProxy = 2AC8E002AC8E002AC8E00000 /* PBXContainerItemProxy */;
		};
		2AC99F02AC99F02AC99F0000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 29A9F0029A9F0029A9F00000 /* libboost_program_options-mt.a */;
			targetProxy = 2AC95802AC95802AC9580000 /* PBXContainerItemProxy */;
		};
		2ACA1702ACA1702ACA170000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 2988B002988B002988B00000 /* libboost_program_options-mt.dylib */;
			targetProxy = 2AC9D002AC9D002AC9D00000 /* PBXContainerItemProxy */;
		};
		2ACA9702ACA9702ACA970000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 29B96E029B96E029B96E0000 /* libboost_program_options-mt-d.a */;
			targetProxy = 2ACA4802ACA4802ACA480000 /* PBXContainerItemProxy */;
		};
		2ACB1002ACB1002ACB100000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 299954029995402999540000 /* libboost_program_options-mt-d.dylib */;
			targetProxy = 2ACAC102ACAC102ACAC10000 /* PBXContainerItemProxy */;
		};
		2ACB8102ACB8102ACB810000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 29FB4B029FB4B029FB4B0000 /* libboost_signals-mt.a */;
			targetProxy = 2ACB3A02ACB3A02ACB3A0000 /* PBXContainerItemProxy */;
		};
		2ACBF902ACBF902ACBF90000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 29DF71029DF71029DF710000 /* libboost_signals-mt.dylib */;
			targetProxy = 2ACBB202ACBB202ACBB20000 /* PBXContainerItemProxy */;
		};
		2ACC6102ACC6102ACC610000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 2A0C2902A0C2902A0C290000 /* libboost_signals-mt-d.a */;
			targetProxy = 2ACC2A02ACC2A02ACC2A0000 /* PBXContainerItemProxy */;
		};
		2ACCDB02ACCDB02ACCDB0000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 29ED59029ED59029ED590000 /* libboost_signals-mt-d.dylib */;
			targetProxy = 2ACC9702ACC9702ACC970000 /* PBXContainerItemProxy */;
		};
		2ACD5502ACD5502ACD550000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 2A710902A710902A71090000 /* libboost_wave-mt.a */;
			targetProxy = 2ACD1102ACD1102ACD110000 /* PBXContainerItemProxy */;
		};
		2ACDCF02ACDCF02ACDCF0000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 2A4EEE02A4EEE02A4EEE0000 /* libboost_wave-mt.dylib */;
			targetProxy = 2ACD8B02ACD8B02ACD8B0000 /* PBXContainerItemProxy */;
		};
		2ACE4902ACE4902ACE490000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 2A810602A810602A81060000 /* libboost_wave-mt-d.a */;
			targetProxy = 2ACE0502ACE0502ACE050000 /* PBXContainerItemProxy */;
		};
		2ACEC302ACEC302ACEC30000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 2A5FF702A5FF702A5FF70000 /* libboost_wave-mt-d.dylib */;
			targetProxy = 2ACE7F02ACE7F02ACE7F0000 /* PBXContainerItemProxy */;
		};
		2ACF3D02ACF3D02ACF3D0000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 2A936502A936502A93650000 /* bcp */;
			targetProxy = 2ACEF902ACEF902ACEF90000 /* PBXContainerItemProxy */;
		};
		2ACFBB02ACFBB02ACFBB0000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 2AA57702AA57702AA5770000 /* inspect */;
			targetProxy = 2ACF6C02ACF6C02ACF6C0000 /* PBXContainerItemProxy */;
		};
		2AD09402AD09402AD0940000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 22A632022A632022A6320000 /* ALL_BUILD */;
			targetProxy = 2ACFE502ACFE502ACFE50000 /* PBXContainerItemProxy */;
		};
		2AD11F02AD11F02AD11F0000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 22EB34022EB34022EB340000 /* preprocessor-modularize */;
			targetProxy = 2AD0C002AD0C002AD0C00000 /* PBXContainerItemProxy */;
		};
		2AD19102AD19102AD1910000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 22F37A022F37A022F37A0000 /* concept_check-modularize */;
			targetProxy = 2AD14A02AD14A02AD14A0000 /* PBXContainerItemProxy */;
		};
		2AD20A02AD20A02AD20A0000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 22FBDE022FBDE022FBDE0000 /* property_map-modularize */;
			targetProxy = 2AD1C002AD1C002AD1C00000 /* PBXContainerItemProxy */;
		};
		2AD28A02AD28A02AD28A0000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 230857023085702308570000 /* config-modularize */;
			targetProxy = 2AD23802AD23802AD2380000 /* PBXContainerItemProxy */;
		};
		2AD30102AD30102AD3010000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 23109C023109C023109C0000 /* mpl-modularize */;
			targetProxy = 2AD2B202AD2B202AD2B20000 /* PBXContainerItemProxy */;
		};
		2AD37402AD37402AD3740000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 2318A802318A802318A80000 /* type_traits-modularize */;
			targetProxy = 2AD32902AD32902AD3290000 /* PBXContainerItemProxy */;
		};
		2AD3F002AD3F002AD3F00000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 2320BC02320BC02320BC0000 /* function-modularize */;
			targetProxy = 2AD3AA02AD3AA02AD3AA0000 /* PBXContainerItemProxy */;
		};
		2AD46E02AD46E02AD46E0000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 2328CB02328CB02328CB0000 /* iterator-modularize */;
			targetProxy = 2AD41F02AD41F02AD41F0000 /* PBXContainerItemProxy */;
		};
		2AD4DD02AD4DD02AD4DD0000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 2330DF02330DF02330DF0000 /* smart_ptr-modularize */;
			targetProxy = 2AD49602AD49602AD4960000 /* PBXContainerItemProxy */;
		};
		2AD55402AD55402AD5540000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 2338EB02338EB02338EB0000 /* exception-modularize */;
			targetProxy = 2AD51502AD51502AD5150000 /* PBXContainerItemProxy */;
		};
		2AD5D902AD5D902AD5D90000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 2340FD02340FD02340FD0000 /* utility-modularize */;
			targetProxy = 2AD58A02AD58A02AD58A0000 /* PBXContainerItemProxy */;
		};
		2AD65002AD65002AD6500000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 234902023490202349020000 /* integer-modularize */;
			targetProxy = 2AD60102AD60102AD6010000 /* PBXContainerItemProxy */;
		};
		2AD6C702AD6C702AD6C70000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 23510D023510D023510D0000 /* detail-modularize */;
			targetProxy = 2AD67802AD67802AD6780000 /* PBXContainerItemProxy */;
		};
		2AD73602AD73602AD7360000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 235913023591302359130000 /* static_assert-modularize */;
			targetProxy = 2AD6EF02AD6EF02AD6EF0000 /* PBXContainerItemProxy */;
		};
		2AD7B602AD7B602AD7B60000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 236127023612702361270000 /* tuple-modularize */;
			targetProxy = 2AD76702AD76702AD7670000 /* PBXContainerItemProxy */;
		};
		2AD82502AD82502AD8250000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 236931023693102369310000 /* function_types-modularize */;
			targetProxy = 2AD7DE02AD7DE02AD7DE0000 /* PBXContainerItemProxy */;
		};
		2AD8A502AD8A502AD8A50000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 237149023714902371490000 /* fusion-modularize */;
			targetProxy = 2AD85602AD85602AD8560000 /* PBXContainerItemProxy */;
		};
		2AD92102AD92102AD9210000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 23794A023794A023794A0000 /* typeof-modularize */;
			targetProxy = 2AD8CB02AD8CB02AD8CB0000 /* PBXContainerItemProxy */;
		};
		2AD99802AD99802AD9980000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 238154023815402381540000 /* proto-modularize */;
			targetProxy = 2AD94902AD94902AD9490000 /* PBXContainerItemProxy */;
		};
		2ADA0702ADA0702ADA070000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 238955023895502389550000 /* intrusive-modularize */;
			targetProxy = 2AD9C002AD9C002AD9C00000 /* PBXContainerItemProxy */;
		};
		2ADA8702ADA8702ADA870000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 239169023916902391690000 /* logic-modularize */;
			targetProxy = 2ADA3802ADA3802ADA380000 /* PBXContainerItemProxy */;
		};
		2ADAFE02ADAFE02ADAFE0000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 23996F023996F023996F0000 /* numeric-modularize */;
			targetProxy = 2ADAAF02ADAAF02ADAAF0000 /* PBXContainerItemProxy */;
		};
		2ADB6D02ADB6D02ADB6D0000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 23A171023A171023A1710000 /* xpressive-modularize */;
			targetProxy = 2ADB2602ADB2602ADB260000 /* PBXContainerItemProxy */;
		};
		2ADBED02ADBED02ADBED0000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 23A97A023A97A023A97A0000 /* optional-modularize */;
			targetProxy = 2ADB9E02ADB9E02ADB9E0000 /* PBXContainerItemProxy */;
		};
		2ADC5D02ADC5D02ADC5D0000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 23B196023B196023B1960000 /* tokenizer-modularize */;
			targetProxy = 2ADC1502ADC1502ADC150000 /* PBXContainerItemProxy */;
		};
		2ADCDE02ADCDE02ADCDE0000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 23B9A8023B9A8023B9A80000 /* io-modularize */;
			targetProxy = 2ADC8F02ADC8F02ADC8F0000 /* PBXContainerItemProxy */;
		};
		2ADD5702ADD5702ADD570000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 23C1BD023C1BD023C1BD0000 /* bind-modularize */;
			targetProxy = 2ADD0802ADD0802ADD080000 /* PBXContainerItemProxy */;
		};
		2ADDC902ADDC902ADDC90000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 23C9C5023C9C5023C9C50000 /* date_time-modularize */;
			targetProxy = 2ADD8102ADD8102ADD810000 /* PBXContainerItemProxy */;
		};
		2ADE4A02ADE4A02ADE4A0000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 241020024102002410200000 /* thread-modularize */;
			targetProxy = 2ADDFB02ADDFB02ADDFB0000 /* PBXContainerItemProxy */;
		};
		2ADEC302ADEC302ADEC30000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 245237024523702452370000 /* regex-modularize */;
			targetProxy = 2ADE7402ADE7402ADE740000 /* PBXContainerItemProxy */;
		};
		2ADF3502ADF3502ADF350000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 24B47E024B47E024B47E0000 /* algorithm-modularize */;
			targetProxy = 2ADEED02ADEED02ADEED0000 /* PBXContainerItemProxy */;
		};
		2ADFB602ADFB602ADFB60000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 24BC83024BC83024BC830000 /* range-modularize */;
			targetProxy = 2ADF6702ADF6702ADF670000 /* PBXContainerItemProxy */;
		};
		2AE02F02AE02F02AE02F0000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 24C485024C485024C4850000 /* foreach-modularize */;
			targetProxy = 2ADFE002ADFE002ADFE00000 /* PBXContainerItemProxy */;
		};
		2AE0AD02AE0AD02AE0AD0000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 24CC87024CC87024CC870000 /* array-modularize */;
			targetProxy = 2AD8D402AD8D402AD8D40000 /* PBXContainerItemProxy */;
		};
		2AE12302AE12302AE1230000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 24D48F024D48F024D48F0000 /* functional-modularize */;
			targetProxy = 2AE0DC02AE0DC02AE0DC0000 /* PBXContainerItemProxy */;
		};
		2AE19C02AE19C02AE19C0000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 24DCA4024DCA4024DCA40000 /* unordered-modularize */;
			targetProxy = 2AE15402AE15402AE1540000 /* PBXContainerItemProxy */;
		};
		2AE21D02AE21D02AE21D0000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 24E4B2024E4B2024E4B20000 /* pool-modularize */;
			targetProxy = 2AE1CE02AE1CE02AE1CE0000 /* PBXContainerItemProxy */;
		};
		2AE29602AE29602AE2960000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 24ECB9024ECB9024ECB90000 /* spirit-modularize */;
			targetProxy = 2AE24702AE24702AE2470000 /* PBXContainerItemProxy */;
		};
		2AE30F02AE30F02AE30F0000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 24F4BA024F4BA024F4BA0000 /* variant-modularize */;
			targetProxy = 2AE2C002AE2C002AE2C00000 /* PBXContainerItemProxy */;
		};
		2AE38102AE38102AE3810000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 2500C602500C602500C60000 /* serialization-modularize */;
			targetProxy = 2AE33902AE33902AE3390000 /* PBXContainerItemProxy */;
		};
		2AE40202AE40202AE4020000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 25BE68025BE68025BE680000 /* format-modularize */;
			targetProxy = 2AE3B302AE3B302AE3B30000 /* PBXContainerItemProxy */;
		};
		2AE47B02AE47B02AE47B0000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 25C66D025C66D025C66D0000 /* math-modularize */;
			targetProxy = 2AE42C02AE42C02AE42C0000 /* PBXContainerItemProxy */;
		};
		2AE4ED02AE4ED02AE4ED0000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 25CE6D025CE6D025CE6D0000 /* multi_index-modularize */;
			targetProxy = 2AE4A502AE4A502AE4A50000 /* PBXContainerItemProxy */;
		};
		2AE56E02AE56E02AE56E0000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 25D673025D673025D6730000 /* any-modularize */;
			targetProxy = 2AE51F02AE51F02AE51F0000 /* PBXContainerItemProxy */;
		};
		2AE5E702AE5E702AE5E70000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 25DE7F025DE7F025DE7F0000 /* random-modularize */;
			targetProxy = 2AE59802AE59802AE5980000 /* PBXContainerItemProxy */;
		};
		2AE66002AE66002AE6600000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 25E68D025E68D025E68D0000 /* graph-modularize */;
			targetProxy = 2AE61102AE61102AE6110000 /* PBXContainerItemProxy */;
		};
		2AE6D902AE6D902AE6D90000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 262829026282902628290000 /* Python-modularize */;
			targetProxy = 2AE68A02AE68A02AE68A0000 /* PBXContainerItemProxy */;
		};
		2AE74B02AE74B02AE74B0000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 26A399026A399026A3990000 /* parameter-modularize */;
			targetProxy = 2AE70302AE70302AE7030000 /* PBXContainerItemProxy */;
		};
		2AE7C502AE7C502AE7C50000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 26AC2F026AC2F026AC2F0000 /* accumulators-modularize */;
			targetProxy = 2AE77D02AE77D02AE77D0000 /* PBXContainerItemProxy */;
		};
		2AE84602AE84602AE8460000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 26BF35026BF35026BF350000 /* system-modularize */;
			targetProxy = 2AE7F702AE7F702AE7F70000 /* PBXContainerItemProxy */;
		};
		2AE8BF02AE8BF02AE8BF0000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 2700CC02700CC02700CC0000 /* asio-modularize */;
			targetProxy = 2AE87002AE87002AE8700000 /* PBXContainerItemProxy */;
		};
		2AE93102AE93102AE9310000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 2708C902708C902708C90000 /* circular_buffer-modularize */;
			targetProxy = 2AE8E902AE8E902AE8E90000 /* PBXContainerItemProxy */;
		};
		2AE9AB02AE9AB02AE9AB0000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 2710D202710D202710D20000 /* ptr_container-modularize */;
			targetProxy = 2AE96302AE96302AE9630000 /* PBXContainerItemProxy */;
		};
		2AEA2C02AEA2C02AEA2C0000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 2718DD02718DD02718DD0000 /* assign-modularize */;
			targetProxy = 2AE9DD02AE9DD02AE9DD0000 /* PBXContainerItemProxy */;
		};
		2AEAA502AEAA502AEAA50000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 2720E202720E202720E20000 /* bimap-modularize */;
			targetProxy = 2AEA5602AEA5602AEA560000 /* PBXContainerItemProxy */;
		};
		2AEB1702AEB1702AEB170000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 2728EB02728EB02728EB0000 /* compatibility-modularize */;
			targetProxy = 2AEACF02AEACF02AEACF0000 /* PBXContainerItemProxy */;
		};
		2AEB9802AEB9802AEB980000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 273130027313002731300000 /* crc-modularize */;
			targetProxy = 2AEB4902AEB4902AEB490000 /* PBXContainerItemProxy */;
		};
		2AEC1102AEC1102AEC110000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 273939027393902739390000 /* timer-modularize */;
			targetProxy = 2AEBC202AEBC202AEBC20000 /* PBXContainerItemProxy */;
		};
		2AEC8A02AEC8A02AEC8A0000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 27418A027418A027418A0000 /* test-modularize */;
			targetProxy = 2AEC3B02AEC3B02AEC3B0000 /* PBXContainerItemProxy */;
		};
		2AECFC02AECFC02AECFC0000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 2814D802814D802814D80000 /* dynamic_bitset-modularize */;
			targetProxy = 2AECB402AECB402AECB40000 /* PBXContainerItemProxy */;
		};
		2AED7602AED7602AED760000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 281CEE0281CEE0281CEE0000 /* filesystem-modularize */;
			targetProxy = 2AED2E02AED2E02AED2E0000 /* PBXContainerItemProxy */;
		};
		2AEDF002AEDF002AEDF00000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 286185028618502861850000 /* interprocess-modularize */;
			targetProxy = 2AEDA802AEDA802AEDA80000 /* PBXContainerItemProxy */;
		};
		2AEE6A02AEE6A02AEE6A0000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 286991028699102869910000 /* flyweight-modularize */;
			targetProxy = 2AEE2202AEE2202AEE220000 /* PBXContainerItemProxy */;
		};
		2AEEEB02AEEEB02AEEEB0000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 287196028719602871960000 /* gil-modularize */;
			targetProxy = 2AEE9C02AEE9C02AEE9C0000 /* PBXContainerItemProxy */;
		};
		2AEF6402AEF6402AEF640000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 2879AC02879AC02879AC0000 /* mpi-modularize */;
			targetProxy = 2AEF1502AEF1502AEF150000 /* PBXContainerItemProxy */;
		};
		2AEFC702AEFC702AEFC70000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 291AD10291AD10291AD10000 /* iostreams-modularize */;
			targetProxy = 2AEF8E02AEF8E02AEF8E0000 /* PBXContainerItemProxy */;
		};
		2AF04802AF04802AF0480000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 295F430295F430295F430000 /* lambda-modularize */;
			targetProxy = 2AEFF902AEFF902AEFF90000 /* PBXContainerItemProxy */;
		};
		2AF0B902AF0B902AF0B90000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 29674D029674D029674D0000 /* multi_array-modularize */;
			targetProxy = 2AF07202AF07202AF0720000 /* PBXContainerItemProxy */;
		};
		2AF13302AF13302AF1330000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 296F6B0296F6B0296F6B0000 /* program_options-modularize */;
			targetProxy = 2AF0EC02AF0EC02AF0EC0000 /* PBXContainerItemProxy */;
		};
		2AF1B502AF1B502AF1B50000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 29C20B029C20B029C20B0000 /* rational-modularize */;
			targetProxy = 2AF16602AF16602AF1660000 /* PBXContainerItemProxy */;
		};
		2AF22E02AF22E02AF22E0000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 29CA16029CA16029CA160000 /* signals-modularize */;
			targetProxy = 2AF1DF02AF1DF02AF1DF0000 /* PBXContainerItemProxy */;
		};
		2AF2A702AF2A702AF2A70000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 2A14D202A14D202A14D20000 /* signals2-modularize */;
			targetProxy = 2AF25802AF25802AF2580000 /* PBXContainerItemProxy */;
		};
		2AF31802AF31802AF3180000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 2A1CD602A1CD602A1CD60000 /* statechart-modularize */;
			targetProxy = 2AF2D102AF2D102AF2D10000 /* PBXContainerItemProxy */;
		};
		2AF39A02AF39A02AF39A0000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 2A24DD02A24DD02A24DD0000 /* tr1-modularize */;
			targetProxy = 2AF34B02AF34B02AF34B0000 /* PBXContainerItemProxy */;
		};
		2AF41302AF41302AF4130000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 2A2CE402A2CE402A2CE40000 /* units-modularize */;
			targetProxy = 2AF3C402AF3C402AF3C40000 /* PBXContainerItemProxy */;
		};
		2AF48C02AF48C02AF48C0000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 2A34F202A34F202A34F20000 /* wave-modularize */;
			targetProxy = 2AF43D02AF43D02AF43D0000 /* PBXContainerItemProxy */;
		};
/* End PBXTargetDependency section */

/* Begin XCBuildConfiguration section */
		22A4EA022A4EA022A4EA0000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = (
					x86_64,
					i386,
				);
				SDKROOT = /Developer/SDKs/MacOSX10.5.sdk;
			};
			name = Debug;
		};
		22A505022A505022A5050000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
			};
			name = Release;
		};
		22A52A022A52A022A52A0000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
			};
			name = MinSizeRel;
		};
		22A541022A541022A5410000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
			};
			name = RelWithDebInfo;
		};
		22A78D022A78D022A78D0000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = ALL_BUILD;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		22A8B8022A8B8022A8B80000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = ALL_BUILD;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		22A9D7022A9D7022A9D70000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = ALL_BUILD;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		22AAF2022AAF2022AAF20000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = ALL_BUILD;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		22AFB1022AFB1022AFB10000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = Continuous;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		22B0D9022B0D9022B0D90000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = Continuous;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		22B1F4022B1F4022B1F40000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = Continuous;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		22B30F022B30F022B30F0000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = Continuous;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		22B761022B761022B7610000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = Experimental;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		22B88C022B88C022B88C0000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = Experimental;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		22B9AB022B9AB022B9AB0000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = Experimental;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		22BAC6022BAC6022BAC60000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = Experimental;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		22BF12022BF12022BF120000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = Nightly;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		22C03D022C03D022C03D0000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = Nightly;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		22C15C022C15C022C15C0000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = Nightly;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		22C277022C277022C2770000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = Nightly;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		22C6CE022C6CE022C6CE0000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = NightlyMemoryCheck;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		22C7F4022C7F4022C7F40000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = NightlyMemoryCheck;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		22C90D022C90D022C90D0000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = NightlyMemoryCheck;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		22CA26022CA26022CA260000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = NightlyMemoryCheck;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		22CE79022CE79022CE790000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = RUN_TESTS;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		22CFA4022CFA4022CFA40000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = RUN_TESTS;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		22D0C3022D0C3022D0C30000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = RUN_TESTS;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		22D1DE022D1DE022D1DE0000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = RUN_TESTS;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		22D5F2022D5F2022D5F20000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = install;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		22D71A022D71A022D71A0000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = install;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		22D835022D835022D8350000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = install;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		22D950022D950022D9500000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = install;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		22DD61022DD61022DD610000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = modularize;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		22DE8C022DE8C022DE8C0000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = modularize;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		22DFAB022DFAB022DFAB0000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = modularize;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		22E0C6022E0C6022E0C60000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = modularize;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		22E519022E519022E5190000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = package;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		22E645022E645022E6450000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = package;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		22E760022E760022E7600000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = package;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		22E87B022E87B022E87B0000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = package;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		22EC98022EC98022EC980000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "preprocessor-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		22EDC0022EDC0022EDC00000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "preprocessor-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		22EEE1022EEE1022EEE10000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "preprocessor-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		22F000022F000022F0000000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "preprocessor-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		22F4DD022F4DD022F4DD0000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "concept_check-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		22F56E022F56E022F56E0000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "concept_check-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		22F69B022F69B022F69B0000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "concept_check-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		22F7C1022F7C1022F7C10000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "concept_check-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		230137023013702301370000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "property_map-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		23026A023026A023026A0000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "property_map-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		230396023039602303960000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "property_map-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		2304C202304C202304C20000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "property_map-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		2309BB02309BB02309BB0000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "config-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		230AE10230AE10230AE10000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "config-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		230C010230C010230C010000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "config-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		230D210230D210230D210000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "config-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		2311FB02311FB02311FB0000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "mpl-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		231320023132002313200000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "mpl-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		231436023143602314360000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "mpl-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		23154C023154C023154C0000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "mpl-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		231A0C0231A0C0231A0C0000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "type_traits-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		231B350231B350231B350000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "type_traits-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		231C4C0231C4C0231C4C0000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "type_traits-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		231D610231D610231D610000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "type_traits-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		232221023222102322210000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "function-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		232346023234602323460000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "function-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		23245C023245C023245C0000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "function-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		232572023257202325720000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "function-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		232A300232A300232A300000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "iterator-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		232B550232B550232B550000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "iterator-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		232C6B0232C6B0232C6B0000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "iterator-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		232D810232D810232D810000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "iterator-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		233242023324202332420000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "smart_ptr-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		233365023336502333650000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "smart_ptr-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		23347C023347C023347C0000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "smart_ptr-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		233591023359102335910000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "smart_ptr-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		233A4E0233A4E0233A4E0000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "exception-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		233B770233B770233B770000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "exception-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		233C8E0233C8E0233C8E0000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "exception-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		233DA30233DA30233DA30000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "exception-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		234134023413402341340000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "utility-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		234378023437802343780000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "utility-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		234496023449602344960000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "utility-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		2345AA02345AA02345AA0000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "utility-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		234A660234A660234A660000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "integer-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		234B8B0234B8B0234B8B0000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "integer-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		234C9F0234C9F0234C9F0000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "integer-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		234DB30234DB30234DB30000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "integer-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		23526D023526D023526D0000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "detail-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		235393023539302353930000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "detail-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		2354A702354A702354A70000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "detail-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		2355BB02355BB02355BB0000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "detail-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		235A770235A770235A770000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "static_assert-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		235B9F0235B9F0235B9F0000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "static_assert-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		235CB60235CB60235CB60000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "static_assert-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		235DCB0235DCB0235DCB0000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "static_assert-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		236286023628602362860000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "tuple-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		2363AC02363AC02363AC0000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "tuple-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		2364C202364C202364C20000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "tuple-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		2365D802365D802365D80000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "tuple-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		236A950236A950236A950000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "function_types-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		236BBD0236BBD0236BBD0000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "function_types-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		236CD40236CD40236CD40000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "function_types-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		236DEB0236DEB0236DEB0000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "function_types-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		2372A902372A902372A90000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "fusion-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		2373C202373C202373C20000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "fusion-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		2374D402374D402374D40000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "fusion-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		2375E602375E602375E60000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "fusion-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		237AAA0237AAA0237AAA0000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "typeof-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		237BCF0237BCF0237BCF0000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "typeof-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		237CE40237CE40237CE40000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "typeof-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		237DF90237DF90237DF90000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "typeof-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		2382B302382B302382B30000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "proto-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		2383CC02383CC02383CC0000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "proto-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		2384E002384E002384E00000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "proto-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		2385F402385F402385F40000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "proto-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		238AB80238AB80238AB80000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "intrusive-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		238BE00238BE00238BE00000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "intrusive-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		238CF70238CF70238CF70000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "intrusive-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		238E0E0238E0E0238E0E0000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "intrusive-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		2392C802392C802392C80000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "logic-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		2393ED02393ED02393ED0000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "logic-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		2394FD02394FD02394FD0000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "logic-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		239616023961602396160000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "logic-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		239AD00239AD00239AD00000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "numeric-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		239BE90239BE90239BE90000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "numeric-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		239CFB0239CFB0239CFB0000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "numeric-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		239E0D0239E0D0239E0D0000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "numeric-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		23A2D4023A2D4023A2D40000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "xpressive-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		23A3B4023A3B4023A3B40000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "xpressive-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		23A4C9023A4C9023A4C90000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "xpressive-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		23A643023A643023A6430000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "xpressive-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		23AADF023AADF023AADF0000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "optional-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		23AC03023AC03023AC030000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "optional-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		23AD18023AD18023AD180000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "optional-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		23AE2D023AE2D023AE2D0000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "optional-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		23B2F9023B2F9023B2F90000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "tokenizer-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		23B421023B421023B4210000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "tokenizer-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		23B538023B538023B5380000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "tokenizer-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		23B64F023B64F023B64F0000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "tokenizer-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		23BB0A023BB0A023BB0A0000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "io-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		23BC28023BC28023BC280000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "io-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		23BD44023BD44023BD440000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "io-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		23BE58023BE58023BE580000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "io-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		23C2E0023C2E0023C2E00000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "bind-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		23C440023C440023C4400000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "bind-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		23C555023C555023C5550000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "bind-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		23C66A023C66A023C66A0000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "bind-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		23CB28023CB28023CB280000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "date_time-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		23CC44023CC44023CC440000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "date_time-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		23CD57023CD57023CD570000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "date_time-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		23CE6A023CE6A023CE6A0000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "date_time-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		23D32E023D32E023D32E0000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_DATE_TIME_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = boost_date_time;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		23D444023D444023D4440000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_DATE_TIME_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = boost_date_time;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		23D557023D557023D5570000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_DATE_TIME_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = boost_date_time;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		23D669023D669023D6690000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_DATE_TIME_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = boost_date_time;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		23DE49023DE49023DE490000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DYLIB_COMPATIBILITY_VERSION = 1.0.0;
				DYLIB_CURRENT_VERSION = 1.0.0;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_4)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'boost_date_time_mt_shared_EXPORTS'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_4 = "'BOOST_DATE_TIME_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/Debug;
				LIBRARY_SEARCH_PATHS = "";
				LIBRARY_STYLE = DYNAMIC;
				MACH_O_TYPE = mh_dylib;
				OTHER_CFLAGS = (
					"-fPIC",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-fPIC",
				);
				OTHER_LDFLAGS = (
					"-dynamiclib",
					"-headerpad_max_install_names",
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_date_time-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		23DE79023DE79023DE790000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DYLIB_COMPATIBILITY_VERSION = 1.0.0;
				DYLIB_CURRENT_VERSION = 1.0.0;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_4)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'boost_date_time_mt_shared_EXPORTS'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_4 = "'BOOST_DATE_TIME_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/Release;
				LIBRARY_SEARCH_PATHS = "";
				LIBRARY_STYLE = DYNAMIC;
				MACH_O_TYPE = mh_dylib;
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-fPIC",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-fPIC",
				);
				OTHER_LDFLAGS = (
					"-dynamiclib",
					"-headerpad_max_install_names",
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_date_time-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		23E19E023E19E023E19E0000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DYLIB_COMPATIBILITY_VERSION = 1.0.0;
				DYLIB_CURRENT_VERSION = 1.0.0;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_4)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'boost_date_time_mt_shared_EXPORTS'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_4 = "'BOOST_DATE_TIME_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/MinSizeRel;
				LIBRARY_SEARCH_PATHS = "";
				LIBRARY_STYLE = DYNAMIC;
				MACH_O_TYPE = mh_dylib;
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-fPIC",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-fPIC",
				);
				OTHER_LDFLAGS = (
					"-dynamiclib",
					"-headerpad_max_install_names",
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_date_time-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		23E33D023E33D023E33D0000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DYLIB_COMPATIBILITY_VERSION = 1.0.0;
				DYLIB_CURRENT_VERSION = 1.0.0;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_4)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'boost_date_time_mt_shared_EXPORTS'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_4 = "'BOOST_DATE_TIME_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/RelWithDebInfo;
				LIBRARY_SEARCH_PATHS = "";
				LIBRARY_STYLE = DYNAMIC;
				MACH_O_TYPE = mh_dylib;
				OTHER_CFLAGS = (
					"-fPIC",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-fPIC",
				);
				OTHER_LDFLAGS = (
					"-dynamiclib",
					"-headerpad_max_install_names",
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_date_time-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		23EB3A023EB3A023EB3A0000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DYLIB_COMPATIBILITY_VERSION = 1.0.0;
				DYLIB_CURRENT_VERSION = 1.0.0;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_4)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'boost_date_time_mt_shared_debug_EXPORTS'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_4 = "'BOOST_DATE_TIME_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/Debug;
				LIBRARY_SEARCH_PATHS = "";
				LIBRARY_STYLE = DYNAMIC;
				MACH_O_TYPE = mh_dylib;
				OTHER_CFLAGS = (
					"-fPIC",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-fPIC",
				);
				OTHER_LDFLAGS = (
					"-dynamiclib",
					"-headerpad_max_install_names",
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_date_time-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		23EB73023EB73023EB730000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DYLIB_COMPATIBILITY_VERSION = 1.0.0;
				DYLIB_CURRENT_VERSION = 1.0.0;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_4)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'boost_date_time_mt_shared_debug_EXPORTS'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_4 = "'BOOST_DATE_TIME_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/Release;
				LIBRARY_SEARCH_PATHS = "";
				LIBRARY_STYLE = DYNAMIC;
				MACH_O_TYPE = mh_dylib;
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-fPIC",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-fPIC",
				);
				OTHER_LDFLAGS = (
					"-dynamiclib",
					"-headerpad_max_install_names",
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_date_time-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		23EE90023EE90023EE900000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DYLIB_COMPATIBILITY_VERSION = 1.0.0;
				DYLIB_CURRENT_VERSION = 1.0.0;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_4)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'boost_date_time_mt_shared_debug_EXPORTS'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_4 = "'BOOST_DATE_TIME_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/MinSizeRel;
				LIBRARY_SEARCH_PATHS = "";
				LIBRARY_STYLE = DYNAMIC;
				MACH_O_TYPE = mh_dylib;
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-fPIC",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-fPIC",
				);
				OTHER_LDFLAGS = (
					"-dynamiclib",
					"-headerpad_max_install_names",
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_date_time-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		23EEA8023EEA8023EEA80000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DYLIB_COMPATIBILITY_VERSION = 1.0.0;
				DYLIB_CURRENT_VERSION = 1.0.0;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_4)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'boost_date_time_mt_shared_debug_EXPORTS'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_4 = "'BOOST_DATE_TIME_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/RelWithDebInfo;
				LIBRARY_SEARCH_PATHS = "";
				LIBRARY_STYLE = DYNAMIC;
				MACH_O_TYPE = mh_dylib;
				OTHER_CFLAGS = (
					"-fPIC",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-fPIC",
				);
				OTHER_LDFLAGS = (
					"-dynamiclib",
					"-headerpad_max_install_names",
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_date_time-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		23F838023F838023F8380000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_DATE_TIME_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_date_time-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		23F9AE023F9AE023F9AE0000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_DATE_TIME_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_date_time-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		23FB17023FB17023FB170000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_DATE_TIME_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_date_time-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		240078024007802400780000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_DATE_TIME_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_date_time-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		24080B024080B024080B0000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_DATE_TIME_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_date_time-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		240982024098202409820000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_DATE_TIME_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_date_time-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		240AEE0240AEE0240AEE0000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_DATE_TIME_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_date_time-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		240C5A0240C5A0240C5A0000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_DATE_TIME_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_date_time-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		241184024118402411840000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "thread-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		24129D024129D024129D0000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "thread-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		2413AF02413AF02413AF0000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "thread-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		2414C102414C102414C10000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "thread-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		241981024198102419810000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = boost_thread;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		241A970241A970241A970000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = boost_thread;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		241BA90241BA90241BA90000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = boost_thread;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		241CBB0241CBB0241CBB0000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = boost_thread;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		242490024249002424900000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DYLIB_COMPATIBILITY_VERSION = 1.0.0;
				DYLIB_CURRENT_VERSION = 1.0.0;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'boost_thread_mt_shared_EXPORTS'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/Debug;
				LIBRARY_SEARCH_PATHS = "";
				LIBRARY_STYLE = DYNAMIC;
				MACH_O_TYPE = mh_dylib;
				OTHER_CFLAGS = (
					"-fPIC",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-fPIC",
				);
				OTHER_LDFLAGS = (
					"-dynamiclib",
					"-headerpad_max_install_names",
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_thread-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		242640024264002426400000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DYLIB_COMPATIBILITY_VERSION = 1.0.0;
				DYLIB_CURRENT_VERSION = 1.0.0;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'boost_thread_mt_shared_EXPORTS'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/Release;
				LIBRARY_SEARCH_PATHS = "";
				LIBRARY_STYLE = DYNAMIC;
				MACH_O_TYPE = mh_dylib;
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-fPIC",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-fPIC",
				);
				OTHER_LDFLAGS = (
					"-dynamiclib",
					"-headerpad_max_install_names",
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_thread-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		2427DE02427DE02427DE0000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DYLIB_COMPATIBILITY_VERSION = 1.0.0;
				DYLIB_CURRENT_VERSION = 1.0.0;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'boost_thread_mt_shared_EXPORTS'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/MinSizeRel;
				LIBRARY_SEARCH_PATHS = "";
				LIBRARY_STYLE = DYNAMIC;
				MACH_O_TYPE = mh_dylib;
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-fPIC",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-fPIC",
				);
				OTHER_LDFLAGS = (
					"-dynamiclib",
					"-headerpad_max_install_names",
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_thread-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		242979024297902429790000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DYLIB_COMPATIBILITY_VERSION = 1.0.0;
				DYLIB_CURRENT_VERSION = 1.0.0;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'boost_thread_mt_shared_EXPORTS'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/RelWithDebInfo;
				LIBRARY_SEARCH_PATHS = "";
				LIBRARY_STYLE = DYNAMIC;
				MACH_O_TYPE = mh_dylib;
				OTHER_CFLAGS = (
					"-fPIC",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-fPIC",
				);
				OTHER_LDFLAGS = (
					"-dynamiclib",
					"-headerpad_max_install_names",
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_thread-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		24316F024316F024316F0000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DYLIB_COMPATIBILITY_VERSION = 1.0.0;
				DYLIB_CURRENT_VERSION = 1.0.0;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'boost_thread_mt_shared_debug_EXPORTS'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/Debug;
				LIBRARY_SEARCH_PATHS = "";
				LIBRARY_STYLE = DYNAMIC;
				MACH_O_TYPE = mh_dylib;
				OTHER_CFLAGS = (
					"-fPIC",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-fPIC",
				);
				OTHER_LDFLAGS = (
					"-dynamiclib",
					"-headerpad_max_install_names",
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_thread-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		2431A702431A702431A70000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DYLIB_COMPATIBILITY_VERSION = 1.0.0;
				DYLIB_CURRENT_VERSION = 1.0.0;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'boost_thread_mt_shared_debug_EXPORTS'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/Release;
				LIBRARY_SEARCH_PATHS = "";
				LIBRARY_STYLE = DYNAMIC;
				MACH_O_TYPE = mh_dylib;
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-fPIC",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-fPIC",
				);
				OTHER_LDFLAGS = (
					"-dynamiclib",
					"-headerpad_max_install_names",
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_thread-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		2434C102434C102434C10000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DYLIB_COMPATIBILITY_VERSION = 1.0.0;
				DYLIB_CURRENT_VERSION = 1.0.0;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'boost_thread_mt_shared_debug_EXPORTS'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/MinSizeRel;
				LIBRARY_SEARCH_PATHS = "";
				LIBRARY_STYLE = DYNAMIC;
				MACH_O_TYPE = mh_dylib;
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-fPIC",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-fPIC",
				);
				OTHER_LDFLAGS = (
					"-dynamiclib",
					"-headerpad_max_install_names",
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_thread-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		24365E024365E024365E0000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DYLIB_COMPATIBILITY_VERSION = 1.0.0;
				DYLIB_CURRENT_VERSION = 1.0.0;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'boost_thread_mt_shared_debug_EXPORTS'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/RelWithDebInfo;
				LIBRARY_SEARCH_PATHS = "";
				LIBRARY_STYLE = DYNAMIC;
				MACH_O_TYPE = mh_dylib;
				OTHER_CFLAGS = (
					"-fPIC",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-fPIC",
				);
				OTHER_LDFLAGS = (
					"-dynamiclib",
					"-headerpad_max_install_names",
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_thread-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		243E5A0243E5A0243E5A0000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_thread-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		243E920243E920243E920000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_thread-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		244140024414002441400000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_thread-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		2442AA02442AA02442AA0000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_thread-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		244A340244A340244A340000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_thread-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		244BA90244BA90244BA90000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_thread-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		244D120244D120244D120000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_thread-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		244E7D0244E7D0244E7D0000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_thread-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		245399024539902453990000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "regex-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		2454B202454B202454B20000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "regex-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		2455C602455C602455C60000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "regex-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		2456D802456D802456D80000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "regex-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		245B940245B940245B940000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_HAS_ICU=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/opt/local/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = boost_regex;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		245CAF0245CAF0245CAF0000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_HAS_ICU=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/opt/local/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = boost_regex;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		245DC40245DC40245DC40000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_HAS_ICU=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/opt/local/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = boost_regex;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		245EDD0245EDD0245EDD0000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_HAS_ICU=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/opt/local/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = boost_regex;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		247102024710202471020000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DYLIB_COMPATIBILITY_VERSION = 1.0.0;
				DYLIB_CURRENT_VERSION = 1.0.0;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_4)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'boost_regex_mt_shared_EXPORTS'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_4 = "'BOOST_HAS_ICU=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/opt/local/include,
				);
				INSTALL_PATH = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/Debug;
				LIBRARY_SEARCH_PATHS = "";
				LIBRARY_STYLE = DYNAMIC;
				MACH_O_TYPE = mh_dylib;
				OTHER_CFLAGS = (
					"-fPIC",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-fPIC",
				);
				OTHER_LDFLAGS = (
					"-dynamiclib",
					"-headerpad_max_install_names",
					/opt/local/lib/libicuuc.dylib,
					/opt/local/lib/libicui18n.dylib,
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_regex-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		2472B102472B102472B10000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DYLIB_COMPATIBILITY_VERSION = 1.0.0;
				DYLIB_CURRENT_VERSION = 1.0.0;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_4)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'boost_regex_mt_shared_EXPORTS'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_4 = "'BOOST_HAS_ICU=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/opt/local/include,
				);
				INSTALL_PATH = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/Release;
				LIBRARY_SEARCH_PATHS = "";
				LIBRARY_STYLE = DYNAMIC;
				MACH_O_TYPE = mh_dylib;
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-fPIC",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-fPIC",
				);
				OTHER_LDFLAGS = (
					"-dynamiclib",
					"-headerpad_max_install_names",
					/opt/local/lib/libicuuc.dylib,
					/opt/local/lib/libicui18n.dylib,
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_regex-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		247451024745102474510000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DYLIB_COMPATIBILITY_VERSION = 1.0.0;
				DYLIB_CURRENT_VERSION = 1.0.0;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_4)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'boost_regex_mt_shared_EXPORTS'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_4 = "'BOOST_HAS_ICU=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/opt/local/include,
				);
				INSTALL_PATH = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/MinSizeRel;
				LIBRARY_SEARCH_PATHS = "";
				LIBRARY_STYLE = DYNAMIC;
				MACH_O_TYPE = mh_dylib;
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-fPIC",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-fPIC",
				);
				OTHER_LDFLAGS = (
					"-dynamiclib",
					"-headerpad_max_install_names",
					/opt/local/lib/libicuuc.dylib,
					/opt/local/lib/libicui18n.dylib,
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_regex-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		247471024747102474710000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DYLIB_COMPATIBILITY_VERSION = 1.0.0;
				DYLIB_CURRENT_VERSION = 1.0.0;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_4)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'boost_regex_mt_shared_EXPORTS'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_4 = "'BOOST_HAS_ICU=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/opt/local/include,
				);
				INSTALL_PATH = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/RelWithDebInfo;
				LIBRARY_SEARCH_PATHS = "";
				LIBRARY_STYLE = DYNAMIC;
				MACH_O_TYPE = mh_dylib;
				OTHER_CFLAGS = (
					"-fPIC",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-fPIC",
				);
				OTHER_LDFLAGS = (
					"-dynamiclib",
					"-headerpad_max_install_names",
					/opt/local/lib/libicuuc.dylib,
					/opt/local/lib/libicui18n.dylib,
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_regex-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		248523024852302485230000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DYLIB_COMPATIBILITY_VERSION = 1.0.0;
				DYLIB_CURRENT_VERSION = 1.0.0;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_4)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'boost_regex_mt_shared_debug_EXPORTS'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_4 = "'BOOST_HAS_ICU=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/opt/local/include,
				);
				INSTALL_PATH = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/Debug;
				LIBRARY_SEARCH_PATHS = "";
				LIBRARY_STYLE = DYNAMIC;
				MACH_O_TYPE = mh_dylib;
				OTHER_CFLAGS = (
					"-fPIC",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-fPIC",
				);
				OTHER_LDFLAGS = (
					"-dynamiclib",
					"-headerpad_max_install_names",
					/opt/local/lib/libicuuc.dylib,
					/opt/local/lib/libicui18n.dylib,
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_regex-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		2486D702486D702486D70000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DYLIB_COMPATIBILITY_VERSION = 1.0.0;
				DYLIB_CURRENT_VERSION = 1.0.0;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_4)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'boost_regex_mt_shared_debug_EXPORTS'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_4 = "'BOOST_HAS_ICU=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/opt/local/include,
				);
				INSTALL_PATH = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/Release;
				LIBRARY_SEARCH_PATHS = "";
				LIBRARY_STYLE = DYNAMIC;
				MACH_O_TYPE = mh_dylib;
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-fPIC",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-fPIC",
				);
				OTHER_LDFLAGS = (
					"-dynamiclib",
					"-headerpad_max_install_names",
					/opt/local/lib/libicuuc.dylib,
					/opt/local/lib/libicui18n.dylib,
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_regex-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		248877024887702488770000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DYLIB_COMPATIBILITY_VERSION = 1.0.0;
				DYLIB_CURRENT_VERSION = 1.0.0;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_4)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'boost_regex_mt_shared_debug_EXPORTS'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_4 = "'BOOST_HAS_ICU=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/opt/local/include,
				);
				INSTALL_PATH = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/MinSizeRel;
				LIBRARY_SEARCH_PATHS = "";
				LIBRARY_STYLE = DYNAMIC;
				MACH_O_TYPE = mh_dylib;
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-fPIC",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-fPIC",
				);
				OTHER_LDFLAGS = (
					"-dynamiclib",
					"-headerpad_max_install_names",
					/opt/local/lib/libicuuc.dylib,
					/opt/local/lib/libicui18n.dylib,
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_regex-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		248A140248A140248A140000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DYLIB_COMPATIBILITY_VERSION = 1.0.0;
				DYLIB_CURRENT_VERSION = 1.0.0;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_4)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'boost_regex_mt_shared_debug_EXPORTS'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_4 = "'BOOST_HAS_ICU=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/opt/local/include,
				);
				INSTALL_PATH = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/RelWithDebInfo;
				LIBRARY_SEARCH_PATHS = "";
				LIBRARY_STYLE = DYNAMIC;
				MACH_O_TYPE = mh_dylib;
				OTHER_CFLAGS = (
					"-fPIC",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-fPIC",
				);
				OTHER_LDFLAGS = (
					"-dynamiclib",
					"-headerpad_max_install_names",
					/opt/local/lib/libicuuc.dylib,
					/opt/local/lib/libicui18n.dylib,
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_regex-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		24995D024995D024995D0000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_HAS_ICU=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/opt/local/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_regex-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		249AD10249AD10249AD10000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_HAS_ICU=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/opt/local/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_regex-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		249C3D0249C3D0249C3D0000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_HAS_ICU=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/opt/local/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_regex-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		249DA90249DA90249DA90000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_HAS_ICU=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/opt/local/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_regex-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		24AC6E024AC6E024AC6E0000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_HAS_ICU=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/opt/local/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_regex-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		24ADE8024ADE8024ADE80000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_HAS_ICU=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/opt/local/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_regex-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		24AF55024AF55024AF550000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_HAS_ICU=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/opt/local/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_regex-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		24B0C0024B0C0024B0C00000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_HAS_ICU=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/opt/local/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_regex-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		24B5E1024B5E1024B5E10000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "algorithm-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		24B6FC024B6FC024B6FC0000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "algorithm-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		24B80F024B80F024B80F0000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "algorithm-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		24B922024B922024B9220000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "algorithm-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		24BDE6024BDE6024BDE60000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "range-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		24BEFF024BEFF024BEFF0000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "range-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		24C013024C013024C0130000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "range-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		24C125024C125024C1250000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "range-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		24C5E6024C5E6024C5E60000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "foreach-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		24C6FF024C6FF024C6FF0000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "foreach-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		24C811024C811024C8110000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "foreach-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		24C923024C923024C9230000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "foreach-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		24CDE6024CDE6024CDE60000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "array-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		24CF0A024CF0A024CF0A0000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "array-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		24D01F024D01F024D01F0000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "array-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		24D134024D134024D1340000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "array-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		24D5F4024D5F4024D5F40000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "functional-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		24D71B024D71B024D71B0000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "functional-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		24D832024D832024D8320000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "functional-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		24D949024D949024D9490000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "functional-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		24DE07024DE07024DE070000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "unordered-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		24DF23024DF23024DF230000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "unordered-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		24E037024E037024E0370000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "unordered-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		24E14B024E14B024E14B0000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "unordered-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		24E5D8024E5D8024E5D80000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "pool-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		24E737024E737024E7370000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "pool-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		24E84C024E84C024E84C0000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "pool-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		24E961024E961024E9610000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "pool-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		24EE1D024EE1D024EE1D0000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "spirit-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		24EF36024EF36024EF360000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "spirit-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		24F048024F048024F0480000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "spirit-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		24F15A024F15A024F15A0000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "spirit-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		24F61F024F61F024F61F0000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "variant-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		24F743024F743024F7430000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "variant-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		24F858024F858024F8580000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "variant-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		24F96D024F96D024F96D0000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "variant-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		25022B025022B025022B0000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "serialization-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		250347025034702503470000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "serialization-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		25045A025045A025045A0000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "serialization-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		25056D025056D025056D0000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "serialization-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		250A340250A340250A340000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = boost_serialization;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		250B4E0250B4E0250B4E0000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = boost_serialization;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		250C640250C640250C640000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = boost_serialization;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		250D7C0250D7C0250D7C0000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = boost_serialization;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		2525C902525C902525C90000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DYLIB_COMPATIBILITY_VERSION = 1.0.0;
				DYLIB_CURRENT_VERSION = 1.0.0;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'boost_serialization_mt_shared_EXPORTS'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/Debug;
				LIBRARY_SEARCH_PATHS = "";
				LIBRARY_STYLE = DYNAMIC;
				MACH_O_TYPE = mh_dylib;
				OTHER_CFLAGS = (
					"-fPIC",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-fPIC",
				);
				OTHER_LDFLAGS = (
					"-dynamiclib",
					"-headerpad_max_install_names",
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_serialization-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		252604025260402526040000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DYLIB_COMPATIBILITY_VERSION = 1.0.0;
				DYLIB_CURRENT_VERSION = 1.0.0;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'boost_serialization_mt_shared_EXPORTS'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/Release;
				LIBRARY_SEARCH_PATHS = "";
				LIBRARY_STYLE = DYNAMIC;
				MACH_O_TYPE = mh_dylib;
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-fPIC",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-fPIC",
				);
				OTHER_LDFLAGS = (
					"-dynamiclib",
					"-headerpad_max_install_names",
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_serialization-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		252918025291802529180000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DYLIB_COMPATIBILITY_VERSION = 1.0.0;
				DYLIB_CURRENT_VERSION = 1.0.0;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'boost_serialization_mt_shared_EXPORTS'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/MinSizeRel;
				LIBRARY_SEARCH_PATHS = "";
				LIBRARY_STYLE = DYNAMIC;
				MACH_O_TYPE = mh_dylib;
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-fPIC",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-fPIC",
				);
				OTHER_LDFLAGS = (
					"-dynamiclib",
					"-headerpad_max_install_names",
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_serialization-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		252930025293002529300000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DYLIB_COMPATIBILITY_VERSION = 1.0.0;
				DYLIB_CURRENT_VERSION = 1.0.0;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'boost_serialization_mt_shared_EXPORTS'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/RelWithDebInfo;
				LIBRARY_SEARCH_PATHS = "";
				LIBRARY_STYLE = DYNAMIC;
				MACH_O_TYPE = mh_dylib;
				OTHER_CFLAGS = (
					"-fPIC",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-fPIC",
				);
				OTHER_LDFLAGS = (
					"-dynamiclib",
					"-headerpad_max_install_names",
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_serialization-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		253E660253E660253E660000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DYLIB_COMPATIBILITY_VERSION = 1.0.0;
				DYLIB_CURRENT_VERSION = 1.0.0;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'boost_serialization_mt_shared_debug_EXPORTS'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/Debug;
				LIBRARY_SEARCH_PATHS = "";
				LIBRARY_STYLE = DYNAMIC;
				MACH_O_TYPE = mh_dylib;
				OTHER_CFLAGS = (
					"-fPIC",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-fPIC",
				);
				OTHER_LDFLAGS = (
					"-dynamiclib",
					"-headerpad_max_install_names",
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_serialization-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		25401C025401C025401C0000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DYLIB_COMPATIBILITY_VERSION = 1.0.0;
				DYLIB_CURRENT_VERSION = 1.0.0;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'boost_serialization_mt_shared_debug_EXPORTS'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/Release;
				LIBRARY_SEARCH_PATHS = "";
				LIBRARY_STYLE = DYNAMIC;
				MACH_O_TYPE = mh_dylib;
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-fPIC",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-fPIC",
				);
				OTHER_LDFLAGS = (
					"-dynamiclib",
					"-headerpad_max_install_names",
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_serialization-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		254043025404302540430000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DYLIB_COMPATIBILITY_VERSION = 1.0.0;
				DYLIB_CURRENT_VERSION = 1.0.0;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'boost_serialization_mt_shared_debug_EXPORTS'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/MinSizeRel;
				LIBRARY_SEARCH_PATHS = "";
				LIBRARY_STYLE = DYNAMIC;
				MACH_O_TYPE = mh_dylib;
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-fPIC",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-fPIC",
				);
				OTHER_LDFLAGS = (
					"-dynamiclib",
					"-headerpad_max_install_names",
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_serialization-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		254358025435802543580000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DYLIB_COMPATIBILITY_VERSION = 1.0.0;
				DYLIB_CURRENT_VERSION = 1.0.0;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'boost_serialization_mt_shared_debug_EXPORTS'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/RelWithDebInfo;
				LIBRARY_SEARCH_PATHS = "";
				LIBRARY_STYLE = DYNAMIC;
				MACH_O_TYPE = mh_dylib;
				OTHER_CFLAGS = (
					"-fPIC",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-fPIC",
				);
				OTHER_LDFLAGS = (
					"-dynamiclib",
					"-headerpad_max_install_names",
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_serialization-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		2556E402556E402556E40000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_serialization-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		25571D025571D025571D0000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_serialization-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		2559C802559C802559C80000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_serialization-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		255B320255B320255B320000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_serialization-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		256E310256E310256E310000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_serialization-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		256E6A0256E6A0256E6A0000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_serialization-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		257117025711702571170000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_serialization-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		257281025728102572810000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_serialization-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		25778F025778F025778F0000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = boost_wserialization;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		2578B502578B502578B50000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = boost_wserialization;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		2579C802579C802579C80000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = boost_wserialization;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		257ADB0257ADB0257ADB0000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = boost_wserialization;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		258717025871702587170000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DYLIB_COMPATIBILITY_VERSION = 1.0.0;
				DYLIB_CURRENT_VERSION = 1.0.0;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'boost_wserialization_mt_shared_EXPORTS'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/Debug;
				LIBRARY_SEARCH_PATHS = "";
				LIBRARY_STYLE = DYNAMIC;
				MACH_O_TYPE = mh_dylib;
				OTHER_CFLAGS = (
					"-fPIC",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-fPIC",
				);
				OTHER_LDFLAGS = (
					"-dynamiclib",
					"-headerpad_max_install_names",
					"/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/Debug/libboost_serialization-mt.dylib",
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_wserialization-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		258752025875202587520000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DYLIB_COMPATIBILITY_VERSION = 1.0.0;
				DYLIB_CURRENT_VERSION = 1.0.0;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'boost_wserialization_mt_shared_EXPORTS'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/Release;
				LIBRARY_SEARCH_PATHS = "";
				LIBRARY_STYLE = DYNAMIC;
				MACH_O_TYPE = mh_dylib;
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-fPIC",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-fPIC",
				);
				OTHER_LDFLAGS = (
					"-dynamiclib",
					"-headerpad_max_install_names",
					"/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/Release/libboost_serialization-mt.dylib",
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_wserialization-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		2588E102588E102588E10000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DYLIB_COMPATIBILITY_VERSION = 1.0.0;
				DYLIB_CURRENT_VERSION = 1.0.0;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'boost_wserialization_mt_shared_EXPORTS'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/MinSizeRel;
				LIBRARY_SEARCH_PATHS = "";
				LIBRARY_STYLE = DYNAMIC;
				MACH_O_TYPE = mh_dylib;
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-fPIC",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-fPIC",
				);
				OTHER_LDFLAGS = (
					"-dynamiclib",
					"-headerpad_max_install_names",
					"/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/MinSizeRel/libboost_serialization-mt.dylib",
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_wserialization-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		258BFE0258BFE0258BFE0000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DYLIB_COMPATIBILITY_VERSION = 1.0.0;
				DYLIB_CURRENT_VERSION = 1.0.0;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'boost_wserialization_mt_shared_EXPORTS'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/RelWithDebInfo;
				LIBRARY_SEARCH_PATHS = "";
				LIBRARY_STYLE = DYNAMIC;
				MACH_O_TYPE = mh_dylib;
				OTHER_CFLAGS = (
					"-fPIC",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-fPIC",
				);
				OTHER_LDFLAGS = (
					"-dynamiclib",
					"-headerpad_max_install_names",
					"/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/RelWithDebInfo/libboost_serialization-mt.dylib",
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_wserialization-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		25974D025974D025974D0000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DYLIB_COMPATIBILITY_VERSION = 1.0.0;
				DYLIB_CURRENT_VERSION = 1.0.0;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'boost_wserialization_mt_shared_debug_EXPORTS'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/Debug;
				LIBRARY_SEARCH_PATHS = "";
				LIBRARY_STYLE = DYNAMIC;
				MACH_O_TYPE = mh_dylib;
				OTHER_CFLAGS = (
					"-fPIC",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-fPIC",
				);
				OTHER_LDFLAGS = (
					"-dynamiclib",
					"-headerpad_max_install_names",
					"/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/Debug/libboost_serialization-mt-d.dylib",
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_wserialization-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		259787025978702597870000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DYLIB_COMPATIBILITY_VERSION = 1.0.0;
				DYLIB_CURRENT_VERSION = 1.0.0;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'boost_wserialization_mt_shared_debug_EXPORTS'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/Release;
				LIBRARY_SEARCH_PATHS = "";
				LIBRARY_STYLE = DYNAMIC;
				MACH_O_TYPE = mh_dylib;
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-fPIC",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-fPIC",
				);
				OTHER_LDFLAGS = (
					"-dynamiclib",
					"-headerpad_max_install_names",
					"/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/Release/libboost_serialization-mt-d.dylib",
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_wserialization-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		259929025992902599290000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DYLIB_COMPATIBILITY_VERSION = 1.0.0;
				DYLIB_CURRENT_VERSION = 1.0.0;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'boost_wserialization_mt_shared_debug_EXPORTS'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/MinSizeRel;
				LIBRARY_SEARCH_PATHS = "";
				LIBRARY_STYLE = DYNAMIC;
				MACH_O_TYPE = mh_dylib;
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-fPIC",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-fPIC",
				);
				OTHER_LDFLAGS = (
					"-dynamiclib",
					"-headerpad_max_install_names",
					"/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/MinSizeRel/libboost_serialization-mt-d.dylib",
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_wserialization-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		259AB40259AB40259AB40000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DYLIB_COMPATIBILITY_VERSION = 1.0.0;
				DYLIB_CURRENT_VERSION = 1.0.0;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'boost_wserialization_mt_shared_debug_EXPORTS'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/RelWithDebInfo;
				LIBRARY_SEARCH_PATHS = "";
				LIBRARY_STYLE = DYNAMIC;
				MACH_O_TYPE = mh_dylib;
				OTHER_CFLAGS = (
					"-fPIC",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-fPIC",
				);
				OTHER_LDFLAGS = (
					"-dynamiclib",
					"-headerpad_max_install_names",
					"/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/RelWithDebInfo/libboost_serialization-mt-d.dylib",
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_wserialization-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		25A757025A757025A7570000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_wserialization-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		25A8CE025A8CE025A8CE0000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_wserialization-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		25AA3B025AA3B025AA3B0000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_wserialization-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		25ABA5025ABA5025ABA50000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_wserialization-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		25B65D025B65D025B65D0000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_wserialization-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		25B696025B696025B6960000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_wserialization-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		25B943025B943025B9430000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_wserialization-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		25BAAD025BAAD025BAAD0000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_wserialization-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		25BFCC025BFCC025BFCC0000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "format-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		25C0E5025C0E5025C0E50000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "format-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		25C1F7025C1F7025C1F70000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "format-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		25C309025C309025C3090000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "format-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		25C792025C792025C7920000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "math-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		25C8EC025C8EC025C8EC0000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "math-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		25C9F9025C9F9025C9F90000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "math-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		25CB0B025CB0B025CB0B0000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "math-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		25CFD1025CFD1025CFD10000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "multi_index-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		25D0EC025D0EC025D0EC0000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "multi_index-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		25D1FF025D1FF025D1FF0000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "multi_index-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		25D312025D312025D3120000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "multi_index-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		25D7D2025D7D2025D7D20000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "any-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		25D8F7025D8F7025D8F70000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "any-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		25DA0C025DA0C025DA0C0000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "any-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		25DB21025DB21025DB210000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "any-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		25DFE3025DFE3025DFE30000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "random-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		25E108025E108025E1080000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "random-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		25E21D025E21D025E21D0000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "random-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		25E332025E332025E3320000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "random-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		25E7EC025E7EC025E7EC0000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "graph-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		25E88B025E88B025E88B0000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "graph-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		25EA12025EA12025EA120000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "graph-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		25EAB4025EAB4025EAB40000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "graph-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		25EFF1025EFF1025EFF10000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_GRAPH_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = boost_graph;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		25F091025F091025F0910000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_GRAPH_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = boost_graph;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		25F21B025F21B025F21B0000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_GRAPH_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = boost_graph;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		25F2B8025F2B8025F2B80000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_GRAPH_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = boost_graph;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		25F996025F996025F9960000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DYLIB_COMPATIBILITY_VERSION = 1.0.0;
				DYLIB_CURRENT_VERSION = 1.0.0;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_4)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'boost_graph_mt_shared_EXPORTS'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_4 = "'BOOST_GRAPH_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/Debug;
				LIBRARY_SEARCH_PATHS = "";
				LIBRARY_STYLE = DYNAMIC;
				MACH_O_TYPE = mh_dylib;
				OTHER_CFLAGS = (
					"-fPIC",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-fPIC",
				);
				OTHER_LDFLAGS = (
					"-dynamiclib",
					"-headerpad_max_install_names",
					/usr/lib/libexpat.dylib,
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_graph-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		25FC01025FC01025FC010000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DYLIB_COMPATIBILITY_VERSION = 1.0.0;
				DYLIB_CURRENT_VERSION = 1.0.0;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_4)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'boost_graph_mt_shared_EXPORTS'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_4 = "'BOOST_GRAPH_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/Release;
				LIBRARY_SEARCH_PATHS = "";
				LIBRARY_STYLE = DYNAMIC;
				MACH_O_TYPE = mh_dylib;
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-fPIC",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-fPIC",
				);
				OTHER_LDFLAGS = (
					"-dynamiclib",
					"-headerpad_max_install_names",
					/usr/lib/libexpat.dylib,
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_graph-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		260064026006402600640000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DYLIB_COMPATIBILITY_VERSION = 1.0.0;
				DYLIB_CURRENT_VERSION = 1.0.0;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_4)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'boost_graph_mt_shared_EXPORTS'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_4 = "'BOOST_GRAPH_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/MinSizeRel;
				LIBRARY_SEARCH_PATHS = "";
				LIBRARY_STYLE = DYNAMIC;
				MACH_O_TYPE = mh_dylib;
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-fPIC",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-fPIC",
				);
				OTHER_LDFLAGS = (
					"-dynamiclib",
					"-headerpad_max_install_names",
					/usr/lib/libexpat.dylib,
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_graph-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		2600DE02600DE02600DE0000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DYLIB_COMPATIBILITY_VERSION = 1.0.0;
				DYLIB_CURRENT_VERSION = 1.0.0;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_4)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'boost_graph_mt_shared_EXPORTS'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_4 = "'BOOST_GRAPH_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/RelWithDebInfo;
				LIBRARY_SEARCH_PATHS = "";
				LIBRARY_STYLE = DYNAMIC;
				MACH_O_TYPE = mh_dylib;
				OTHER_CFLAGS = (
					"-fPIC",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-fPIC",
				);
				OTHER_LDFLAGS = (
					"-dynamiclib",
					"-headerpad_max_install_names",
					/usr/lib/libexpat.dylib,
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_graph-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		260963026096302609630000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DYLIB_COMPATIBILITY_VERSION = 1.0.0;
				DYLIB_CURRENT_VERSION = 1.0.0;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_4)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'boost_graph_mt_shared_debug_EXPORTS'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_4 = "'BOOST_GRAPH_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/Debug;
				LIBRARY_SEARCH_PATHS = "";
				LIBRARY_STYLE = DYNAMIC;
				MACH_O_TYPE = mh_dylib;
				OTHER_CFLAGS = (
					"-fPIC",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-fPIC",
				);
				OTHER_LDFLAGS = (
					"-dynamiclib",
					"-headerpad_max_install_names",
					/usr/lib/libexpat.dylib,
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_graph-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		260A9B0260A9B0260A9B0000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DYLIB_COMPATIBILITY_VERSION = 1.0.0;
				DYLIB_CURRENT_VERSION = 1.0.0;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_4)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'boost_graph_mt_shared_debug_EXPORTS'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_4 = "'BOOST_GRAPH_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/Release;
				LIBRARY_SEARCH_PATHS = "";
				LIBRARY_STYLE = DYNAMIC;
				MACH_O_TYPE = mh_dylib;
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-fPIC",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-fPIC",
				);
				OTHER_LDFLAGS = (
					"-dynamiclib",
					"-headerpad_max_install_names",
					/usr/lib/libexpat.dylib,
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_graph-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		260B190260B190260B190000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DYLIB_COMPATIBILITY_VERSION = 1.0.0;
				DYLIB_CURRENT_VERSION = 1.0.0;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_4)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'boost_graph_mt_shared_debug_EXPORTS'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_4 = "'BOOST_GRAPH_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/MinSizeRel;
				LIBRARY_SEARCH_PATHS = "";
				LIBRARY_STYLE = DYNAMIC;
				MACH_O_TYPE = mh_dylib;
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-fPIC",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-fPIC",
				);
				OTHER_LDFLAGS = (
					"-dynamiclib",
					"-headerpad_max_install_names",
					/usr/lib/libexpat.dylib,
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_graph-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		260CB70260CB70260CB70000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DYLIB_COMPATIBILITY_VERSION = 1.0.0;
				DYLIB_CURRENT_VERSION = 1.0.0;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_4)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'boost_graph_mt_shared_debug_EXPORTS'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_4 = "'BOOST_GRAPH_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/RelWithDebInfo;
				LIBRARY_SEARCH_PATHS = "";
				LIBRARY_STYLE = DYNAMIC;
				MACH_O_TYPE = mh_dylib;
				OTHER_CFLAGS = (
					"-fPIC",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-fPIC",
				);
				OTHER_LDFLAGS = (
					"-dynamiclib",
					"-headerpad_max_install_names",
					/usr/lib/libexpat.dylib,
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_graph-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		261543026154302615430000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_GRAPH_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_graph-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		26163A026163A026163A0000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_GRAPH_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_graph-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		2617AD02617AD02617AD0000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_GRAPH_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_graph-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		261917026191702619170000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_GRAPH_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_graph-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		26200C026200C026200C0000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_GRAPH_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_graph-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		26210A026210A026210A0000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_GRAPH_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_graph-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		26227D026227D026227D0000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_GRAPH_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_graph-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		2623E702623E702623E70000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_GRAPH_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_graph-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		26298D026298D026298D0000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Library/Frameworks/Python.framework/Headers,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "Python-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		262A1C0262A1C0262A1C0000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Library/Frameworks/Python.framework/Headers,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "Python-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		262BBD0262BBD0262BBD0000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Library/Frameworks/Python.framework/Headers,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "Python-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		262C440262C440262C440000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Library/Frameworks/Python.framework/Headers,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "Python-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		263192026319202631920000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Library/Frameworks/Python.framework/Headers,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = boost_python;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		26321E026321E026321E0000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Library/Frameworks/Python.framework/Headers,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = boost_python;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		2633BF02633BF02633BF0000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Library/Frameworks/Python.framework/Headers,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = boost_python;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		263446026344602634460000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Library/Frameworks/Python.framework/Headers,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = boost_python;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		264EFF0264EFF0264EFF0000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DYLIB_COMPATIBILITY_VERSION = 1.0.0;
				DYLIB_CURRENT_VERSION = 1.0.0;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'boost_python_mt_shared_EXPORTS'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Library/Frameworks/Python.framework/Headers,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/Debug;
				LIBRARY_SEARCH_PATHS = "";
				LIBRARY_STYLE = DYNAMIC;
				MACH_O_TYPE = mh_dylib;
				OTHER_CFLAGS = (
					"-fPIC",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-fPIC",
				);
				OTHER_LDFLAGS = (
					"-dynamiclib",
					"-headerpad_max_install_names",
					"-framework",
					Python,
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_python-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		265025026502502650250000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DYLIB_COMPATIBILITY_VERSION = 1.0.0;
				DYLIB_CURRENT_VERSION = 1.0.0;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'boost_python_mt_shared_EXPORTS'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Library/Frameworks/Python.framework/Headers,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/Release;
				LIBRARY_SEARCH_PATHS = "";
				LIBRARY_STYLE = DYNAMIC;
				MACH_O_TYPE = mh_dylib;
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-fPIC",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-fPIC",
				);
				OTHER_LDFLAGS = (
					"-dynamiclib",
					"-headerpad_max_install_names",
					"-framework",
					Python,
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_python-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		2651C702651C702651C70000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DYLIB_COMPATIBILITY_VERSION = 1.0.0;
				DYLIB_CURRENT_VERSION = 1.0.0;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'boost_python_mt_shared_EXPORTS'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Library/Frameworks/Python.framework/Headers,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/MinSizeRel;
				LIBRARY_SEARCH_PATHS = "";
				LIBRARY_STYLE = DYNAMIC;
				MACH_O_TYPE = mh_dylib;
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-fPIC",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-fPIC",
				);
				OTHER_LDFLAGS = (
					"-dynamiclib",
					"-headerpad_max_install_names",
					"-framework",
					Python,
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_python-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		265366026536602653660000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DYLIB_COMPATIBILITY_VERSION = 1.0.0;
				DYLIB_CURRENT_VERSION = 1.0.0;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'boost_python_mt_shared_EXPORTS'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Library/Frameworks/Python.framework/Headers,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/RelWithDebInfo;
				LIBRARY_SEARCH_PATHS = "";
				LIBRARY_STYLE = DYNAMIC;
				MACH_O_TYPE = mh_dylib;
				OTHER_CFLAGS = (
					"-fPIC",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-fPIC",
				);
				OTHER_LDFLAGS = (
					"-dynamiclib",
					"-headerpad_max_install_names",
					"-framework",
					Python,
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_python-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		2668D702668D702668D70000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DYLIB_COMPATIBILITY_VERSION = 1.0.0;
				DYLIB_CURRENT_VERSION = 1.0.0;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'boost_python_mt_shared_debug_EXPORTS'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Library/Frameworks/Python.framework/Headers,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/Debug;
				LIBRARY_SEARCH_PATHS = "";
				LIBRARY_STYLE = DYNAMIC;
				MACH_O_TYPE = mh_dylib;
				OTHER_CFLAGS = (
					"-fPIC",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-fPIC",
				);
				OTHER_LDFLAGS = (
					"-dynamiclib",
					"-headerpad_max_install_names",
					"-framework",
					Python,
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_python-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		2669FF02669FF02669FF0000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DYLIB_COMPATIBILITY_VERSION = 1.0.0;
				DYLIB_CURRENT_VERSION = 1.0.0;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'boost_python_mt_shared_debug_EXPORTS'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Library/Frameworks/Python.framework/Headers,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/Release;
				LIBRARY_SEARCH_PATHS = "";
				LIBRARY_STYLE = DYNAMIC;
				MACH_O_TYPE = mh_dylib;
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-fPIC",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-fPIC",
				);
				OTHER_LDFLAGS = (
					"-dynamiclib",
					"-headerpad_max_install_names",
					"-framework",
					Python,
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_python-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		266BA20266BA20266BA20000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DYLIB_COMPATIBILITY_VERSION = 1.0.0;
				DYLIB_CURRENT_VERSION = 1.0.0;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'boost_python_mt_shared_debug_EXPORTS'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Library/Frameworks/Python.framework/Headers,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/MinSizeRel;
				LIBRARY_SEARCH_PATHS = "";
				LIBRARY_STYLE = DYNAMIC;
				MACH_O_TYPE = mh_dylib;
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-fPIC",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-fPIC",
				);
				OTHER_LDFLAGS = (
					"-dynamiclib",
					"-headerpad_max_install_names",
					"-framework",
					Python,
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_python-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		266D430266D430266D430000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DYLIB_COMPATIBILITY_VERSION = 1.0.0;
				DYLIB_CURRENT_VERSION = 1.0.0;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'boost_python_mt_shared_debug_EXPORTS'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Library/Frameworks/Python.framework/Headers,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/RelWithDebInfo;
				LIBRARY_SEARCH_PATHS = "";
				LIBRARY_STYLE = DYNAMIC;
				MACH_O_TYPE = mh_dylib;
				OTHER_CFLAGS = (
					"-fPIC",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-fPIC",
				);
				OTHER_LDFLAGS = (
					"-dynamiclib",
					"-headerpad_max_install_names",
					"-framework",
					Python,
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_python-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		268322026832202683220000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Library/Frameworks/Python.framework/Headers,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_python-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		26835A026835A026835A0000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Library/Frameworks/Python.framework/Headers,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_python-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		2685A002685A002685A00000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Library/Frameworks/Python.framework/Headers,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_python-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		26872C026872C026872C0000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Library/Frameworks/Python.framework/Headers,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_python-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		269C2C0269C2C0269C2C0000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Library/Frameworks/Python.framework/Headers,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_python-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		269D160269D160269D160000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Library/Frameworks/Python.framework/Headers,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_python-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		269EA30269EA30269EA30000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Library/Frameworks/Python.framework/Headers,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_python-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		26A02F026A02F026A02F0000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Library/Frameworks/Python.framework/Headers,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_python-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		26A589026A589026A5890000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/parameter/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "parameter-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		26A61A026A61A026A61A0000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/parameter/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "parameter-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		26A7B9026A7B9026A7B90000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/parameter/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "parameter-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		26A841026A841026A8410000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/parameter/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "parameter-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		26AD92026AD92026AD920000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/accumulators/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/parameter/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "accumulators-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		26AEAD026AEAD026AEAD0000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/accumulators/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/parameter/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "accumulators-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		26AFC0026AFC0026AFC00000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/accumulators/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/parameter/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "accumulators-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		26B0D3026B0D3026B0D30000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/accumulators/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/parameter/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "accumulators-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		26B765026B765026B7650000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/accumulators/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/parameter/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-headerpad_max_install_names",
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "accumulators-accumulators_example";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/bin;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		26B8D2026B8D2026B8D20000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/accumulators/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/parameter/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-headerpad_max_install_names",
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "accumulators-accumulators_example";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/bin;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		26BA2D026BA2D026BA2D0000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/accumulators/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/parameter/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-headerpad_max_install_names",
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "accumulators-accumulators_example";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/bin;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		26BB8B026BB8B026BB8B0000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/accumulators/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/parameter/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-headerpad_max_install_names",
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "accumulators-accumulators_example";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/bin;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		26C096026C096026C0960000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "system-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		26C1BB026C1BB026C1BB0000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "system-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		26C2D0026C2D0026C2D00000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "system-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		26C3E5026C3E5026C3E50000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "system-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		26C8A0026C8A0026C8A00000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = boost_system;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		26C9C2026C9C2026C9C20000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = boost_system;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		26CAD7026CAD7026CAD70000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = boost_system;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		26CBEC026CBEC026CBEC0000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = boost_system;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		26D244026D244026D2440000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DYLIB_COMPATIBILITY_VERSION = 1.0.0;
				DYLIB_CURRENT_VERSION = 1.0.0;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'boost_system_mt_shared_EXPORTS'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/Debug;
				LIBRARY_SEARCH_PATHS = "";
				LIBRARY_STYLE = DYNAMIC;
				MACH_O_TYPE = mh_dylib;
				OTHER_CFLAGS = (
					"-fPIC",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-fPIC",
				);
				OTHER_LDFLAGS = (
					"-dynamiclib",
					"-headerpad_max_install_names",
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_system-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		26D3FD026D3FD026D3FD0000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DYLIB_COMPATIBILITY_VERSION = 1.0.0;
				DYLIB_CURRENT_VERSION = 1.0.0;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'boost_system_mt_shared_EXPORTS'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/Release;
				LIBRARY_SEARCH_PATHS = "";
				LIBRARY_STYLE = DYNAMIC;
				MACH_O_TYPE = mh_dylib;
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-fPIC",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-fPIC",
				);
				OTHER_LDFLAGS = (
					"-dynamiclib",
					"-headerpad_max_install_names",
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_system-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		26D5A0026D5A0026D5A00000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DYLIB_COMPATIBILITY_VERSION = 1.0.0;
				DYLIB_CURRENT_VERSION = 1.0.0;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'boost_system_mt_shared_EXPORTS'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/MinSizeRel;
				LIBRARY_SEARCH_PATHS = "";
				LIBRARY_STYLE = DYNAMIC;
				MACH_O_TYPE = mh_dylib;
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-fPIC",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-fPIC",
				);
				OTHER_LDFLAGS = (
					"-dynamiclib",
					"-headerpad_max_install_names",
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_system-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		26D73D026D73D026D73D0000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DYLIB_COMPATIBILITY_VERSION = 1.0.0;
				DYLIB_CURRENT_VERSION = 1.0.0;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'boost_system_mt_shared_EXPORTS'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/RelWithDebInfo;
				LIBRARY_SEARCH_PATHS = "";
				LIBRARY_STYLE = DYNAMIC;
				MACH_O_TYPE = mh_dylib;
				OTHER_CFLAGS = (
					"-fPIC",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-fPIC",
				);
				OTHER_LDFLAGS = (
					"-dynamiclib",
					"-headerpad_max_install_names",
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_system-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		26DE12026DE12026DE120000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DYLIB_COMPATIBILITY_VERSION = 1.0.0;
				DYLIB_CURRENT_VERSION = 1.0.0;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'boost_system_mt_shared_debug_EXPORTS'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/Debug;
				LIBRARY_SEARCH_PATHS = "";
				LIBRARY_STYLE = DYNAMIC;
				MACH_O_TYPE = mh_dylib;
				OTHER_CFLAGS = (
					"-fPIC",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-fPIC",
				);
				OTHER_LDFLAGS = (
					"-dynamiclib",
					"-headerpad_max_install_names",
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_system-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		26DEA6026DEA6026DEA60000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DYLIB_COMPATIBILITY_VERSION = 1.0.0;
				DYLIB_CURRENT_VERSION = 1.0.0;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'boost_system_mt_shared_debug_EXPORTS'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/Release;
				LIBRARY_SEARCH_PATHS = "";
				LIBRARY_STYLE = DYNAMIC;
				MACH_O_TYPE = mh_dylib;
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-fPIC",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-fPIC",
				);
				OTHER_LDFLAGS = (
					"-dynamiclib",
					"-headerpad_max_install_names",
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_system-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		26DFDB026DFDB026DFDB0000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DYLIB_COMPATIBILITY_VERSION = 1.0.0;
				DYLIB_CURRENT_VERSION = 1.0.0;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'boost_system_mt_shared_debug_EXPORTS'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/MinSizeRel;
				LIBRARY_SEARCH_PATHS = "";
				LIBRARY_STYLE = DYNAMIC;
				MACH_O_TYPE = mh_dylib;
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-fPIC",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-fPIC",
				);
				OTHER_LDFLAGS = (
					"-dynamiclib",
					"-headerpad_max_install_names",
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_system-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		26E30D026E30D026E30D0000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DYLIB_COMPATIBILITY_VERSION = 1.0.0;
				DYLIB_CURRENT_VERSION = 1.0.0;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'boost_system_mt_shared_debug_EXPORTS'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/RelWithDebInfo;
				LIBRARY_SEARCH_PATHS = "";
				LIBRARY_STYLE = DYNAMIC;
				MACH_O_TYPE = mh_dylib;
				OTHER_CFLAGS = (
					"-fPIC",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-fPIC",
				);
				OTHER_LDFLAGS = (
					"-dynamiclib",
					"-headerpad_max_install_names",
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_system-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		26E9E7026E9E7026E9E70000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_system-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		26EA1F026EA1F026EA1F0000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_system-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		26ECD5026ECD5026ECD50000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_system-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		26EE43026EE43026EE430000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_system-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		26F4BD026F4BD026F4BD0000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_system-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		26F63E026F63E026F63E0000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_system-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		26F7A9026F7A9026F7A90000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_system-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		26F917026F917026F9170000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_system-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		2701EF02701EF02701EF0000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/asio/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "asio-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		270343027034302703430000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/asio/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "asio-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		270455027045502704550000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/asio/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "asio-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		270567027056702705670000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/asio/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "asio-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		270A2C0270A2C0270A2C0000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/circular_buffer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "circular_buffer-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		270B480270B480270B480000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/circular_buffer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "circular_buffer-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		270C5B0270C5B0270C5B0000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/circular_buffer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "circular_buffer-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		270D6E0270D6E0270D6E0000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/circular_buffer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "circular_buffer-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		271236027123602712360000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/ptr_container/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/circular_buffer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "ptr_container-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		271352027135202713520000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/ptr_container/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/circular_buffer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "ptr_container-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		271465027146502714650000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/ptr_container/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/circular_buffer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "ptr_container-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		271578027157802715780000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/ptr_container/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/circular_buffer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "ptr_container-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		271A410271A410271A410000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/assign/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/ptr_container/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/circular_buffer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "assign-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		271B5A0271B5A0271B5A0000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/assign/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/ptr_container/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/circular_buffer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "assign-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		271C6E0271C6E0271C6E0000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/assign/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/ptr_container/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/circular_buffer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "assign-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		271D800271D800271D800000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/assign/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/ptr_container/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/circular_buffer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "assign-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		272245027224502722450000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bimap/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "bimap-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		272312027231202723120000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bimap/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "bimap-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		2724A202724A202724A20000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bimap/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "bimap-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		2725B602725B602725B60000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bimap/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "bimap-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		272A4F0272A4F0272A4F0000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/compatibility/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "compatibility-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		272B770272B770272B770000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/compatibility/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "compatibility-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		272C980272C980272C980000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/compatibility/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "compatibility-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		272DB70272DB70272DB70000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/compatibility/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "compatibility-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		27328F027328F027328F0000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/crc/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "crc-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		2733B402733B402733B40000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/crc/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "crc-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		2734C402734C402734C40000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/crc/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "crc-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		2735DD02735DD02735DD0000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/crc/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "crc-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		273A980273A980273A980000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "timer-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		273B2F0273B2F0273B2F0000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "timer-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		273C530273C530273C530000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "timer-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		273D770273D770273D770000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "timer-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		2742B002742B002742B00000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "test-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		2743B702743B702743B70000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "test-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		27447F027447F027447F0000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "test-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		274547027454702745470000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "test-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		274AF50274AF50274AF50000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_TEST_NO_AUTO_LINK=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = boost_prg_exec_monitor;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		274BBB0274BBB0274BBB0000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_TEST_NO_AUTO_LINK=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = boost_prg_exec_monitor;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		274C860274C860274C860000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_TEST_NO_AUTO_LINK=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = boost_prg_exec_monitor;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		274DA00274DA00274DA00000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_TEST_NO_AUTO_LINK=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = boost_prg_exec_monitor;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		275614027561402756140000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DYLIB_COMPATIBILITY_VERSION = 1.0.0;
				DYLIB_CURRENT_VERSION = 1.0.0;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_4)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'boost_prg_exec_monitor_mt_shared_EXPORTS'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_4 = "'BOOST_TEST_NO_AUTO_LINK=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/Debug;
				LIBRARY_SEARCH_PATHS = "";
				LIBRARY_STYLE = DYNAMIC;
				MACH_O_TYPE = mh_dylib;
				OTHER_CFLAGS = (
					"-fPIC",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-fPIC",
				);
				OTHER_LDFLAGS = (
					"-dynamiclib",
					"-headerpad_max_install_names",
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_prg_exec_monitor-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		27564A027564A027564A0000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DYLIB_COMPATIBILITY_VERSION = 1.0.0;
				DYLIB_CURRENT_VERSION = 1.0.0;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_4)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'boost_prg_exec_monitor_mt_shared_EXPORTS'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_4 = "'BOOST_TEST_NO_AUTO_LINK=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/Release;
				LIBRARY_SEARCH_PATHS = "";
				LIBRARY_STYLE = DYNAMIC;
				MACH_O_TYPE = mh_dylib;
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-fPIC",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-fPIC",
				);
				OTHER_LDFLAGS = (
					"-dynamiclib",
					"-headerpad_max_install_names",
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_prg_exec_monitor-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		2757F702757F702757F70000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DYLIB_COMPATIBILITY_VERSION = 1.0.0;
				DYLIB_CURRENT_VERSION = 1.0.0;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_4)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'boost_prg_exec_monitor_mt_shared_EXPORTS'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_4 = "'BOOST_TEST_NO_AUTO_LINK=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/MinSizeRel;
				LIBRARY_SEARCH_PATHS = "";
				LIBRARY_STYLE = DYNAMIC;
				MACH_O_TYPE = mh_dylib;
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-fPIC",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-fPIC",
				);
				OTHER_LDFLAGS = (
					"-dynamiclib",
					"-headerpad_max_install_names",
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_prg_exec_monitor-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		275947027594702759470000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DYLIB_COMPATIBILITY_VERSION = 1.0.0;
				DYLIB_CURRENT_VERSION = 1.0.0;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_4)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'boost_prg_exec_monitor_mt_shared_EXPORTS'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_4 = "'BOOST_TEST_NO_AUTO_LINK=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/RelWithDebInfo;
				LIBRARY_SEARCH_PATHS = "";
				LIBRARY_STYLE = DYNAMIC;
				MACH_O_TYPE = mh_dylib;
				OTHER_CFLAGS = (
					"-fPIC",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-fPIC",
				);
				OTHER_LDFLAGS = (
					"-dynamiclib",
					"-headerpad_max_install_names",
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_prg_exec_monitor-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		2762F702762F702762F70000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DYLIB_COMPATIBILITY_VERSION = 1.0.0;
				DYLIB_CURRENT_VERSION = 1.0.0;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_4)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'boost_prg_exec_monitor_mt_shared_debug_EXPORTS'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_4 = "'BOOST_TEST_NO_AUTO_LINK=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/Debug;
				LIBRARY_SEARCH_PATHS = "";
				LIBRARY_STYLE = DYNAMIC;
				MACH_O_TYPE = mh_dylib;
				OTHER_CFLAGS = (
					"-fPIC",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-fPIC",
				);
				OTHER_LDFLAGS = (
					"-dynamiclib",
					"-headerpad_max_install_names",
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_prg_exec_monitor-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		276467027646702764670000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DYLIB_COMPATIBILITY_VERSION = 1.0.0;
				DYLIB_CURRENT_VERSION = 1.0.0;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_4)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'boost_prg_exec_monitor_mt_shared_debug_EXPORTS'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_4 = "'BOOST_TEST_NO_AUTO_LINK=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/Release;
				LIBRARY_SEARCH_PATHS = "";
				LIBRARY_STYLE = DYNAMIC;
				MACH_O_TYPE = mh_dylib;
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-fPIC",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-fPIC",
				);
				OTHER_LDFLAGS = (
					"-dynamiclib",
					"-headerpad_max_install_names",
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_prg_exec_monitor-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		2764E202764E202764E20000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DYLIB_COMPATIBILITY_VERSION = 1.0.0;
				DYLIB_CURRENT_VERSION = 1.0.0;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_4)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'boost_prg_exec_monitor_mt_shared_debug_EXPORTS'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_4 = "'BOOST_TEST_NO_AUTO_LINK=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/MinSizeRel;
				LIBRARY_SEARCH_PATHS = "";
				LIBRARY_STYLE = DYNAMIC;
				MACH_O_TYPE = mh_dylib;
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-fPIC",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-fPIC",
				);
				OTHER_LDFLAGS = (
					"-dynamiclib",
					"-headerpad_max_install_names",
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_prg_exec_monitor-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		27662E027662E027662E0000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DYLIB_COMPATIBILITY_VERSION = 1.0.0;
				DYLIB_CURRENT_VERSION = 1.0.0;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_4)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'boost_prg_exec_monitor_mt_shared_debug_EXPORTS'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_4 = "'BOOST_TEST_NO_AUTO_LINK=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/RelWithDebInfo;
				LIBRARY_SEARCH_PATHS = "";
				LIBRARY_STYLE = DYNAMIC;
				MACH_O_TYPE = mh_dylib;
				OTHER_CFLAGS = (
					"-fPIC",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-fPIC",
				);
				OTHER_LDFLAGS = (
					"-dynamiclib",
					"-headerpad_max_install_names",
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_prg_exec_monitor-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		276FD50276FD50276FD50000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_TEST_NO_AUTO_LINK=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_prg_exec_monitor-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		277102027710202771020000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_TEST_NO_AUTO_LINK=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_prg_exec_monitor-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		27726A027726A027726A0000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_TEST_NO_AUTO_LINK=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_prg_exec_monitor-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		2773D602773D602773D60000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_TEST_NO_AUTO_LINK=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_prg_exec_monitor-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		277BB50277BB50277BB50000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_TEST_NO_AUTO_LINK=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_prg_exec_monitor-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		277CE10277CE10277CE10000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_TEST_NO_AUTO_LINK=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_prg_exec_monitor-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		277E4C0277E4C0277E4C0000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_TEST_NO_AUTO_LINK=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_prg_exec_monitor-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		277FBB0277FBB0277FBB0000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_TEST_NO_AUTO_LINK=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_prg_exec_monitor-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		2784F602784F602784F60000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_TEST_NO_AUTO_LINK=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = boost_test_exec_monitor;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		278605027860502786050000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_TEST_NO_AUTO_LINK=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = boost_test_exec_monitor;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		2786D002786D002786D00000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_TEST_NO_AUTO_LINK=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = boost_test_exec_monitor;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		2787EA02787EA02787EA0000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_TEST_NO_AUTO_LINK=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = boost_test_exec_monitor;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		2799FE02799FE02799FE0000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_TEST_NO_AUTO_LINK=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_test_exec_monitor-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		279B2C0279B2C0279B2C0000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_TEST_NO_AUTO_LINK=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_test_exec_monitor-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		279C940279C940279C940000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_TEST_NO_AUTO_LINK=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_test_exec_monitor-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		279DFE0279DFE0279DFE0000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_TEST_NO_AUTO_LINK=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_test_exec_monitor-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		27AD27027AD27027AD270000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_TEST_NO_AUTO_LINK=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_test_exec_monitor-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		27AE54027AE54027AE540000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_TEST_NO_AUTO_LINK=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_test_exec_monitor-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		27AFBC027AFBC027AFBC0000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_TEST_NO_AUTO_LINK=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_test_exec_monitor-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		27B126027B126027B1260000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_TEST_NO_AUTO_LINK=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_test_exec_monitor-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		27B651027B651027B6510000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_TEST_NO_AUTO_LINK=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = boost_unit_test_framework;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		27B75E027B75E027B75E0000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_TEST_NO_AUTO_LINK=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = boost_unit_test_framework;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		27B825027B825027B8250000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_TEST_NO_AUTO_LINK=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = boost_unit_test_framework;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		27B93A027B93A027B93A0000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_TEST_NO_AUTO_LINK=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = boost_unit_test_framework;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		27CA10027CA10027CA100000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DYLIB_COMPATIBILITY_VERSION = 1.0.0;
				DYLIB_CURRENT_VERSION = 1.0.0;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_4)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'boost_unit_test_framework_mt_shared_EXPORTS'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_4 = "'BOOST_TEST_NO_AUTO_LINK=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/Debug;
				LIBRARY_SEARCH_PATHS = "";
				LIBRARY_STYLE = DYNAMIC;
				MACH_O_TYPE = mh_dylib;
				OTHER_CFLAGS = (
					"-fPIC",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-fPIC",
				);
				OTHER_LDFLAGS = (
					"-dynamiclib",
					"-headerpad_max_install_names",
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_unit_test_framework-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		27CA4C027CA4C027CA4C0000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DYLIB_COMPATIBILITY_VERSION = 1.0.0;
				DYLIB_CURRENT_VERSION = 1.0.0;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_4)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'boost_unit_test_framework_mt_shared_EXPORTS'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_4 = "'BOOST_TEST_NO_AUTO_LINK=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/Release;
				LIBRARY_SEARCH_PATHS = "";
				LIBRARY_STYLE = DYNAMIC;
				MACH_O_TYPE = mh_dylib;
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-fPIC",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-fPIC",
				);
				OTHER_LDFLAGS = (
					"-dynamiclib",
					"-headerpad_max_install_names",
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_unit_test_framework-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		27CBF8027CBF8027CBF80000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DYLIB_COMPATIBILITY_VERSION = 1.0.0;
				DYLIB_CURRENT_VERSION = 1.0.0;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_4)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'boost_unit_test_framework_mt_shared_EXPORTS'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_4 = "'BOOST_TEST_NO_AUTO_LINK=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/MinSizeRel;
				LIBRARY_SEARCH_PATHS = "";
				LIBRARY_STYLE = DYNAMIC;
				MACH_O_TYPE = mh_dylib;
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-fPIC",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-fPIC",
				);
				OTHER_LDFLAGS = (
					"-dynamiclib",
					"-headerpad_max_install_names",
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_unit_test_framework-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		27CD3E027CD3E027CD3E0000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DYLIB_COMPATIBILITY_VERSION = 1.0.0;
				DYLIB_CURRENT_VERSION = 1.0.0;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_4)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'boost_unit_test_framework_mt_shared_EXPORTS'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_4 = "'BOOST_TEST_NO_AUTO_LINK=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/RelWithDebInfo;
				LIBRARY_SEARCH_PATHS = "";
				LIBRARY_STYLE = DYNAMIC;
				MACH_O_TYPE = mh_dylib;
				OTHER_CFLAGS = (
					"-fPIC",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-fPIC",
				);
				OTHER_LDFLAGS = (
					"-dynamiclib",
					"-headerpad_max_install_names",
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_unit_test_framework-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		27DF5C027DF5C027DF5C0000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DYLIB_COMPATIBILITY_VERSION = 1.0.0;
				DYLIB_CURRENT_VERSION = 1.0.0;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_4)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'boost_unit_test_framework_mt_shared_debug_EXPORTS'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_4 = "'BOOST_TEST_NO_AUTO_LINK=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/Debug;
				LIBRARY_SEARCH_PATHS = "";
				LIBRARY_STYLE = DYNAMIC;
				MACH_O_TYPE = mh_dylib;
				OTHER_CFLAGS = (
					"-fPIC",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-fPIC",
				);
				OTHER_LDFLAGS = (
					"-dynamiclib",
					"-headerpad_max_install_names",
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_unit_test_framework-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		27DF9F027DF9F027DF9F0000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DYLIB_COMPATIBILITY_VERSION = 1.0.0;
				DYLIB_CURRENT_VERSION = 1.0.0;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_4)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'boost_unit_test_framework_mt_shared_debug_EXPORTS'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_4 = "'BOOST_TEST_NO_AUTO_LINK=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/Release;
				LIBRARY_SEARCH_PATHS = "";
				LIBRARY_STYLE = DYNAMIC;
				MACH_O_TYPE = mh_dylib;
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-fPIC",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-fPIC",
				);
				OTHER_LDFLAGS = (
					"-dynamiclib",
					"-headerpad_max_install_names",
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_unit_test_framework-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		27E14C027E14C027E14C0000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DYLIB_COMPATIBILITY_VERSION = 1.0.0;
				DYLIB_CURRENT_VERSION = 1.0.0;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_4)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'boost_unit_test_framework_mt_shared_debug_EXPORTS'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_4 = "'BOOST_TEST_NO_AUTO_LINK=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/MinSizeRel;
				LIBRARY_SEARCH_PATHS = "";
				LIBRARY_STYLE = DYNAMIC;
				MACH_O_TYPE = mh_dylib;
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-fPIC",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-fPIC",
				);
				OTHER_LDFLAGS = (
					"-dynamiclib",
					"-headerpad_max_install_names",
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_unit_test_framework-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		27E296027E296027E2960000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DYLIB_COMPATIBILITY_VERSION = 1.0.0;
				DYLIB_CURRENT_VERSION = 1.0.0;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_4)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'boost_unit_test_framework_mt_shared_debug_EXPORTS'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_4 = "'BOOST_TEST_NO_AUTO_LINK=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/RelWithDebInfo;
				LIBRARY_SEARCH_PATHS = "";
				LIBRARY_STYLE = DYNAMIC;
				MACH_O_TYPE = mh_dylib;
				OTHER_CFLAGS = (
					"-fPIC",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-fPIC",
				);
				OTHER_LDFLAGS = (
					"-dynamiclib",
					"-headerpad_max_install_names",
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_unit_test_framework-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		27F4A8027F4A8027F4A80000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_TEST_NO_AUTO_LINK=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_unit_test_framework-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		27F5D6027F5D6027F5D60000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_TEST_NO_AUTO_LINK=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_unit_test_framework-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		27F73E027F73E027F73E0000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_TEST_NO_AUTO_LINK=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_unit_test_framework-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		27F8A8027F8A8027F8A80000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_TEST_NO_AUTO_LINK=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_unit_test_framework-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		280CD00280CD00280CD00000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_TEST_NO_AUTO_LINK=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_unit_test_framework-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		280DFC0280DFC0280DFC0000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_TEST_NO_AUTO_LINK=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_unit_test_framework-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		280F670280F670280F670000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_TEST_NO_AUTO_LINK=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_unit_test_framework-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		2810CF02810CF02810CF0000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_TEST_NO_AUTO_LINK=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_unit_test_framework-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		28163B028163B028163B0000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/dynamic_bitset/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "dynamic_bitset-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		281762028176202817620000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/dynamic_bitset/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "dynamic_bitset-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		281879028187902818790000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/dynamic_bitset/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "dynamic_bitset-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		281990028199002819900000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/dynamic_bitset/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "dynamic_bitset-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		281E530281E530281E530000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/filesystem/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "filesystem-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		281F6E0281F6E0281F6E0000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/filesystem/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "filesystem-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		282082028208202820820000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/filesystem/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "filesystem-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		282196028219602821960000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/filesystem/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "filesystem-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		28265D028265D028265D0000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/filesystem/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = boost_filesystem;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		282751028275102827510000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/filesystem/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = boost_filesystem;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		282864028286402828640000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/filesystem/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = boost_filesystem;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		282977028297702829770000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/filesystem/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = boost_filesystem;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		283224028322402832240000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DYLIB_COMPATIBILITY_VERSION = 1.0.0;
				DYLIB_CURRENT_VERSION = 1.0.0;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'boost_filesystem_mt_shared_EXPORTS'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/filesystem/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/Debug;
				LIBRARY_SEARCH_PATHS = "";
				LIBRARY_STYLE = DYNAMIC;
				MACH_O_TYPE = mh_dylib;
				OTHER_CFLAGS = (
					"-fPIC",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-fPIC",
				);
				OTHER_LDFLAGS = (
					"-dynamiclib",
					"-headerpad_max_install_names",
					"/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/Debug/libboost_system-mt.dylib",
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_filesystem-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		28325B028325B028325B0000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DYLIB_COMPATIBILITY_VERSION = 1.0.0;
				DYLIB_CURRENT_VERSION = 1.0.0;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'boost_filesystem_mt_shared_EXPORTS'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/filesystem/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/Release;
				LIBRARY_SEARCH_PATHS = "";
				LIBRARY_STYLE = DYNAMIC;
				MACH_O_TYPE = mh_dylib;
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-fPIC",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-fPIC",
				);
				OTHER_LDFLAGS = (
					"-dynamiclib",
					"-headerpad_max_install_names",
					"/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/Release/libboost_system-mt.dylib",
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_filesystem-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		283584028358402835840000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DYLIB_COMPATIBILITY_VERSION = 1.0.0;
				DYLIB_CURRENT_VERSION = 1.0.0;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'boost_filesystem_mt_shared_EXPORTS'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/filesystem/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/MinSizeRel;
				LIBRARY_SEARCH_PATHS = "";
				LIBRARY_STYLE = DYNAMIC;
				MACH_O_TYPE = mh_dylib;
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-fPIC",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-fPIC",
				);
				OTHER_LDFLAGS = (
					"-dynamiclib",
					"-headerpad_max_install_names",
					"/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/MinSizeRel/libboost_system-mt.dylib",
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_filesystem-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		2836B802836B802836B80000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DYLIB_COMPATIBILITY_VERSION = 1.0.0;
				DYLIB_CURRENT_VERSION = 1.0.0;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'boost_filesystem_mt_shared_EXPORTS'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/filesystem/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/RelWithDebInfo;
				LIBRARY_SEARCH_PATHS = "";
				LIBRARY_STYLE = DYNAMIC;
				MACH_O_TYPE = mh_dylib;
				OTHER_CFLAGS = (
					"-fPIC",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-fPIC",
				);
				OTHER_LDFLAGS = (
					"-dynamiclib",
					"-headerpad_max_install_names",
					"/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/RelWithDebInfo/libboost_system-mt.dylib",
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_filesystem-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		283F8F0283F8F0283F8F0000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DYLIB_COMPATIBILITY_VERSION = 1.0.0;
				DYLIB_CURRENT_VERSION = 1.0.0;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'boost_filesystem_mt_shared_debug_EXPORTS'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/filesystem/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/Debug;
				LIBRARY_SEARCH_PATHS = "";
				LIBRARY_STYLE = DYNAMIC;
				MACH_O_TYPE = mh_dylib;
				OTHER_CFLAGS = (
					"-fPIC",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-fPIC",
				);
				OTHER_LDFLAGS = (
					"-dynamiclib",
					"-headerpad_max_install_names",
					"/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/Debug/libboost_system-mt-d.dylib",
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_filesystem-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		283FCA0283FCA0283FCA0000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DYLIB_COMPATIBILITY_VERSION = 1.0.0;
				DYLIB_CURRENT_VERSION = 1.0.0;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'boost_filesystem_mt_shared_debug_EXPORTS'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/filesystem/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/Release;
				LIBRARY_SEARCH_PATHS = "";
				LIBRARY_STYLE = DYNAMIC;
				MACH_O_TYPE = mh_dylib;
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-fPIC",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-fPIC",
				);
				OTHER_LDFLAGS = (
					"-dynamiclib",
					"-headerpad_max_install_names",
					"/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/Release/libboost_system-mt-d.dylib",
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_filesystem-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		2842EE02842EE02842EE0000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DYLIB_COMPATIBILITY_VERSION = 1.0.0;
				DYLIB_CURRENT_VERSION = 1.0.0;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'boost_filesystem_mt_shared_debug_EXPORTS'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/filesystem/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/MinSizeRel;
				LIBRARY_SEARCH_PATHS = "";
				LIBRARY_STYLE = DYNAMIC;
				MACH_O_TYPE = mh_dylib;
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-fPIC",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-fPIC",
				);
				OTHER_LDFLAGS = (
					"-dynamiclib",
					"-headerpad_max_install_names",
					"/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/MinSizeRel/libboost_system-mt-d.dylib",
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_filesystem-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		284304028430402843040000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DYLIB_COMPATIBILITY_VERSION = 1.0.0;
				DYLIB_CURRENT_VERSION = 1.0.0;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'boost_filesystem_mt_shared_debug_EXPORTS'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/filesystem/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/RelWithDebInfo;
				LIBRARY_SEARCH_PATHS = "";
				LIBRARY_STYLE = DYNAMIC;
				MACH_O_TYPE = mh_dylib;
				OTHER_CFLAGS = (
					"-fPIC",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-fPIC",
				);
				OTHER_LDFLAGS = (
					"-dynamiclib",
					"-headerpad_max_install_names",
					"/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/RelWithDebInfo/libboost_system-mt-d.dylib",
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_filesystem-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		284CFF0284CFF0284CFF0000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/filesystem/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_filesystem-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		284E720284E720284E720000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/filesystem/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_filesystem-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		284FDF0284FDF0284FDF0000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/filesystem/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_filesystem-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		285153028515302851530000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/filesystem/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_filesystem-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		28596D028596D028596D0000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/filesystem/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_filesystem-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		285AE60285AE60285AE60000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/filesystem/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_filesystem-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		285C570285C570285C570000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/filesystem/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_filesystem-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		285DC50285DC50285DC50000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/filesystem/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_filesystem-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		2862E802862E802862E80000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/interprocess/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "interprocess-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		286403028640302864030000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/interprocess/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "interprocess-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		286516028651602865160000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/interprocess/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "interprocess-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		286629028662902866290000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/interprocess/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "interprocess-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		286AF40286AF40286AF40000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/flyweight/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/parameter/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/interprocess/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "flyweight-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		286C100286C100286C100000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/flyweight/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/parameter/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/interprocess/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "flyweight-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		286D230286D230286D230000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/flyweight/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/parameter/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/interprocess/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "flyweight-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		286E360286E360286E360000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/flyweight/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/parameter/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/interprocess/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "flyweight-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		2872F502872F502872F50000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/gil/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "gil-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		287419028741902874190000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/gil/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "gil-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		287527028752702875270000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/gil/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "gil-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		28763F028763F028763F0000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/gil/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "gil-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		287B0F0287B0F0287B0F0000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpi/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "mpi-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		287BA50287BA50287BA50000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpi/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "mpi-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		287D3A0287D3A0287D3A0000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpi/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "mpi-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		287DCD0287DCD0287DCD0000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpi/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "mpi-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		288316028831602883160000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_MPI_SOURCE=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpi/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = boost_mpi;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		2883AF02883AF02883AF0000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_MPI_SOURCE=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpi/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = boost_mpi;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		288548028854802885480000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_MPI_SOURCE=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpi/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = boost_mpi;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		288619028861902886190000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_MPI_SOURCE=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpi/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = boost_mpi;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		28995D028995D028995D0000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DYLIB_COMPATIBILITY_VERSION = 1.0.0;
				DYLIB_CURRENT_VERSION = 1.0.0;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_4)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'boost_mpi_mt_shared_EXPORTS'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_4 = "'BOOST_MPI_SOURCE=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpi/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/Debug;
				LIBRARY_SEARCH_PATHS = "";
				LIBRARY_STYLE = DYNAMIC;
				MACH_O_TYPE = mh_dylib;
				OTHER_CFLAGS = (
					"-fPIC",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-fPIC",
				);
				OTHER_LDFLAGS = (
					"-Wl,-u,_munmap",
					"-Wl,-multiply_defined,suppress",
					"-dynamiclib",
					"-headerpad_max_install_names",
					/usr/lib/libmpi_cxx.dylib,
					/usr/lib/libmpi.dylib,
					"/usr/lib/libopen-rte.dylib",
					"/usr/lib/libopen-pal.dylib",
					"/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/Debug/libboost_serialization-mt.dylib",
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_mpi-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		289A930289A930289A930000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DYLIB_COMPATIBILITY_VERSION = 1.0.0;
				DYLIB_CURRENT_VERSION = 1.0.0;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_4)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'boost_mpi_mt_shared_EXPORTS'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_4 = "'BOOST_MPI_SOURCE=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpi/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/Release;
				LIBRARY_SEARCH_PATHS = "";
				LIBRARY_STYLE = DYNAMIC;
				MACH_O_TYPE = mh_dylib;
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-fPIC",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-fPIC",
				);
				OTHER_LDFLAGS = (
					"-Wl,-u,_munmap",
					"-Wl,-multiply_defined,suppress",
					"-dynamiclib",
					"-headerpad_max_install_names",
					/usr/lib/libmpi_cxx.dylib,
					/usr/lib/libmpi.dylib,
					"/usr/lib/libopen-rte.dylib",
					"/usr/lib/libopen-pal.dylib",
					"/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/Release/libboost_serialization-mt.dylib",
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_mpi-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		289C370289C370289C370000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DYLIB_COMPATIBILITY_VERSION = 1.0.0;
				DYLIB_CURRENT_VERSION = 1.0.0;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_4)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'boost_mpi_mt_shared_EXPORTS'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_4 = "'BOOST_MPI_SOURCE=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpi/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/MinSizeRel;
				LIBRARY_SEARCH_PATHS = "";
				LIBRARY_STYLE = DYNAMIC;
				MACH_O_TYPE = mh_dylib;
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-fPIC",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-fPIC",
				);
				OTHER_LDFLAGS = (
					"-Wl,-u,_munmap",
					"-Wl,-multiply_defined,suppress",
					"-dynamiclib",
					"-headerpad_max_install_names",
					/usr/lib/libmpi_cxx.dylib,
					/usr/lib/libmpi.dylib,
					"/usr/lib/libopen-rte.dylib",
					"/usr/lib/libopen-pal.dylib",
					"/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/MinSizeRel/libboost_serialization-mt.dylib",
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_mpi-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		289DD80289DD80289DD80000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DYLIB_COMPATIBILITY_VERSION = 1.0.0;
				DYLIB_CURRENT_VERSION = 1.0.0;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_4)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'boost_mpi_mt_shared_EXPORTS'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_4 = "'BOOST_MPI_SOURCE=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpi/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/RelWithDebInfo;
				LIBRARY_SEARCH_PATHS = "";
				LIBRARY_STYLE = DYNAMIC;
				MACH_O_TYPE = mh_dylib;
				OTHER_CFLAGS = (
					"-fPIC",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-fPIC",
				);
				OTHER_LDFLAGS = (
					"-Wl,-u,_munmap",
					"-Wl,-multiply_defined,suppress",
					"-dynamiclib",
					"-headerpad_max_install_names",
					/usr/lib/libmpi_cxx.dylib,
					/usr/lib/libmpi.dylib,
					"/usr/lib/libopen-rte.dylib",
					"/usr/lib/libopen-pal.dylib",
					"/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/RelWithDebInfo/libboost_serialization-mt.dylib",
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_mpi-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		28AE4C028AE4C028AE4C0000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DYLIB_COMPATIBILITY_VERSION = 1.0.0;
				DYLIB_CURRENT_VERSION = 1.0.0;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_4)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'boost_mpi_mt_shared_debug_EXPORTS'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_4 = "'BOOST_MPI_SOURCE=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpi/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/Debug;
				LIBRARY_SEARCH_PATHS = "";
				LIBRARY_STYLE = DYNAMIC;
				MACH_O_TYPE = mh_dylib;
				OTHER_CFLAGS = (
					"-fPIC",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-fPIC",
				);
				OTHER_LDFLAGS = (
					"-Wl,-u,_munmap",
					"-Wl,-multiply_defined,suppress",
					"-dynamiclib",
					"-headerpad_max_install_names",
					/usr/lib/libmpi_cxx.dylib,
					/usr/lib/libmpi.dylib,
					"/usr/lib/libopen-rte.dylib",
					"/usr/lib/libopen-pal.dylib",
					"/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/Debug/libboost_serialization-mt-d.dylib",
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_mpi-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		28AF7D028AF7D028AF7D0000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DYLIB_COMPATIBILITY_VERSION = 1.0.0;
				DYLIB_CURRENT_VERSION = 1.0.0;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_4)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'boost_mpi_mt_shared_debug_EXPORTS'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_4 = "'BOOST_MPI_SOURCE=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpi/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/Release;
				LIBRARY_SEARCH_PATHS = "";
				LIBRARY_STYLE = DYNAMIC;
				MACH_O_TYPE = mh_dylib;
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-fPIC",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-fPIC",
				);
				OTHER_LDFLAGS = (
					"-Wl,-u,_munmap",
					"-Wl,-multiply_defined,suppress",
					"-dynamiclib",
					"-headerpad_max_install_names",
					/usr/lib/libmpi_cxx.dylib,
					/usr/lib/libmpi.dylib,
					"/usr/lib/libopen-rte.dylib",
					"/usr/lib/libopen-pal.dylib",
					"/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/Release/libboost_serialization-mt-d.dylib",
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_mpi-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		28B121028B121028B1210000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DYLIB_COMPATIBILITY_VERSION = 1.0.0;
				DYLIB_CURRENT_VERSION = 1.0.0;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_4)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'boost_mpi_mt_shared_debug_EXPORTS'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_4 = "'BOOST_MPI_SOURCE=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpi/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/MinSizeRel;
				LIBRARY_SEARCH_PATHS = "";
				LIBRARY_STYLE = DYNAMIC;
				MACH_O_TYPE = mh_dylib;
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-fPIC",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-fPIC",
				);
				OTHER_LDFLAGS = (
					"-Wl,-u,_munmap",
					"-Wl,-multiply_defined,suppress",
					"-dynamiclib",
					"-headerpad_max_install_names",
					/usr/lib/libmpi_cxx.dylib,
					/usr/lib/libmpi.dylib,
					"/usr/lib/libopen-rte.dylib",
					"/usr/lib/libopen-pal.dylib",
					"/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/MinSizeRel/libboost_serialization-mt-d.dylib",
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_mpi-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		28B2C2028B2C2028B2C20000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DYLIB_COMPATIBILITY_VERSION = 1.0.0;
				DYLIB_CURRENT_VERSION = 1.0.0;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_4)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'boost_mpi_mt_shared_debug_EXPORTS'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_4 = "'BOOST_MPI_SOURCE=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpi/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/RelWithDebInfo;
				LIBRARY_SEARCH_PATHS = "";
				LIBRARY_STYLE = DYNAMIC;
				MACH_O_TYPE = mh_dylib;
				OTHER_CFLAGS = (
					"-fPIC",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-fPIC",
				);
				OTHER_LDFLAGS = (
					"-Wl,-u,_munmap",
					"-Wl,-multiply_defined,suppress",
					"-dynamiclib",
					"-headerpad_max_install_names",
					/usr/lib/libmpi_cxx.dylib,
					/usr/lib/libmpi.dylib,
					"/usr/lib/libopen-rte.dylib",
					"/usr/lib/libopen-pal.dylib",
					"/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/RelWithDebInfo/libboost_serialization-mt-d.dylib",
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_mpi-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		28C31B028C31B028C31B0000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_MPI_SOURCE=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpi/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
					"-Wl,-u,_munmap",
					"-Wl,-multiply_defined,suppress",
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_mpi-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		28C411028C411028C4110000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_MPI_SOURCE=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpi/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
					"-Wl,-u,_munmap",
					"-Wl,-multiply_defined,suppress",
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_mpi-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		28C6EF028C6EF028C6EF0000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_MPI_SOURCE=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpi/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
					"-Wl,-u,_munmap",
					"-Wl,-multiply_defined,suppress",
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_mpi-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		28C857028C857028C8570000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_MPI_SOURCE=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpi/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
					"-Wl,-u,_munmap",
					"-Wl,-multiply_defined,suppress",
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_mpi-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		28D6C5028D6C5028D6C50000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_MPI_SOURCE=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpi/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
					"-Wl,-u,_munmap",
					"-Wl,-multiply_defined,suppress",
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_mpi-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		28D7BA028D7BA028D7BA0000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_MPI_SOURCE=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpi/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
					"-Wl,-u,_munmap",
					"-Wl,-multiply_defined,suppress",
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_mpi-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		28DA91028DA91028DA910000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_MPI_SOURCE=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpi/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
					"-Wl,-u,_munmap",
					"-Wl,-multiply_defined,suppress",
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_mpi-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		28DC01028DC01028DC010000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_MPI_SOURCE=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpi/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
					"-Wl,-u,_munmap",
					"-Wl,-multiply_defined,suppress",
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_mpi-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		28E02E028E02E028E02E0000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_GRAPH_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpi/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = boost_graph_parallel;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		28E0D3028E0D3028E0D30000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_GRAPH_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpi/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = boost_graph_parallel;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		28E26B028E26B028E26B0000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_GRAPH_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpi/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = boost_graph_parallel;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		28E2FA028E2FA028E2FA0000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_GRAPH_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpi/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = boost_graph_parallel;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		28EAA3028EAA3028EAA30000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DYLIB_COMPATIBILITY_VERSION = 1.0.0;
				DYLIB_CURRENT_VERSION = 1.0.0;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_4)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'boost_graph_parallel_mt_shared_EXPORTS'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_4 = "'BOOST_GRAPH_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpi/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/Debug;
				LIBRARY_SEARCH_PATHS = "";
				LIBRARY_STYLE = DYNAMIC;
				MACH_O_TYPE = mh_dylib;
				OTHER_CFLAGS = (
					"-fPIC",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-fPIC",
				);
				OTHER_LDFLAGS = (
					"-dynamiclib",
					"-headerpad_max_install_names",
					"/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/Debug/libboost_mpi-mt.dylib",
					/usr/lib/libmpi_cxx.dylib,
					/usr/lib/libmpi.dylib,
					"/usr/lib/libopen-rte.dylib",
					"/usr/lib/libopen-pal.dylib",
					"/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/Debug/libboost_serialization-mt.dylib",
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_graph_parallel-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		28EADD028EADD028EADD0000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DYLIB_COMPATIBILITY_VERSION = 1.0.0;
				DYLIB_CURRENT_VERSION = 1.0.0;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_4)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'boost_graph_parallel_mt_shared_EXPORTS'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_4 = "'BOOST_GRAPH_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpi/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/Release;
				LIBRARY_SEARCH_PATHS = "";
				LIBRARY_STYLE = DYNAMIC;
				MACH_O_TYPE = mh_dylib;
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-fPIC",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-fPIC",
				);
				OTHER_LDFLAGS = (
					"-dynamiclib",
					"-headerpad_max_install_names",
					"/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/Release/libboost_mpi-mt.dylib",
					/usr/lib/libmpi_cxx.dylib,
					/usr/lib/libmpi.dylib,
					"/usr/lib/libopen-rte.dylib",
					"/usr/lib/libopen-pal.dylib",
					"/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/Release/libboost_serialization-mt.dylib",
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_graph_parallel-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		28EC51028EC51028EC510000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DYLIB_COMPATIBILITY_VERSION = 1.0.0;
				DYLIB_CURRENT_VERSION = 1.0.0;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_4)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'boost_graph_parallel_mt_shared_EXPORTS'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_4 = "'BOOST_GRAPH_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpi/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/MinSizeRel;
				LIBRARY_SEARCH_PATHS = "";
				LIBRARY_STYLE = DYNAMIC;
				MACH_O_TYPE = mh_dylib;
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-fPIC",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-fPIC",
				);
				OTHER_LDFLAGS = (
					"-dynamiclib",
					"-headerpad_max_install_names",
					"/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/MinSizeRel/libboost_mpi-mt.dylib",
					/usr/lib/libmpi_cxx.dylib,
					/usr/lib/libmpi.dylib,
					"/usr/lib/libopen-rte.dylib",
					"/usr/lib/libopen-pal.dylib",
					"/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/MinSizeRel/libboost_serialization-mt.dylib",
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_graph_parallel-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		28EDA1028EDA1028EDA10000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DYLIB_COMPATIBILITY_VERSION = 1.0.0;
				DYLIB_CURRENT_VERSION = 1.0.0;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_4)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'boost_graph_parallel_mt_shared_EXPORTS'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_4 = "'BOOST_GRAPH_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpi/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/RelWithDebInfo;
				LIBRARY_SEARCH_PATHS = "";
				LIBRARY_STYLE = DYNAMIC;
				MACH_O_TYPE = mh_dylib;
				OTHER_CFLAGS = (
					"-fPIC",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-fPIC",
				);
				OTHER_LDFLAGS = (
					"-dynamiclib",
					"-headerpad_max_install_names",
					"/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/RelWithDebInfo/libboost_mpi-mt.dylib",
					/usr/lib/libmpi_cxx.dylib,
					/usr/lib/libmpi.dylib,
					"/usr/lib/libopen-rte.dylib",
					"/usr/lib/libopen-pal.dylib",
					"/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/RelWithDebInfo/libboost_serialization-mt.dylib",
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_graph_parallel-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		28F70C028F70C028F70C0000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DYLIB_COMPATIBILITY_VERSION = 1.0.0;
				DYLIB_CURRENT_VERSION = 1.0.0;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_4)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'boost_graph_parallel_mt_shared_debug_EXPORTS'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_4 = "'BOOST_GRAPH_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpi/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/Debug;
				LIBRARY_SEARCH_PATHS = "";
				LIBRARY_STYLE = DYNAMIC;
				MACH_O_TYPE = mh_dylib;
				OTHER_CFLAGS = (
					"-fPIC",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-fPIC",
				);
				OTHER_LDFLAGS = (
					"-dynamiclib",
					"-headerpad_max_install_names",
					"/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/Debug/libboost_mpi-mt-d.dylib",
					/usr/lib/libmpi_cxx.dylib,
					/usr/lib/libmpi.dylib,
					"/usr/lib/libopen-rte.dylib",
					"/usr/lib/libopen-pal.dylib",
					"/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/Debug/libboost_serialization-mt-d.dylib",
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_graph_parallel-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		28F746028F746028F7460000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DYLIB_COMPATIBILITY_VERSION = 1.0.0;
				DYLIB_CURRENT_VERSION = 1.0.0;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_4)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'boost_graph_parallel_mt_shared_debug_EXPORTS'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_4 = "'BOOST_GRAPH_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpi/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/Release;
				LIBRARY_SEARCH_PATHS = "";
				LIBRARY_STYLE = DYNAMIC;
				MACH_O_TYPE = mh_dylib;
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-fPIC",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-fPIC",
				);
				OTHER_LDFLAGS = (
					"-dynamiclib",
					"-headerpad_max_install_names",
					"/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/Release/libboost_mpi-mt-d.dylib",
					/usr/lib/libmpi_cxx.dylib,
					/usr/lib/libmpi.dylib,
					"/usr/lib/libopen-rte.dylib",
					"/usr/lib/libopen-pal.dylib",
					"/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/Release/libboost_serialization-mt-d.dylib",
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_graph_parallel-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		28F865028F865028F8650000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DYLIB_COMPATIBILITY_VERSION = 1.0.0;
				DYLIB_CURRENT_VERSION = 1.0.0;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_4)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'boost_graph_parallel_mt_shared_debug_EXPORTS'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_4 = "'BOOST_GRAPH_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpi/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/MinSizeRel;
				LIBRARY_SEARCH_PATHS = "";
				LIBRARY_STYLE = DYNAMIC;
				MACH_O_TYPE = mh_dylib;
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-fPIC",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-fPIC",
				);
				OTHER_LDFLAGS = (
					"-dynamiclib",
					"-headerpad_max_install_names",
					"/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/MinSizeRel/libboost_mpi-mt-d.dylib",
					/usr/lib/libmpi_cxx.dylib,
					/usr/lib/libmpi.dylib,
					"/usr/lib/libopen-rte.dylib",
					"/usr/lib/libopen-pal.dylib",
					"/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/MinSizeRel/libboost_serialization-mt-d.dylib",
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_graph_parallel-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		28FA02028FA02028FA020000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DYLIB_COMPATIBILITY_VERSION = 1.0.0;
				DYLIB_CURRENT_VERSION = 1.0.0;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_4)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'boost_graph_parallel_mt_shared_debug_EXPORTS'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_4 = "'BOOST_GRAPH_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpi/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/RelWithDebInfo;
				LIBRARY_SEARCH_PATHS = "";
				LIBRARY_STYLE = DYNAMIC;
				MACH_O_TYPE = mh_dylib;
				OTHER_CFLAGS = (
					"-fPIC",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-fPIC",
				);
				OTHER_LDFLAGS = (
					"-dynamiclib",
					"-headerpad_max_install_names",
					"/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/RelWithDebInfo/libboost_mpi-mt-d.dylib",
					/usr/lib/libmpi_cxx.dylib,
					/usr/lib/libmpi.dylib,
					"/usr/lib/libopen-rte.dylib",
					"/usr/lib/libopen-pal.dylib",
					"/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/RelWithDebInfo/libboost_serialization-mt-d.dylib",
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_graph_parallel-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		290769029076902907690000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_GRAPH_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpi/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_graph_parallel-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		29085D029085D029085D0000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_GRAPH_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpi/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_graph_parallel-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		290B320290B320290B320000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_GRAPH_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpi/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_graph_parallel-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		290C9C0290C9C0290C9C0000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_GRAPH_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpi/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_graph_parallel-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		2912BB02912BB02912BB0000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_GRAPH_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpi/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_graph_parallel-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		2913B002913B002913B00000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_GRAPH_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpi/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_graph_parallel-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		291682029168202916820000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_GRAPH_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpi/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_graph_parallel-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		2917F302917F302917F30000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_GRAPH_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpi/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_graph_parallel-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		291C2F0291C2F0291C2F0000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iostreams/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "iostreams-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		291D4B0291D4B0291D4B0000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iostreams/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "iostreams-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		291E5E0291E5E0291E5E0000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iostreams/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "iostreams-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		291F710291F710291F710000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iostreams/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "iostreams-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		292435029243502924350000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iostreams/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = boost_iostreams;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		292549029254902925490000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iostreams/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = boost_iostreams;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		29265C029265C029265C0000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iostreams/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = boost_iostreams;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		29276F029276F029276F0000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iostreams/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = boost_iostreams;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		293007029300702930070000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DYLIB_COMPATIBILITY_VERSION = 1.0.0;
				DYLIB_CURRENT_VERSION = 1.0.0;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'boost_iostreams_mt_shared_EXPORTS'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iostreams/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/include,
				);
				INSTALL_PATH = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/Debug;
				LIBRARY_SEARCH_PATHS = "";
				LIBRARY_STYLE = DYNAMIC;
				MACH_O_TYPE = mh_dylib;
				OTHER_CFLAGS = (
					"-fPIC",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-fPIC",
				);
				OTHER_LDFLAGS = (
					"-dynamiclib",
					"-headerpad_max_install_names",
					/lib/libz.a,
					/usr/lib/libbz2.dylib,
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_iostreams-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		2931B902931B902931B90000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DYLIB_COMPATIBILITY_VERSION = 1.0.0;
				DYLIB_CURRENT_VERSION = 1.0.0;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'boost_iostreams_mt_shared_EXPORTS'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iostreams/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/include,
				);
				INSTALL_PATH = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/Release;
				LIBRARY_SEARCH_PATHS = "";
				LIBRARY_STYLE = DYNAMIC;
				MACH_O_TYPE = mh_dylib;
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-fPIC",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-fPIC",
				);
				OTHER_LDFLAGS = (
					"-dynamiclib",
					"-headerpad_max_install_names",
					/lib/libz.a,
					/usr/lib/libbz2.dylib,
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_iostreams-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		293235029323502932350000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DYLIB_COMPATIBILITY_VERSION = 1.0.0;
				DYLIB_CURRENT_VERSION = 1.0.0;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'boost_iostreams_mt_shared_EXPORTS'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iostreams/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/include,
				);
				INSTALL_PATH = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/MinSizeRel;
				LIBRARY_SEARCH_PATHS = "";
				LIBRARY_STYLE = DYNAMIC;
				MACH_O_TYPE = mh_dylib;
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-fPIC",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-fPIC",
				);
				OTHER_LDFLAGS = (
					"-dynamiclib",
					"-headerpad_max_install_names",
					/lib/libz.a,
					/usr/lib/libbz2.dylib,
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_iostreams-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		2933D202933D202933D20000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DYLIB_COMPATIBILITY_VERSION = 1.0.0;
				DYLIB_CURRENT_VERSION = 1.0.0;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'boost_iostreams_mt_shared_EXPORTS'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iostreams/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/include,
				);
				INSTALL_PATH = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/RelWithDebInfo;
				LIBRARY_SEARCH_PATHS = "";
				LIBRARY_STYLE = DYNAMIC;
				MACH_O_TYPE = mh_dylib;
				OTHER_CFLAGS = (
					"-fPIC",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-fPIC",
				);
				OTHER_LDFLAGS = (
					"-dynamiclib",
					"-headerpad_max_install_names",
					/lib/libz.a,
					/usr/lib/libbz2.dylib,
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_iostreams-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		293D740293D740293D740000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DYLIB_COMPATIBILITY_VERSION = 1.0.0;
				DYLIB_CURRENT_VERSION = 1.0.0;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'boost_iostreams_mt_shared_debug_EXPORTS'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iostreams/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/include,
				);
				INSTALL_PATH = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/Debug;
				LIBRARY_SEARCH_PATHS = "";
				LIBRARY_STYLE = DYNAMIC;
				MACH_O_TYPE = mh_dylib;
				OTHER_CFLAGS = (
					"-fPIC",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-fPIC",
				);
				OTHER_LDFLAGS = (
					"-dynamiclib",
					"-headerpad_max_install_names",
					/lib/libz.a,
					/usr/lib/libbz2.dylib,
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_iostreams-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		293DAF0293DAF0293DAF0000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DYLIB_COMPATIBILITY_VERSION = 1.0.0;
				DYLIB_CURRENT_VERSION = 1.0.0;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'boost_iostreams_mt_shared_debug_EXPORTS'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iostreams/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/include,
				);
				INSTALL_PATH = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/Release;
				LIBRARY_SEARCH_PATHS = "";
				LIBRARY_STYLE = DYNAMIC;
				MACH_O_TYPE = mh_dylib;
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-fPIC",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-fPIC",
				);
				OTHER_LDFLAGS = (
					"-dynamiclib",
					"-headerpad_max_install_names",
					/lib/libz.a,
					/usr/lib/libbz2.dylib,
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_iostreams-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		293FA70293FA70293FA70000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DYLIB_COMPATIBILITY_VERSION = 1.0.0;
				DYLIB_CURRENT_VERSION = 1.0.0;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'boost_iostreams_mt_shared_debug_EXPORTS'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iostreams/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/include,
				);
				INSTALL_PATH = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/MinSizeRel;
				LIBRARY_SEARCH_PATHS = "";
				LIBRARY_STYLE = DYNAMIC;
				MACH_O_TYPE = mh_dylib;
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-fPIC",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-fPIC",
				);
				OTHER_LDFLAGS = (
					"-dynamiclib",
					"-headerpad_max_install_names",
					/lib/libz.a,
					/usr/lib/libbz2.dylib,
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_iostreams-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		2940E202940E202940E20000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DYLIB_COMPATIBILITY_VERSION = 1.0.0;
				DYLIB_CURRENT_VERSION = 1.0.0;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'boost_iostreams_mt_shared_debug_EXPORTS'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iostreams/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/include,
				);
				INSTALL_PATH = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/RelWithDebInfo;
				LIBRARY_SEARCH_PATHS = "";
				LIBRARY_STYLE = DYNAMIC;
				MACH_O_TYPE = mh_dylib;
				OTHER_CFLAGS = (
					"-fPIC",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-fPIC",
				);
				OTHER_LDFLAGS = (
					"-dynamiclib",
					"-headerpad_max_install_names",
					/lib/libz.a,
					/usr/lib/libbz2.dylib,
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_iostreams-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		294AE10294AE10294AE10000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iostreams/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_iostreams-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		294C590294C590294C590000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iostreams/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_iostreams-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		294DC30294DC30294DC30000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iostreams/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_iostreams-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		294F2F0294F2F0294F2F0000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iostreams/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_iostreams-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		295730029573002957300000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iostreams/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_iostreams-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		2958A902958A902958A90000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iostreams/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_iostreams-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		295A170295A170295A170000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iostreams/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_iostreams-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		295B820295B820295B820000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iostreams/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_iostreams-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		2960A302960A302960A30000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/lambda/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "lambda-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		2961C802961C802961C80000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/lambda/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "lambda-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		2962DD02962DD02962DD0000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/lambda/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "lambda-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		2963F202963F202963F20000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/lambda/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "lambda-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		2968B102968B102968B10000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "multi_array-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		2969D802969D802969D80000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "multi_array-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		296AF00296AF00296AF00000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "multi_array-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		296C080296C080296C080000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "multi_array-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		2970D002970D002970D00000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/program_options/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "program_options-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		29718C029718C029718C0000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/program_options/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "program_options-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		2972DD02972DD02972DD0000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/program_options/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "program_options-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		297402029740202974020000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/program_options/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "program_options-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		2978D202978D202978D20000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/program_options/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = boost_program_options;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		297994029799402979940000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/program_options/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = boost_program_options;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		297AE40297AE40297AE40000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/program_options/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = boost_program_options;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		297C0C0297C0C0297C0C0000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/program_options/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = boost_program_options;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		298942029894202989420000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DYLIB_COMPATIBILITY_VERSION = 1.0.0;
				DYLIB_CURRENT_VERSION = 1.0.0;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'boost_program_options_mt_shared_EXPORTS'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/program_options/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
				);
				INSTALL_PATH = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/Debug;
				LIBRARY_SEARCH_PATHS = "";
				LIBRARY_STYLE = DYNAMIC;
				MACH_O_TYPE = mh_dylib;
				OTHER_CFLAGS = (
					"-fPIC",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-fPIC",
				);
				OTHER_LDFLAGS = (
					"-dynamiclib",
					"-headerpad_max_install_names",
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_program_options-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		29897D029897D029897D0000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DYLIB_COMPATIBILITY_VERSION = 1.0.0;
				DYLIB_CURRENT_VERSION = 1.0.0;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'boost_program_options_mt_shared_EXPORTS'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/program_options/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
				);
				INSTALL_PATH = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/Release;
				LIBRARY_SEARCH_PATHS = "";
				LIBRARY_STYLE = DYNAMIC;
				MACH_O_TYPE = mh_dylib;
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-fPIC",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-fPIC",
				);
				OTHER_LDFLAGS = (
					"-dynamiclib",
					"-headerpad_max_install_names",
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_program_options-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		298B0E0298B0E0298B0E0000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DYLIB_COMPATIBILITY_VERSION = 1.0.0;
				DYLIB_CURRENT_VERSION = 1.0.0;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'boost_program_options_mt_shared_EXPORTS'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/program_options/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
				);
				INSTALL_PATH = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/MinSizeRel;
				LIBRARY_SEARCH_PATHS = "";
				LIBRARY_STYLE = DYNAMIC;
				MACH_O_TYPE = mh_dylib;
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-fPIC",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-fPIC",
				);
				OTHER_LDFLAGS = (
					"-dynamiclib",
					"-headerpad_max_install_names",
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_program_options-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		298C450298C450298C450000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DYLIB_COMPATIBILITY_VERSION = 1.0.0;
				DYLIB_CURRENT_VERSION = 1.0.0;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'boost_program_options_mt_shared_EXPORTS'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/program_options/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
				);
				INSTALL_PATH = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/RelWithDebInfo;
				LIBRARY_SEARCH_PATHS = "";
				LIBRARY_STYLE = DYNAMIC;
				MACH_O_TYPE = mh_dylib;
				OTHER_CFLAGS = (
					"-fPIC",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-fPIC",
				);
				OTHER_LDFLAGS = (
					"-dynamiclib",
					"-headerpad_max_install_names",
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_program_options-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		2999E702999E702999E70000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DYLIB_COMPATIBILITY_VERSION = 1.0.0;
				DYLIB_CURRENT_VERSION = 1.0.0;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'boost_program_options_mt_shared_debug_EXPORTS'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/program_options/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
				);
				INSTALL_PATH = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/Debug;
				LIBRARY_SEARCH_PATHS = "";
				LIBRARY_STYLE = DYNAMIC;
				MACH_O_TYPE = mh_dylib;
				OTHER_CFLAGS = (
					"-fPIC",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-fPIC",
				);
				OTHER_LDFLAGS = (
					"-dynamiclib",
					"-headerpad_max_install_names",
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_program_options-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		299A210299A210299A210000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DYLIB_COMPATIBILITY_VERSION = 1.0.0;
				DYLIB_CURRENT_VERSION = 1.0.0;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'boost_program_options_mt_shared_debug_EXPORTS'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/program_options/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
				);
				INSTALL_PATH = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/Release;
				LIBRARY_SEARCH_PATHS = "";
				LIBRARY_STYLE = DYNAMIC;
				MACH_O_TYPE = mh_dylib;
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-fPIC",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-fPIC",
				);
				OTHER_LDFLAGS = (
					"-dynamiclib",
					"-headerpad_max_install_names",
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_program_options-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		299B630299B630299B630000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DYLIB_COMPATIBILITY_VERSION = 1.0.0;
				DYLIB_CURRENT_VERSION = 1.0.0;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'boost_program_options_mt_shared_debug_EXPORTS'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/program_options/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
				);
				INSTALL_PATH = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/MinSizeRel;
				LIBRARY_SEARCH_PATHS = "";
				LIBRARY_STYLE = DYNAMIC;
				MACH_O_TYPE = mh_dylib;
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-fPIC",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-fPIC",
				);
				OTHER_LDFLAGS = (
					"-dynamiclib",
					"-headerpad_max_install_names",
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_program_options-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		299D000299D000299D000000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DYLIB_COMPATIBILITY_VERSION = 1.0.0;
				DYLIB_CURRENT_VERSION = 1.0.0;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'boost_program_options_mt_shared_debug_EXPORTS'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/program_options/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
				);
				INSTALL_PATH = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/RelWithDebInfo;
				LIBRARY_SEARCH_PATHS = "";
				LIBRARY_STYLE = DYNAMIC;
				MACH_O_TYPE = mh_dylib;
				OTHER_CFLAGS = (
					"-fPIC",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-fPIC",
				);
				OTHER_LDFLAGS = (
					"-dynamiclib",
					"-headerpad_max_install_names",
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_program_options-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		29AA82029AA82029AA820000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/program_options/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_program_options-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		29AB99029AB99029AB990000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/program_options/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_program_options-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		29AD05029AD05029AD050000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/program_options/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_program_options-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		29AE6E029AE6E029AE6E0000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/program_options/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_program_options-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		29BA01029BA01029BA010000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/program_options/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_program_options-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		29BA3A029BA3A029BA3A0000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/program_options/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_program_options-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		29BC86029BC86029BC860000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/program_options/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_program_options-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		29BDEF029BDEF029BDEF0000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/program_options/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_program_options-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		29C36C029C36C029C36C0000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/rational/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "rational-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		29C48E029C48E029C48E0000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/rational/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "rational-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		29C5A2029C5A2029C5A20000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/rational/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "rational-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		29C6B8029C6B8029C6B80000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/rational/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "rational-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		29CB7B029CB7B029CB7B0000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/signals/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "signals-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		29CC93029CC93029CC930000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/signals/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "signals-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		29CDA5029CDA5029CDA50000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/signals/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "signals-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		29CEB7029CEB7029CEB70000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/signals/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "signals-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		29D36B029D36B029D36B0000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_SIGNALS_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/signals/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = boost_signals;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		29D476029D476029D4760000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_SIGNALS_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/signals/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = boost_signals;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		29D4B6029D4B6029D4B60000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_SIGNALS_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/signals/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = boost_signals;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		29D69E029D69E029D69E0000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_SIGNALS_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/signals/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = boost_signals;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		29E001029E001029E0010000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DYLIB_COMPATIBILITY_VERSION = 1.0.0;
				DYLIB_CURRENT_VERSION = 1.0.0;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_4)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'boost_signals_mt_shared_EXPORTS'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_4 = "'BOOST_SIGNALS_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/signals/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/Debug;
				LIBRARY_SEARCH_PATHS = "";
				LIBRARY_STYLE = DYNAMIC;
				MACH_O_TYPE = mh_dylib;
				OTHER_CFLAGS = (
					"-fPIC",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-fPIC",
				);
				OTHER_LDFLAGS = (
					"-dynamiclib",
					"-headerpad_max_install_names",
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_signals-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		29E158029E158029E1580000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DYLIB_COMPATIBILITY_VERSION = 1.0.0;
				DYLIB_CURRENT_VERSION = 1.0.0;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_4)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'boost_signals_mt_shared_EXPORTS'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_4 = "'BOOST_SIGNALS_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/signals/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/Release;
				LIBRARY_SEARCH_PATHS = "";
				LIBRARY_STYLE = DYNAMIC;
				MACH_O_TYPE = mh_dylib;
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-fPIC",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-fPIC",
				);
				OTHER_LDFLAGS = (
					"-dynamiclib",
					"-headerpad_max_install_names",
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_signals-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		29E2BC029E2BC029E2BC0000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DYLIB_COMPATIBILITY_VERSION = 1.0.0;
				DYLIB_CURRENT_VERSION = 1.0.0;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_4)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'boost_signals_mt_shared_EXPORTS'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_4 = "'BOOST_SIGNALS_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/signals/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/MinSizeRel;
				LIBRARY_SEARCH_PATHS = "";
				LIBRARY_STYLE = DYNAMIC;
				MACH_O_TYPE = mh_dylib;
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-fPIC",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-fPIC",
				);
				OTHER_LDFLAGS = (
					"-dynamiclib",
					"-headerpad_max_install_names",
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_signals-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		29E36C029E36C029E36C0000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DYLIB_COMPATIBILITY_VERSION = 1.0.0;
				DYLIB_CURRENT_VERSION = 1.0.0;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_4)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'boost_signals_mt_shared_EXPORTS'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_4 = "'BOOST_SIGNALS_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/signals/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/RelWithDebInfo;
				LIBRARY_SEARCH_PATHS = "";
				LIBRARY_STYLE = DYNAMIC;
				MACH_O_TYPE = mh_dylib;
				OTHER_CFLAGS = (
					"-fPIC",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-fPIC",
				);
				OTHER_LDFLAGS = (
					"-dynamiclib",
					"-headerpad_max_install_names",
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_signals-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		29EDEC029EDEC029EDEC0000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DYLIB_COMPATIBILITY_VERSION = 1.0.0;
				DYLIB_CURRENT_VERSION = 1.0.0;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_4)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'boost_signals_mt_shared_debug_EXPORTS'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_4 = "'BOOST_SIGNALS_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/signals/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/Debug;
				LIBRARY_SEARCH_PATHS = "";
				LIBRARY_STYLE = DYNAMIC;
				MACH_O_TYPE = mh_dylib;
				OTHER_CFLAGS = (
					"-fPIC",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-fPIC",
				);
				OTHER_LDFLAGS = (
					"-dynamiclib",
					"-headerpad_max_install_names",
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_signals-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		29EFAE029EFAE029EFAE0000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DYLIB_COMPATIBILITY_VERSION = 1.0.0;
				DYLIB_CURRENT_VERSION = 1.0.0;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_4)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'boost_signals_mt_shared_debug_EXPORTS'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_4 = "'BOOST_SIGNALS_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/signals/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/Release;
				LIBRARY_SEARCH_PATHS = "";
				LIBRARY_STYLE = DYNAMIC;
				MACH_O_TYPE = mh_dylib;
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-fPIC",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-fPIC",
				);
				OTHER_LDFLAGS = (
					"-dynamiclib",
					"-headerpad_max_install_names",
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_signals-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		29F0EA029F0EA029F0EA0000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DYLIB_COMPATIBILITY_VERSION = 1.0.0;
				DYLIB_CURRENT_VERSION = 1.0.0;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_4)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'boost_signals_mt_shared_debug_EXPORTS'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_4 = "'BOOST_SIGNALS_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/signals/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/MinSizeRel;
				LIBRARY_SEARCH_PATHS = "";
				LIBRARY_STYLE = DYNAMIC;
				MACH_O_TYPE = mh_dylib;
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-fPIC",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-fPIC",
				);
				OTHER_LDFLAGS = (
					"-dynamiclib",
					"-headerpad_max_install_names",
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_signals-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		29F252029F252029F2520000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DYLIB_COMPATIBILITY_VERSION = 1.0.0;
				DYLIB_CURRENT_VERSION = 1.0.0;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_4)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'boost_signals_mt_shared_debug_EXPORTS'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_4 = "'BOOST_SIGNALS_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/signals/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/RelWithDebInfo;
				LIBRARY_SEARCH_PATHS = "";
				LIBRARY_STYLE = DYNAMIC;
				MACH_O_TYPE = mh_dylib;
				OTHER_CFLAGS = (
					"-fPIC",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-fPIC",
				);
				OTHER_LDFLAGS = (
					"-dynamiclib",
					"-headerpad_max_install_names",
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_signals-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		29FBDC029FBDC029FBDC0000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_SIGNALS_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/signals/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_signals-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		2A000002A000002A00000000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_SIGNALS_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/signals/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_signals-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		2A016D02A016D02A016D0000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_SIGNALS_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/signals/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_signals-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		2A02DB02A02DB02A02DB0000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_SIGNALS_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/signals/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_signals-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		2A0CBB02A0CBB02A0CBB0000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_SIGNALS_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/signals/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_signals-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		2A0CE502A0CE502A0CE50000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_SIGNALS_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/signals/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_signals-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		2A0E4C02A0E4C02A0E4C0000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_SIGNALS_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/signals/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_signals-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		2A0FB902A0FB902A0FB90000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_SIGNALS_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/signals/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_signals-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		2A163702A163702A16370000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/signals2/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "signals2-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		2A175002A175002A17500000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/signals2/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "signals2-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		2A186402A186402A18640000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/signals2/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "signals2-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		2A197602A197602A19760000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/signals2/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "signals2-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		2A1E3702A1E3702A1E370000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/statechart/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "statechart-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		2A1F0F02A1F0F02A1F0F0000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/statechart/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "statechart-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		2A202402A202402A20240000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/statechart/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "statechart-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		2A213A02A213A02A213A0000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/statechart/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "statechart-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		2A263C02A263C02A263C0000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tr1/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "tr1-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		2A271702A271702A27170000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tr1/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "tr1-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		2A282B02A282B02A282B0000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tr1/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "tr1-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		2A293F02A293F02A293F0000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tr1/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "tr1-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		2A2E4302A2E4302A2E430000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/units/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/lambda/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "units-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		2A2EFD02A2EFD02A2EFD0000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/units/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/lambda/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "units-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		2A304E02A304E02A304E0000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/units/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/lambda/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "units-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		2A312702A312702A31270000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/units/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/lambda/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "units-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		2A361502A361502A36150000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/wave/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/filesystem/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/program_options/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "wave-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		2A376902A376902A37690000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/wave/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/filesystem/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/program_options/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "wave-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		2A388002A388002A38800000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/wave/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/filesystem/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/program_options/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "wave-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		2A399802A399802A39980000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/wave/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/filesystem/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/program_options/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "wave-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		2A3E5F02A3E5F02A3E5F0000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/wave/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/filesystem/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/program_options/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = boost_wave;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		2A3F7B02A3F7B02A3F7B0000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/wave/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/filesystem/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/program_options/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = boost_wave;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		2A409302A409302A40930000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/wave/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/filesystem/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/program_options/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = boost_wave;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		2A41AB02A41AB02A41AB0000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/wave/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/filesystem/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/program_options/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = boost_wave;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		2A4F7502A4F7502A4F750000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DYLIB_COMPATIBILITY_VERSION = 1.0.0;
				DYLIB_CURRENT_VERSION = 1.0.0;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'boost_wave_mt_shared_EXPORTS'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/wave/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/filesystem/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/program_options/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/Debug;
				LIBRARY_SEARCH_PATHS = "";
				LIBRARY_STYLE = DYNAMIC;
				MACH_O_TYPE = mh_dylib;
				OTHER_CFLAGS = (
					"-fPIC",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-fPIC",
				);
				OTHER_LDFLAGS = (
					"-dynamiclib",
					"-headerpad_max_install_names",
					"/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/Debug/libboost_filesystem-mt.dylib",
					"/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/Debug/libboost_thread-mt.dylib",
					"/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/Debug/libboost_date_time-mt.dylib",
					"/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/Debug/libboost_system-mt.dylib",
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_wave-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		2A512302A512302A51230000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DYLIB_COMPATIBILITY_VERSION = 1.0.0;
				DYLIB_CURRENT_VERSION = 1.0.0;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'boost_wave_mt_shared_EXPORTS'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/wave/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/filesystem/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/program_options/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/Release;
				LIBRARY_SEARCH_PATHS = "";
				LIBRARY_STYLE = DYNAMIC;
				MACH_O_TYPE = mh_dylib;
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-fPIC",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-fPIC",
				);
				OTHER_LDFLAGS = (
					"-dynamiclib",
					"-headerpad_max_install_names",
					"/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/Release/libboost_filesystem-mt.dylib",
					"/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/Release/libboost_thread-mt.dylib",
					"/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/Release/libboost_date_time-mt.dylib",
					"/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/Release/libboost_system-mt.dylib",
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_wave-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		2A52C202A52C202A52C20000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DYLIB_COMPATIBILITY_VERSION = 1.0.0;
				DYLIB_CURRENT_VERSION = 1.0.0;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'boost_wave_mt_shared_EXPORTS'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/wave/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/filesystem/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/program_options/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/MinSizeRel;
				LIBRARY_SEARCH_PATHS = "";
				LIBRARY_STYLE = DYNAMIC;
				MACH_O_TYPE = mh_dylib;
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-fPIC",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-fPIC",
				);
				OTHER_LDFLAGS = (
					"-dynamiclib",
					"-headerpad_max_install_names",
					"/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/MinSizeRel/libboost_filesystem-mt.dylib",
					"/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/MinSizeRel/libboost_thread-mt.dylib",
					"/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/MinSizeRel/libboost_date_time-mt.dylib",
					"/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/MinSizeRel/libboost_system-mt.dylib",
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_wave-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		2A533B02A533B02A533B0000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DYLIB_COMPATIBILITY_VERSION = 1.0.0;
				DYLIB_CURRENT_VERSION = 1.0.0;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'boost_wave_mt_shared_EXPORTS'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/wave/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/filesystem/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/program_options/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/RelWithDebInfo;
				LIBRARY_SEARCH_PATHS = "";
				LIBRARY_STYLE = DYNAMIC;
				MACH_O_TYPE = mh_dylib;
				OTHER_CFLAGS = (
					"-fPIC",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-fPIC",
				);
				OTHER_LDFLAGS = (
					"-dynamiclib",
					"-headerpad_max_install_names",
					"/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/RelWithDebInfo/libboost_filesystem-mt.dylib",
					"/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/RelWithDebInfo/libboost_thread-mt.dylib",
					"/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/RelWithDebInfo/libboost_date_time-mt.dylib",
					"/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/RelWithDebInfo/libboost_system-mt.dylib",
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_wave-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		2A607F02A607F02A607F0000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DYLIB_COMPATIBILITY_VERSION = 1.0.0;
				DYLIB_CURRENT_VERSION = 1.0.0;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'boost_wave_mt_shared_debug_EXPORTS'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/wave/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/filesystem/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/program_options/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/Debug;
				LIBRARY_SEARCH_PATHS = "";
				LIBRARY_STYLE = DYNAMIC;
				MACH_O_TYPE = mh_dylib;
				OTHER_CFLAGS = (
					"-fPIC",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-fPIC",
				);
				OTHER_LDFLAGS = (
					"-dynamiclib",
					"-headerpad_max_install_names",
					"/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/Debug/libboost_filesystem-mt-d.dylib",
					"/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/Debug/libboost_thread-mt-d.dylib",
					"/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/Debug/libboost_date_time-mt-d.dylib",
					"/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/Debug/libboost_system-mt-d.dylib",
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_wave-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		2A622E02A622E02A622E0000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DYLIB_COMPATIBILITY_VERSION = 1.0.0;
				DYLIB_CURRENT_VERSION = 1.0.0;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'boost_wave_mt_shared_debug_EXPORTS'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/wave/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/filesystem/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/program_options/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/Release;
				LIBRARY_SEARCH_PATHS = "";
				LIBRARY_STYLE = DYNAMIC;
				MACH_O_TYPE = mh_dylib;
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-fPIC",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-fPIC",
				);
				OTHER_LDFLAGS = (
					"-dynamiclib",
					"-headerpad_max_install_names",
					"/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/Release/libboost_filesystem-mt-d.dylib",
					"/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/Release/libboost_thread-mt-d.dylib",
					"/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/Release/libboost_date_time-mt-d.dylib",
					"/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/Release/libboost_system-mt-d.dylib",
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_wave-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		2A62AA02A62AA02A62AA0000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DYLIB_COMPATIBILITY_VERSION = 1.0.0;
				DYLIB_CURRENT_VERSION = 1.0.0;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'boost_wave_mt_shared_debug_EXPORTS'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/wave/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/filesystem/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/program_options/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/MinSizeRel;
				LIBRARY_SEARCH_PATHS = "";
				LIBRARY_STYLE = DYNAMIC;
				MACH_O_TYPE = mh_dylib;
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"-fPIC",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-fPIC",
				);
				OTHER_LDFLAGS = (
					"-dynamiclib",
					"-headerpad_max_install_names",
					"/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/MinSizeRel/libboost_filesystem-mt-d.dylib",
					"/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/MinSizeRel/libboost_thread-mt-d.dylib",
					"/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/MinSizeRel/libboost_date_time-mt-d.dylib",
					"/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/MinSizeRel/libboost_system-mt-d.dylib",
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_wave-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		2A63EB02A63EB02A63EB0000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DYLIB_COMPATIBILITY_VERSION = 1.0.0;
				DYLIB_CURRENT_VERSION = 1.0.0;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'boost_wave_mt_shared_debug_EXPORTS'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/wave/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/filesystem/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/program_options/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/RelWithDebInfo;
				LIBRARY_SEARCH_PATHS = "";
				LIBRARY_STYLE = DYNAMIC;
				MACH_O_TYPE = mh_dylib;
				OTHER_CFLAGS = (
					"-fPIC",
				);
				OTHER_CPLUSPLUSFLAGS = (
					"-fPIC",
				);
				OTHER_LDFLAGS = (
					"-dynamiclib",
					"-headerpad_max_install_names",
					"/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/RelWithDebInfo/libboost_filesystem-mt-d.dylib",
					"/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/RelWithDebInfo/libboost_thread-mt-d.dylib",
					"/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/RelWithDebInfo/libboost_date_time-mt-d.dylib",
					"/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/RelWithDebInfo/libboost_system-mt-d.dylib",
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_wave-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		2A719002A719002A71900000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/wave/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/filesystem/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/program_options/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_wave-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		2A730302A730302A73030000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/wave/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/filesystem/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/program_options/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_wave-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		2A747002A747002A74700000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/wave/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/filesystem/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/program_options/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_wave-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		2A75DB02A75DB02A75DB0000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/wave/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/filesystem/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/program_options/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_wave-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		2A818E02A818E02A818E0000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/wave/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/filesystem/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/program_options/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_wave-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		2A81C302A81C302A81C30000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/wave/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/filesystem/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/program_options/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_wave-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		2A847102A847102A84710000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/wave/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/filesystem/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/program_options/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_wave-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		2A85DB02A85DB02A85DB0000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/wave/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/filesystem/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/program_options/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_wave-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		2A93E502A93E502A93E50000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bcp/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/filesystem/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-headerpad_max_install_names",
					"/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/Debug/libboost_system-mt-d.a",
					"/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/Debug/libboost_filesystem-mt-d.a",
					"/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/Debug/libboost_prg_exec_monitor-mt-d.a",
					"/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/Debug/libboost_regex-mt-d.a",
					"/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/Debug/libboost_system-mt-d.a",
					/opt/local/lib/libicuuc.dylib,
					/opt/local/lib/libicui18n.dylib,
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = bcp;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/bin;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		2A94E002A94E002A94E00000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bcp/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/filesystem/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-headerpad_max_install_names",
					"/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/Release/libboost_system-mt.a",
					"/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/Release/libboost_filesystem-mt.a",
					"/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/Release/libboost_prg_exec_monitor-mt.a",
					"/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/Release/libboost_regex-mt.a",
					"/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/Release/libboost_system-mt.a",
					/opt/local/lib/libicuuc.dylib,
					/opt/local/lib/libicui18n.dylib,
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = bcp;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/bin;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		2A963A02A963A02A963A0000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bcp/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/filesystem/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-headerpad_max_install_names",
					"/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/MinSizeRel/libboost_system-mt.a",
					"/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/MinSizeRel/libboost_filesystem-mt.a",
					"/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/MinSizeRel/libboost_prg_exec_monitor-mt.a",
					"/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/MinSizeRel/libboost_regex-mt.a",
					"/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/MinSizeRel/libboost_system-mt.a",
					/opt/local/lib/libicuuc.dylib,
					/opt/local/lib/libicui18n.dylib,
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = bcp;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/bin;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		2A979502A979502A97950000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bcp/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/filesystem/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-headerpad_max_install_names",
					"/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/RelWithDebInfo/libboost_system-mt.a",
					"/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/RelWithDebInfo/libboost_filesystem-mt.a",
					"/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/RelWithDebInfo/libboost_prg_exec_monitor-mt.a",
					"/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/RelWithDebInfo/libboost_regex-mt.a",
					"/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/RelWithDebInfo/libboost_system-mt.a",
					/opt/local/lib/libicuuc.dylib,
					/opt/local/lib/libicui18n.dylib,
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = bcp;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/bin;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		2AA5F902AA5F902AA5F90000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/inspect/include,
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-headerpad_max_install_names",
					"/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/Debug/libboost_filesystem-mt-d.a",
					"/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/Debug/libboost_regex-mt-d.a",
					"/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/Debug/libboost_system-mt-d.a",
					/opt/local/lib/libicuuc.dylib,
					/opt/local/lib/libicui18n.dylib,
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = inspect;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/bin;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		2AA62C02AA62C02AA62C0000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/inspect/include,
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-headerpad_max_install_names",
					"/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/Release/libboost_filesystem-mt.a",
					"/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/Release/libboost_regex-mt.a",
					"/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/Release/libboost_system-mt.a",
					/opt/local/lib/libicuuc.dylib,
					/opt/local/lib/libicui18n.dylib,
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = inspect;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/bin;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		2AA79802AA79802AA7980000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/inspect/include,
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-headerpad_max_install_names",
					"/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/MinSizeRel/libboost_filesystem-mt.a",
					"/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/MinSizeRel/libboost_regex-mt.a",
					"/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/MinSizeRel/libboost_system-mt.a",
					/opt/local/lib/libicuuc.dylib,
					/opt/local/lib/libicui18n.dylib,
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = inspect;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/bin;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		2AAA4C02AAA4C02AAA4C0000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/inspect/include,
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-headerpad_max_install_names",
					"/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/RelWithDebInfo/libboost_filesystem-mt.a",
					"/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/RelWithDebInfo/libboost_regex-mt.a",
					"/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/RelWithDebInfo/libboost_system-mt.a",
					/opt/local/lib/libicuuc.dylib,
					/opt/local/lib/libicui18n.dylib,
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = inspect;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/bin;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
/* End XCBuildConfiguration section */

/* Begin XCConfigurationList section */
		22A4D8022A4D8022A4D80000 /* Build configuration list for PBXProject "Boost" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				22A4EA022A4EA022A4EA0000 /* Debug */,
				22A505022A505022A5050000 /* Release */,
				22A52A022A52A022A52A0000 /* MinSizeRel */,
				22A541022A541022A5410000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		22A735022A735022A7350000 /* Build configuration list for PBXAggregateTarget "ALL_BUILD" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				22A78D022A78D022A78D0000 /* Debug */,
				22A8B8022A8B8022A8B80000 /* Release */,
				22A9D7022A9D7022A9D70000 /* MinSizeRel */,
				22AAF2022AAF2022AAF20000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		22AF5A022AF5A022AF5A0000 /* Build configuration list for PBXAggregateTarget "Continuous" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				22AFB1022AFB1022AFB10000 /* Debug */,
				22B0D9022B0D9022B0D90000 /* Release */,
				22B1F4022B1F4022B1F40000 /* MinSizeRel */,
				22B30F022B30F022B30F0000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		22B709022B709022B7090000 /* Build configuration list for PBXAggregateTarget "Experimental" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				22B761022B761022B7610000 /* Debug */,
				22B88C022B88C022B88C0000 /* Release */,
				22B9AB022B9AB022B9AB0000 /* MinSizeRel */,
				22BAC6022BAC6022BAC60000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		22BED2022BED2022BED20000 /* Build configuration list for PBXAggregateTarget "Nightly" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				22BF12022BF12022BF120000 /* Debug */,
				22C03D022C03D022C03D0000 /* Release */,
				22C15C022C15C022C15C0000 /* MinSizeRel */,
				22C277022C277022C2770000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		22C672022C672022C6720000 /* Build configuration list for PBXAggregateTarget "NightlyMemoryCheck" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				22C6CE022C6CE022C6CE0000 /* Debug */,
				22C7F4022C7F4022C7F40000 /* Release */,
				22C90D022C90D022C90D0000 /* MinSizeRel */,
				22CA26022CA26022CA260000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		22CE52022CE52022CE520000 /* Build configuration list for PBXAggregateTarget "RUN_TESTS" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				22CE79022CE79022CE790000 /* Debug */,
				22CFA4022CFA4022CFA40000 /* Release */,
				22D0C3022D0C3022D0C30000 /* MinSizeRel */,
				22D1DE022D1DE022D1DE0000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		22D5BF022D5BF022D5BF0000 /* Build configuration list for PBXAggregateTarget "install" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				22D5F2022D5F2022D5F20000 /* Debug */,
				22D71A022D71A022D71A0000 /* Release */,
				22D835022D835022D8350000 /* MinSizeRel */,
				22D950022D950022D9500000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		22DCF2022DCF2022DCF20000 /* Build configuration list for PBXAggregateTarget "modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				22DD61022DD61022DD610000 /* Debug */,
				22DE8C022DE8C022DE8C0000 /* Release */,
				22DFAB022DFAB022DFAB0000 /* MinSizeRel */,
				22E0C6022E0C6022E0C60000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		22E4C3022E4C3022E4C30000 /* Build configuration list for PBXAggregateTarget "package" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				22E519022E519022E5190000 /* Debug */,
				22E645022E645022E6450000 /* Release */,
				22E760022E760022E7600000 /* MinSizeRel */,
				22E87B022E87B022E87B0000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		22EC46022EC46022EC460000 /* Build configuration list for PBXAggregateTarget "preprocessor-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				22EC98022EC98022EC980000 /* Debug */,
				22EDC0022EDC0022EDC00000 /* Release */,
				22EEE1022EEE1022EEE10000 /* MinSizeRel */,
				22F000022F000022F0000000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		22F48C022F48C022F48C0000 /* Build configuration list for PBXAggregateTarget "concept_check-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				22F4DD022F4DD022F4DD0000 /* Debug */,
				22F56E022F56E022F56E0000 /* Release */,
				22F69B022F69B022F69B0000 /* MinSizeRel */,
				22F7C1022F7C1022F7C10000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		2300E402300E402300E40000 /* Build configuration list for PBXAggregateTarget "property_map-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				230137023013702301370000 /* Debug */,
				23026A023026A023026A0000 /* Release */,
				230396023039602303960000 /* MinSizeRel */,
				2304C202304C202304C20000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		230967023096702309670000 /* Build configuration list for PBXAggregateTarget "config-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				2309BB02309BB02309BB0000 /* Debug */,
				230AE10230AE10230AE10000 /* Release */,
				230C010230C010230C010000 /* MinSizeRel */,
				230D210230D210230D210000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		2311AB02311AB02311AB0000 /* Build configuration list for PBXAggregateTarget "mpl-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				2311FB02311FB02311FB0000 /* Debug */,
				231320023132002313200000 /* Release */,
				231436023143602314360000 /* MinSizeRel */,
				23154C023154C023154C0000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		2319BA02319BA02319BA0000 /* Build configuration list for PBXAggregateTarget "type_traits-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				231A0C0231A0C0231A0C0000 /* Debug */,
				231B350231B350231B350000 /* Release */,
				231C4C0231C4C0231C4C0000 /* MinSizeRel */,
				231D610231D610231D610000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		2321CC02321CC02321CC0000 /* Build configuration list for PBXAggregateTarget "function-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				232221023222102322210000 /* Debug */,
				232346023234602323460000 /* Release */,
				23245C023245C023245C0000 /* MinSizeRel */,
				232572023257202325720000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		2329DB02329DB02329DB0000 /* Build configuration list for PBXAggregateTarget "iterator-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				232A300232A300232A300000 /* Debug */,
				232B550232B550232B550000 /* Release */,
				232C6B0232C6B0232C6B0000 /* MinSizeRel */,
				232D810232D810232D810000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		2330FC02330FC02330FC0000 /* Build configuration list for PBXAggregateTarget "smart_ptr-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				233242023324202332420000 /* Debug */,
				233365023336502333650000 /* Release */,
				23347C023347C023347C0000 /* MinSizeRel */,
				233591023359102335910000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		2339FB02339FB02339FB0000 /* Build configuration list for PBXAggregateTarget "exception-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				233A4E0233A4E0233A4E0000 /* Debug */,
				233B770233B770233B770000 /* Release */,
				233C8E0233C8E0233C8E0000 /* MinSizeRel */,
				233DA30233DA30233DA30000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		23411A023411A023411A0000 /* Build configuration list for PBXAggregateTarget "utility-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				234134023413402341340000 /* Debug */,
				234378023437802343780000 /* Release */,
				234496023449602344960000 /* MinSizeRel */,
				2345AA02345AA02345AA0000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		234A120234A120234A120000 /* Build configuration list for PBXAggregateTarget "integer-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				234A660234A660234A660000 /* Debug */,
				234B8B0234B8B0234B8B0000 /* Release */,
				234C9F0234C9F0234C9F0000 /* MinSizeRel */,
				234DB30234DB30234DB30000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		23521C023521C023521C0000 /* Build configuration list for PBXAggregateTarget "detail-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				23526D023526D023526D0000 /* Debug */,
				235393023539302353930000 /* Release */,
				2354A702354A702354A70000 /* MinSizeRel */,
				2355BB02355BB02355BB0000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		235A230235A230235A230000 /* Build configuration list for PBXAggregateTarget "static_assert-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				235A770235A770235A770000 /* Debug */,
				235B9F0235B9F0235B9F0000 /* Release */,
				235CB60235CB60235CB60000 /* MinSizeRel */,
				235DCB0235DCB0235DCB0000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		236236023623602362360000 /* Build configuration list for PBXAggregateTarget "tuple-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				236286023628602362860000 /* Debug */,
				2363AC02363AC02363AC0000 /* Release */,
				2364C202364C202364C20000 /* MinSizeRel */,
				2365D802365D802365D80000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		236A410236A410236A410000 /* Build configuration list for PBXAggregateTarget "function_types-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				236A950236A950236A950000 /* Debug */,
				236BBD0236BBD0236BBD0000 /* Release */,
				236CD40236CD40236CD40000 /* MinSizeRel */,
				236DEB0236DEB0236DEB0000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		237258023725802372580000 /* Build configuration list for PBXAggregateTarget "fusion-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				2372A902372A902372A90000 /* Debug */,
				2373C202373C202373C20000 /* Release */,
				2374D402374D402374D40000 /* MinSizeRel */,
				2375E602375E602375E60000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		237A590237A590237A590000 /* Build configuration list for PBXAggregateTarget "typeof-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				237AAA0237AAA0237AAA0000 /* Debug */,
				237BCF0237BCF0237BCF0000 /* Release */,
				237CE40237CE40237CE40000 /* MinSizeRel */,
				237DF90237DF90237DF90000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		238263023826302382630000 /* Build configuration list for PBXAggregateTarget "proto-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				2382B302382B302382B30000 /* Debug */,
				2383CC02383CC02383CC0000 /* Release */,
				2384E002384E002384E00000 /* MinSizeRel */,
				2385F402385F402385F40000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		238A650238A650238A650000 /* Build configuration list for PBXAggregateTarget "intrusive-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				238AB80238AB80238AB80000 /* Debug */,
				238BE00238BE00238BE00000 /* Release */,
				238CF70238CF70238CF70000 /* MinSizeRel */,
				238E0E0238E0E0238E0E0000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		239278023927802392780000 /* Build configuration list for PBXAggregateTarget "logic-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				2392C802392C802392C80000 /* Debug */,
				2393ED02393ED02393ED0000 /* Release */,
				2394FD02394FD02394FD0000 /* MinSizeRel */,
				239616023961602396160000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		239A7E0239A7E0239A7E0000 /* Build configuration list for PBXAggregateTarget "numeric-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				239AD00239AD00239AD00000 /* Debug */,
				239BE90239BE90239BE90000 /* Release */,
				239CFB0239CFB0239CFB0000 /* MinSizeRel */,
				239E0D0239E0D0239E0D0000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		23A280023A280023A2800000 /* Build configuration list for PBXAggregateTarget "xpressive-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				23A2D4023A2D4023A2D40000 /* Debug */,
				23A3B4023A3B4023A3B40000 /* Release */,
				23A4C9023A4C9023A4C90000 /* MinSizeRel */,
				23A643023A643023A6430000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		23AA8A023AA8A023AA8A0000 /* Build configuration list for PBXAggregateTarget "optional-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				23AADF023AADF023AADF0000 /* Debug */,
				23AC03023AC03023AC030000 /* Release */,
				23AD18023AD18023AD180000 /* MinSizeRel */,
				23AE2D023AE2D023AE2D0000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		23B2A5023B2A5023B2A50000 /* Build configuration list for PBXAggregateTarget "tokenizer-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				23B2F9023B2F9023B2F90000 /* Debug */,
				23B421023B421023B4210000 /* Release */,
				23B538023B538023B5380000 /* MinSizeRel */,
				23B64F023B64F023B64F0000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		23BAB8023BAB8023BAB80000 /* Build configuration list for PBXAggregateTarget "io-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				23BB0A023BB0A023BB0A0000 /* Debug */,
				23BC28023BC28023BC280000 /* Release */,
				23BD44023BD44023BD440000 /* MinSizeRel */,
				23BE58023BE58023BE580000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		23C304023C304023C3040000 /* Build configuration list for PBXAggregateTarget "bind-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				23C2E0023C2E0023C2E00000 /* Debug */,
				23C440023C440023C4400000 /* Release */,
				23C555023C555023C5550000 /* MinSizeRel */,
				23C66A023C66A023C66A0000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		23CAD5023CAD5023CAD50000 /* Build configuration list for PBXAggregateTarget "date_time-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				23CB28023CB28023CB280000 /* Debug */,
				23CC44023CC44023CC440000 /* Release */,
				23CD57023CD57023CD570000 /* MinSizeRel */,
				23CE6A023CE6A023CE6A0000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		23D2C1023D2C1023D2C10000 /* Build configuration list for PBXAggregateTarget "boost_date_time" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				23D32E023D32E023D32E0000 /* Debug */,
				23D444023D444023D4440000 /* Release */,
				23D557023D557023D5570000 /* MinSizeRel */,
				23D669023D669023D6690000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		23DE0E023DE0E023DE0E0000 /* Build configuration list for PBXNativeTarget "libboost_date_time-mt.dylib" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				23DE49023DE49023DE490000 /* Debug */,
				23DE79023DE79023DE790000 /* Release */,
				23E19E023E19E023E19E0000 /* MinSizeRel */,
				23E33D023E33D023E33D0000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		23EAFF023EAFF023EAFF0000 /* Build configuration list for PBXNativeTarget "libboost_date_time-mt-d.dylib" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				23EB3A023EB3A023EB3A0000 /* Debug */,
				23EB73023EB73023EB730000 /* Release */,
				23EE90023EE90023EE900000 /* MinSizeRel */,
				23EEA8023EEA8023EEA80000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		23F7FD023F7FD023F7FD0000 /* Build configuration list for PBXNativeTarget "libboost_date_time-mt.a" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				23F838023F838023F8380000 /* Debug */,
				23F9AE023F9AE023F9AE0000 /* Release */,
				23FB17023FB17023FB170000 /* MinSizeRel */,
				240078024007802400780000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		2407D002407D002407D00000 /* Build configuration list for PBXNativeTarget "libboost_date_time-mt-d.a" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				24080B024080B024080B0000 /* Debug */,
				240982024098202409820000 /* Release */,
				240AEE0240AEE0240AEE0000 /* MinSizeRel */,
				240C5A0240C5A0240C5A0000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		241130024113002411300000 /* Build configuration list for PBXAggregateTarget "thread-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				241184024118402411840000 /* Debug */,
				24129D024129D024129D0000 /* Release */,
				2413AF02413AF02413AF0000 /* MinSizeRel */,
				2414C102414C102414C10000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		24191D024191D024191D0000 /* Build configuration list for PBXAggregateTarget "boost_thread" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				241981024198102419810000 /* Debug */,
				241A970241A970241A970000 /* Release */,
				241BA90241BA90241BA90000 /* MinSizeRel */,
				241CBB0241CBB0241CBB0000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		242455024245502424550000 /* Build configuration list for PBXNativeTarget "libboost_thread-mt.dylib" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				242490024249002424900000 /* Debug */,
				242640024264002426400000 /* Release */,
				2427DE02427DE02427DE0000 /* MinSizeRel */,
				242979024297902429790000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		243134024313402431340000 /* Build configuration list for PBXNativeTarget "libboost_thread-mt-d.dylib" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				24316F024316F024316F0000 /* Debug */,
				2431A702431A702431A70000 /* Release */,
				2434C102434C102434C10000 /* MinSizeRel */,
				24365E024365E024365E0000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		243E1F0243E1F0243E1F0000 /* Build configuration list for PBXNativeTarget "libboost_thread-mt.a" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				243E5A0243E5A0243E5A0000 /* Debug */,
				243E920243E920243E920000 /* Release */,
				244140024414002441400000 /* MinSizeRel */,
				2442AA02442AA02442AA0000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		2449F902449F902449F90000 /* Build configuration list for PBXNativeTarget "libboost_thread-mt-d.a" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				244A340244A340244A340000 /* Debug */,
				244BA90244BA90244BA90000 /* Release */,
				244D120244D120244D120000 /* MinSizeRel */,
				244E7D0244E7D0244E7D0000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		24534A024534A024534A0000 /* Build configuration list for PBXAggregateTarget "regex-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				245399024539902453990000 /* Debug */,
				2454B202454B202454B20000 /* Release */,
				2455C602455C602455C60000 /* MinSizeRel */,
				2456D802456D802456D80000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		245B370245B370245B370000 /* Build configuration list for PBXAggregateTarget "boost_regex" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				245B940245B940245B940000 /* Debug */,
				245CAF0245CAF0245CAF0000 /* Release */,
				245DC40245DC40245DC40000 /* MinSizeRel */,
				245EDD0245EDD0245EDD0000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		2470C702470C702470C70000 /* Build configuration list for PBXNativeTarget "libboost_regex-mt.dylib" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				247102024710202471020000 /* Debug */,
				2472B102472B102472B10000 /* Release */,
				247451024745102474510000 /* MinSizeRel */,
				247471024747102474710000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		2484E802484E802484E80000 /* Build configuration list for PBXNativeTarget "libboost_regex-mt-d.dylib" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				248523024852302485230000 /* Debug */,
				2486D702486D702486D70000 /* Release */,
				248877024887702488770000 /* MinSizeRel */,
				248A140248A140248A140000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		249922024992202499220000 /* Build configuration list for PBXNativeTarget "libboost_regex-mt.a" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				24995D024995D024995D0000 /* Debug */,
				249AD10249AD10249AD10000 /* Release */,
				249C3D0249C3D0249C3D0000 /* MinSizeRel */,
				249DA90249DA90249DA90000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		24AC33024AC33024AC330000 /* Build configuration list for PBXNativeTarget "libboost_regex-mt-d.a" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				24AC6E024AC6E024AC6E0000 /* Debug */,
				24ADE8024ADE8024ADE80000 /* Release */,
				24AF55024AF55024AF550000 /* MinSizeRel */,
				24B0C0024B0C0024B0C00000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		24B58D024B58D024B58D0000 /* Build configuration list for PBXAggregateTarget "algorithm-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				24B5E1024B5E1024B5E10000 /* Debug */,
				24B6FC024B6FC024B6FC0000 /* Release */,
				24B80F024B80F024B80F0000 /* MinSizeRel */,
				24B922024B922024B9220000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		24BD93024BD93024BD930000 /* Build configuration list for PBXAggregateTarget "range-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				24BDE6024BDE6024BDE60000 /* Debug */,
				24BEFF024BEFF024BEFF0000 /* Release */,
				24C013024C013024C0130000 /* MinSizeRel */,
				24C125024C125024C1250000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		24C594024C594024C5940000 /* Build configuration list for PBXAggregateTarget "foreach-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				24C5E6024C5E6024C5E60000 /* Debug */,
				24C6FF024C6FF024C6FF0000 /* Release */,
				24C811024C811024C8110000 /* MinSizeRel */,
				24C923024C923024C9230000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		24CD96024CD96024CD960000 /* Build configuration list for PBXAggregateTarget "array-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				24CDE6024CDE6024CDE60000 /* Debug */,
				24CF0A024CF0A024CF0A0000 /* Release */,
				24D01F024D01F024D01F0000 /* MinSizeRel */,
				24D134024D134024D1340000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		24D59F024D59F024D59F0000 /* Build configuration list for PBXAggregateTarget "functional-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				24D5F4024D5F4024D5F40000 /* Debug */,
				24D71B024D71B024D71B0000 /* Release */,
				24D832024D832024D8320000 /* MinSizeRel */,
				24D949024D949024D9490000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		24DDB4024DDB4024DDB40000 /* Build configuration list for PBXAggregateTarget "unordered-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				24DE07024DE07024DE070000 /* Debug */,
				24DF23024DF23024DF230000 /* Release */,
				24E037024E037024E0370000 /* MinSizeRel */,
				24E14B024E14B024E14B0000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		24E5F3024E5F3024E5F30000 /* Build configuration list for PBXAggregateTarget "pool-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				24E5D8024E5D8024E5D80000 /* Debug */,
				24E737024E737024E7370000 /* Release */,
				24E84C024E84C024E84C0000 /* MinSizeRel */,
				24E961024E961024E9610000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		24EDC9024EDC9024EDC90000 /* Build configuration list for PBXAggregateTarget "spirit-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				24EE1D024EE1D024EE1D0000 /* Debug */,
				24EF36024EF36024EF360000 /* Release */,
				24F048024F048024F0480000 /* MinSizeRel */,
				24F15A024F15A024F15A0000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		24F5CA024F5CA024F5CA0000 /* Build configuration list for PBXAggregateTarget "variant-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				24F61F024F61F024F61F0000 /* Debug */,
				24F743024F743024F7430000 /* Release */,
				24F858024F858024F8580000 /* MinSizeRel */,
				24F96D024F96D024F96D0000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		2501DA02501DA02501DA0000 /* Build configuration list for PBXAggregateTarget "serialization-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				25022B025022B025022B0000 /* Debug */,
				250347025034702503470000 /* Release */,
				25045A025045A025045A0000 /* MinSizeRel */,
				25056D025056D025056D0000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		2509E502509E502509E50000 /* Build configuration list for PBXAggregateTarget "boost_serialization" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				250A340250A340250A340000 /* Debug */,
				250B4E0250B4E0250B4E0000 /* Release */,
				250C640250C640250C640000 /* MinSizeRel */,
				250D7C0250D7C0250D7C0000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		25258E025258E025258E0000 /* Build configuration list for PBXNativeTarget "libboost_serialization-mt.dylib" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				2525C902525C902525C90000 /* Debug */,
				252604025260402526040000 /* Release */,
				252918025291802529180000 /* MinSizeRel */,
				252930025293002529300000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		253E2B0253E2B0253E2B0000 /* Build configuration list for PBXNativeTarget "libboost_serialization-mt-d.dylib" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				253E660253E660253E660000 /* Debug */,
				25401C025401C025401C0000 /* Release */,
				254043025404302540430000 /* MinSizeRel */,
				254358025435802543580000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		2556A902556A902556A90000 /* Build configuration list for PBXNativeTarget "libboost_serialization-mt.a" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				2556E402556E402556E40000 /* Debug */,
				25571D025571D025571D0000 /* Release */,
				2559C802559C802559C80000 /* MinSizeRel */,
				255B320255B320255B320000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		256DF60256DF60256DF60000 /* Build configuration list for PBXNativeTarget "libboost_serialization-mt-d.a" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				256E310256E310256E310000 /* Debug */,
				256E6A0256E6A0256E6A0000 /* Release */,
				257117025711702571170000 /* MinSizeRel */,
				257281025728102572810000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		25773C025773C025773C0000 /* Build configuration list for PBXAggregateTarget "boost_wserialization" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				25778F025778F025778F0000 /* Debug */,
				2578B502578B502578B50000 /* Release */,
				2579C802579C802579C80000 /* MinSizeRel */,
				257ADB0257ADB0257ADB0000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		2586DC02586DC02586DC0000 /* Build configuration list for PBXNativeTarget "libboost_wserialization-mt.dylib" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				258717025871702587170000 /* Debug */,
				258752025875202587520000 /* Release */,
				2588E102588E102588E10000 /* MinSizeRel */,
				258BFE0258BFE0258BFE0000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		259712025971202597120000 /* Build configuration list for PBXNativeTarget "libboost_wserialization-mt-d.dylib" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				25974D025974D025974D0000 /* Debug */,
				259787025978702597870000 /* Release */,
				259929025992902599290000 /* MinSizeRel */,
				259AB40259AB40259AB40000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		25A71C025A71C025A71C0000 /* Build configuration list for PBXNativeTarget "libboost_wserialization-mt.a" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				25A757025A757025A7570000 /* Debug */,
				25A8CE025A8CE025A8CE0000 /* Release */,
				25AA3B025AA3B025AA3B0000 /* MinSizeRel */,
				25ABA5025ABA5025ABA50000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		25B622025B622025B6220000 /* Build configuration list for PBXNativeTarget "libboost_wserialization-mt-d.a" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				25B65D025B65D025B65D0000 /* Debug */,
				25B696025B696025B6960000 /* Release */,
				25B943025B943025B9430000 /* MinSizeRel */,
				25BAAD025BAAD025BAAD0000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		25BF78025BF78025BF780000 /* Build configuration list for PBXAggregateTarget "format-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				25BFCC025BFCC025BFCC0000 /* Debug */,
				25C0E5025C0E5025C0E50000 /* Release */,
				25C1F7025C1F7025C1F70000 /* MinSizeRel */,
				25C309025C309025C3090000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		25C690025C690025C6900000 /* Build configuration list for PBXAggregateTarget "math-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				25C792025C792025C7920000 /* Debug */,
				25C8EC025C8EC025C8EC0000 /* Release */,
				25C9F9025C9F9025C9F90000 /* MinSizeRel */,
				25CB0B025CB0B025CB0B0000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		25CF81025CF81025CF810000 /* Build configuration list for PBXAggregateTarget "multi_index-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				25CFD1025CFD1025CFD10000 /* Debug */,
				25D0EC025D0EC025D0EC0000 /* Release */,
				25D1FF025D1FF025D1FF0000 /* MinSizeRel */,
				25D312025D312025D3120000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		25D782025D782025D7820000 /* Build configuration list for PBXAggregateTarget "any-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				25D7D2025D7D2025D7D20000 /* Debug */,
				25D8F7025D8F7025D8F70000 /* Release */,
				25DA0C025DA0C025DA0C0000 /* MinSizeRel */,
				25DB21025DB21025DB210000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		25DF8F025DF8F025DF8F0000 /* Build configuration list for PBXAggregateTarget "random-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				25DFE3025DFE3025DFE30000 /* Debug */,
				25E108025E108025E1080000 /* Release */,
				25E21D025E21D025E21D0000 /* MinSizeRel */,
				25E332025E332025E3320000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		25E79C025E79C025E79C0000 /* Build configuration list for PBXAggregateTarget "graph-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				25E7EC025E7EC025E7EC0000 /* Debug */,
				25E88B025E88B025E88B0000 /* Release */,
				25EA12025EA12025EA120000 /* MinSizeRel */,
				25EAB4025EAB4025EAB40000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		25EF94025EF94025EF940000 /* Build configuration list for PBXAggregateTarget "boost_graph" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				25EFF1025EFF1025EFF10000 /* Debug */,
				25F091025F091025F0910000 /* Release */,
				25F21B025F21B025F21B0000 /* MinSizeRel */,
				25F2B8025F2B8025F2B80000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		25F95B025F95B025F95B0000 /* Build configuration list for PBXNativeTarget "libboost_graph-mt.dylib" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				25F996025F996025F9960000 /* Debug */,
				25FC01025FC01025FC010000 /* Release */,
				260064026006402600640000 /* MinSizeRel */,
				2600DE02600DE02600DE0000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		260928026092802609280000 /* Build configuration list for PBXNativeTarget "libboost_graph-mt-d.dylib" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				260963026096302609630000 /* Debug */,
				260A9B0260A9B0260A9B0000 /* Release */,
				260B190260B190260B190000 /* MinSizeRel */,
				260CB70260CB70260CB70000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		261508026150802615080000 /* Build configuration list for PBXNativeTarget "libboost_graph-mt.a" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				261543026154302615430000 /* Debug */,
				26163A026163A026163A0000 /* Release */,
				2617AD02617AD02617AD0000 /* MinSizeRel */,
				261917026191702619170000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		261FD10261FD10261FD10000 /* Build configuration list for PBXNativeTarget "libboost_graph-mt-d.a" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				26200C026200C026200C0000 /* Debug */,
				26210A026210A026210A0000 /* Release */,
				26227D026227D026227D0000 /* MinSizeRel */,
				2623E702623E702623E70000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		262939026293902629390000 /* Build configuration list for PBXAggregateTarget "Python-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				26298D026298D026298D0000 /* Debug */,
				262A1C0262A1C0262A1C0000 /* Release */,
				262BBD0262BBD0262BBD0000 /* MinSizeRel */,
				262C440262C440262C440000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		26312E026312E026312E0000 /* Build configuration list for PBXAggregateTarget "boost_python" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				263192026319202631920000 /* Debug */,
				26321E026321E026321E0000 /* Release */,
				2633BF02633BF02633BF0000 /* MinSizeRel */,
				263446026344602634460000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		264EC40264EC40264EC40000 /* Build configuration list for PBXNativeTarget "libboost_python-mt.dylib" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				264EFF0264EFF0264EFF0000 /* Debug */,
				265025026502502650250000 /* Release */,
				2651C702651C702651C70000 /* MinSizeRel */,
				265366026536602653660000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		26689C026689C026689C0000 /* Build configuration list for PBXNativeTarget "libboost_python-mt-d.dylib" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				2668D702668D702668D70000 /* Debug */,
				2669FF02669FF02669FF0000 /* Release */,
				266BA20266BA20266BA20000 /* MinSizeRel */,
				266D430266D430266D430000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		2682E702682E702682E70000 /* Build configuration list for PBXNativeTarget "libboost_python-mt.a" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				268322026832202683220000 /* Debug */,
				26835A026835A026835A0000 /* Release */,
				2685A002685A002685A00000 /* MinSizeRel */,
				26872C026872C026872C0000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		269BF10269BF10269BF10000 /* Build configuration list for PBXNativeTarget "libboost_python-mt-d.a" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				269C2C0269C2C0269C2C0000 /* Debug */,
				269D160269D160269D160000 /* Release */,
				269EA30269EA30269EA30000 /* MinSizeRel */,
				26A02F026A02F026A02F0000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		26A536026A536026A5360000 /* Build configuration list for PBXAggregateTarget "parameter-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				26A589026A589026A5890000 /* Debug */,
				26A61A026A61A026A61A0000 /* Release */,
				26A7B9026A7B9026A7B90000 /* MinSizeRel */,
				26A841026A841026A8410000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		26AD3F026AD3F026AD3F0000 /* Build configuration list for PBXAggregateTarget "accumulators-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				26AD92026AD92026AD920000 /* Debug */,
				26AEAD026AEAD026AEAD0000 /* Release */,
				26AFC0026AFC0026AFC00000 /* MinSizeRel */,
				26B0D3026B0D3026B0D30000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		26B72A026B72A026B72A0000 /* Build configuration list for PBXNativeTarget "accumulators-accumulators_example" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				26B765026B765026B7650000 /* Debug */,
				26B8D2026B8D2026B8D20000 /* Release */,
				26BA2D026BA2D026BA2D0000 /* MinSizeRel */,
				26BB8B026BB8B026BB8B0000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		26C045026C045026C0450000 /* Build configuration list for PBXAggregateTarget "system-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				26C096026C096026C0960000 /* Debug */,
				26C1BB026C1BB026C1BB0000 /* Release */,
				26C2D0026C2D0026C2D00000 /* MinSizeRel */,
				26C3E5026C3E5026C3E50000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		26C83C026C83C026C83C0000 /* Build configuration list for PBXAggregateTarget "boost_system" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				26C8A0026C8A0026C8A00000 /* Debug */,
				26C9C2026C9C2026C9C20000 /* Release */,
				26CAD7026CAD7026CAD70000 /* MinSizeRel */,
				26CBEC026CBEC026CBEC0000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		26D209026D209026D2090000 /* Build configuration list for PBXNativeTarget "libboost_system-mt.dylib" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				26D244026D244026D2440000 /* Debug */,
				26D3FD026D3FD026D3FD0000 /* Release */,
				26D5A0026D5A0026D5A00000 /* MinSizeRel */,
				26D73D026D73D026D73D0000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		26DDD7026DDD7026DDD70000 /* Build configuration list for PBXNativeTarget "libboost_system-mt-d.dylib" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				26DE12026DE12026DE120000 /* Debug */,
				26DEA6026DEA6026DEA60000 /* Release */,
				26DFDB026DFDB026DFDB0000 /* MinSizeRel */,
				26E30D026E30D026E30D0000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		26E9AC026E9AC026E9AC0000 /* Build configuration list for PBXNativeTarget "libboost_system-mt.a" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				26E9E7026E9E7026E9E70000 /* Debug */,
				26EA1F026EA1F026EA1F0000 /* Release */,
				26ECD5026ECD5026ECD50000 /* MinSizeRel */,
				26EE43026EE43026EE430000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		26F482026F482026F4820000 /* Build configuration list for PBXNativeTarget "libboost_system-mt-d.a" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				26F4BD026F4BD026F4BD0000 /* Debug */,
				26F63E026F63E026F63E0000 /* Release */,
				26F7A9026F7A9026F7A90000 /* MinSizeRel */,
				26F917026F917026F9170000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		270213027021302702130000 /* Build configuration list for PBXAggregateTarget "asio-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				2701EF02701EF02701EF0000 /* Debug */,
				270343027034302703430000 /* Release */,
				270455027045502704550000 /* MinSizeRel */,
				270567027056702705670000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		2709DB02709DB02709DB0000 /* Build configuration list for PBXAggregateTarget "circular_buffer-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				270A2C0270A2C0270A2C0000 /* Debug */,
				270B480270B480270B480000 /* Release */,
				270C5B0270C5B0270C5B0000 /* MinSizeRel */,
				270D6E0270D6E0270D6E0000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		2711E202711E202711E20000 /* Build configuration list for PBXAggregateTarget "ptr_container-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				271236027123602712360000 /* Debug */,
				271352027135202713520000 /* Release */,
				271465027146502714650000 /* MinSizeRel */,
				271578027157802715780000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		2719ED02719ED02719ED0000 /* Build configuration list for PBXAggregateTarget "assign-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				271A410271A410271A410000 /* Debug */,
				271B5A0271B5A0271B5A0000 /* Release */,
				271C6E0271C6E0271C6E0000 /* MinSizeRel */,
				271D800271D800271D800000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		2721F202721F202721F20000 /* Build configuration list for PBXAggregateTarget "bimap-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				272245027224502722450000 /* Debug */,
				272312027231202723120000 /* Release */,
				2724A202724A202724A20000 /* MinSizeRel */,
				2725B602725B602725B60000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		2729FB02729FB02729FB0000 /* Build configuration list for PBXAggregateTarget "compatibility-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				272A4F0272A4F0272A4F0000 /* Debug */,
				272B770272B770272B770000 /* Release */,
				272C980272C980272C980000 /* MinSizeRel */,
				272DB70272DB70272DB70000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		27323F027323F027323F0000 /* Build configuration list for PBXAggregateTarget "crc-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				27328F027328F027328F0000 /* Debug */,
				2733B402733B402733B40000 /* Release */,
				2734C402734C402734C40000 /* MinSizeRel */,
				2735DD02735DD02735DD0000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		273A480273A480273A480000 /* Build configuration list for PBXAggregateTarget "timer-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				273A980273A980273A980000 /* Debug */,
				273B2F0273B2F0273B2F0000 /* Release */,
				273C530273C530273C530000 /* MinSizeRel */,
				273D770273D770273D770000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		2742CB02742CB02742CB0000 /* Build configuration list for PBXAggregateTarget "test-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				2742B002742B002742B00000 /* Debug */,
				2743B702743B702743B70000 /* Release */,
				274547027454702745470000 /* MinSizeRel */,
				27447F027447F027447F0000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		274A8D0274A8D0274A8D0000 /* Build configuration list for PBXAggregateTarget "boost_prg_exec_monitor" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				274AF50274AF50274AF50000 /* Debug */,
				274BBB0274BBB0274BBB0000 /* Release */,
				274C860274C860274C860000 /* MinSizeRel */,
				274DA00274DA00274DA00000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		2755D902755D902755D90000 /* Build configuration list for PBXNativeTarget "libboost_prg_exec_monitor-mt.dylib" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				275614027561402756140000 /* Debug */,
				27564A027564A027564A0000 /* Release */,
				2757F702757F702757F70000 /* MinSizeRel */,
				275947027594702759470000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		2762BB02762BB02762BB0000 /* Build configuration list for PBXNativeTarget "libboost_prg_exec_monitor-mt-d.dylib" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				2762F702762F702762F70000 /* Debug */,
				276467027646702764670000 /* Release */,
				2764E202764E202764E20000 /* MinSizeRel */,
				27662E027662E027662E0000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		276F9A0276F9A0276F9A0000 /* Build configuration list for PBXNativeTarget "libboost_prg_exec_monitor-mt.a" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				276FD50276FD50276FD50000 /* Debug */,
				277102027710202771020000 /* Release */,
				27726A027726A027726A0000 /* MinSizeRel */,
				2773D602773D602773D60000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		277B790277B790277B790000 /* Build configuration list for PBXNativeTarget "libboost_prg_exec_monitor-mt-d.a" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				277BB50277BB50277BB50000 /* Debug */,
				277CE10277CE10277CE10000 /* Release */,
				277E4C0277E4C0277E4C0000 /* MinSizeRel */,
				277FBB0277FBB0277FBB0000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		27851F027851F027851F0000 /* Build configuration list for PBXAggregateTarget "boost_test_exec_monitor" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				2784F602784F602784F60000 /* Debug */,
				278605027860502786050000 /* Release */,
				2786D002786D002786D00000 /* MinSizeRel */,
				2787EA02787EA02787EA0000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		2799C302799C302799C30000 /* Build configuration list for PBXNativeTarget "libboost_test_exec_monitor-mt.a" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				2799FE02799FE02799FE0000 /* Debug */,
				279B2C0279B2C0279B2C0000 /* Release */,
				279C940279C940279C940000 /* MinSizeRel */,
				279DFE0279DFE0279DFE0000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		27ACEB027ACEB027ACEB0000 /* Build configuration list for PBXNativeTarget "libboost_test_exec_monitor-mt-d.a" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				27AD27027AD27027AD270000 /* Debug */,
				27AE54027AE54027AE540000 /* Release */,
				27AFBC027AFBC027AFBC0000 /* MinSizeRel */,
				27B126027B126027B1260000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		27B67A027B67A027B67A0000 /* Build configuration list for PBXAggregateTarget "boost_unit_test_framework" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				27B651027B651027B6510000 /* Debug */,
				27B75E027B75E027B75E0000 /* Release */,
				27B825027B825027B8250000 /* MinSizeRel */,
				27B93A027B93A027B93A0000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		27C9D5027C9D5027C9D50000 /* Build configuration list for PBXNativeTarget "libboost_unit_test_framework-mt.dylib" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				27CA10027CA10027CA100000 /* Debug */,
				27CA4C027CA4C027CA4C0000 /* Release */,
				27CBF8027CBF8027CBF80000 /* MinSizeRel */,
				27CD3E027CD3E027CD3E0000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		27DF20027DF20027DF200000 /* Build configuration list for PBXNativeTarget "libboost_unit_test_framework-mt-d.dylib" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				27DF5C027DF5C027DF5C0000 /* Debug */,
				27DF9F027DF9F027DF9F0000 /* Release */,
				27E14C027E14C027E14C0000 /* MinSizeRel */,
				27E296027E296027E2960000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		27F46D027F46D027F46D0000 /* Build configuration list for PBXNativeTarget "libboost_unit_test_framework-mt.a" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				27F4A8027F4A8027F4A80000 /* Debug */,
				27F5D6027F5D6027F5D60000 /* Release */,
				27F73E027F73E027F73E0000 /* MinSizeRel */,
				27F8A8027F8A8027F8A80000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		280C940280C940280C940000 /* Build configuration list for PBXNativeTarget "libboost_unit_test_framework-mt-d.a" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				280CD00280CD00280CD00000 /* Debug */,
				280DFC0280DFC0280DFC0000 /* Release */,
				280F670280F670280F670000 /* MinSizeRel */,
				2810CF02810CF02810CF0000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		2815EA02815EA02815EA0000 /* Build configuration list for PBXAggregateTarget "dynamic_bitset-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				28163B028163B028163B0000 /* Debug */,
				281762028176202817620000 /* Release */,
				281879028187902818790000 /* MinSizeRel */,
				281990028199002819900000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		281DFE0281DFE0281DFE0000 /* Build configuration list for PBXAggregateTarget "filesystem-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				281E530281E530281E530000 /* Debug */,
				281F6E0281F6E0281F6E0000 /* Release */,
				282082028208202820820000 /* MinSizeRel */,
				282196028219602821960000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		2825F902825F902825F90000 /* Build configuration list for PBXAggregateTarget "boost_filesystem" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				28265D028265D028265D0000 /* Debug */,
				282751028275102827510000 /* Release */,
				282864028286402828640000 /* MinSizeRel */,
				282977028297702829770000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		2831E902831E902831E90000 /* Build configuration list for PBXNativeTarget "libboost_filesystem-mt.dylib" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				283224028322402832240000 /* Debug */,
				28325B028325B028325B0000 /* Release */,
				283584028358402835840000 /* MinSizeRel */,
				2836B802836B802836B80000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		283F540283F540283F540000 /* Build configuration list for PBXNativeTarget "libboost_filesystem-mt-d.dylib" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				283F8F0283F8F0283F8F0000 /* Debug */,
				283FCA0283FCA0283FCA0000 /* Release */,
				2842EE02842EE02842EE0000 /* MinSizeRel */,
				284304028430402843040000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		284CC40284CC40284CC40000 /* Build configuration list for PBXNativeTarget "libboost_filesystem-mt.a" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				284CFF0284CFF0284CFF0000 /* Debug */,
				284E720284E720284E720000 /* Release */,
				284FDF0284FDF0284FDF0000 /* MinSizeRel */,
				285153028515302851530000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		285932028593202859320000 /* Build configuration list for PBXNativeTarget "libboost_filesystem-mt-d.a" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				28596D028596D028596D0000 /* Debug */,
				285AE60285AE60285AE60000 /* Release */,
				285C570285C570285C570000 /* MinSizeRel */,
				285DC50285DC50285DC50000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		286295028629502862950000 /* Build configuration list for PBXAggregateTarget "interprocess-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				2862E802862E802862E80000 /* Debug */,
				286403028640302864030000 /* Release */,
				286516028651602865160000 /* MinSizeRel */,
				286629028662902866290000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		286AA10286AA10286AA10000 /* Build configuration list for PBXAggregateTarget "flyweight-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				286AF40286AF40286AF40000 /* Debug */,
				286C100286C100286C100000 /* Release */,
				286D230286D230286D230000 /* MinSizeRel */,
				286E360286E360286E360000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		2872A502872A502872A50000 /* Build configuration list for PBXAggregateTarget "gil-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				2872F502872F502872F50000 /* Debug */,
				287419028741902874190000 /* Release */,
				287527028752702875270000 /* MinSizeRel */,
				28763F028763F028763F0000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		287ABC0287ABC0287ABC0000 /* Build configuration list for PBXAggregateTarget "mpi-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				287B0F0287B0F0287B0F0000 /* Debug */,
				287BA50287BA50287BA50000 /* Release */,
				287D3A0287D3A0287D3A0000 /* MinSizeRel */,
				287DCD0287DCD0287DCD0000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		2882FD02882FD02882FD0000 /* Build configuration list for PBXAggregateTarget "boost_mpi" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				288316028831602883160000 /* Debug */,
				2883AF02883AF02883AF0000 /* Release */,
				288548028854802885480000 /* MinSizeRel */,
				288619028861902886190000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		289923028992302899230000 /* Build configuration list for PBXNativeTarget "libboost_mpi-mt.dylib" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				28995D028995D028995D0000 /* Debug */,
				289A930289A930289A930000 /* Release */,
				289C370289C370289C370000 /* MinSizeRel */,
				289DD80289DD80289DD80000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		28AE11028AE11028AE110000 /* Build configuration list for PBXNativeTarget "libboost_mpi-mt-d.dylib" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				28AE4C028AE4C028AE4C0000 /* Debug */,
				28AF7D028AF7D028AF7D0000 /* Release */,
				28B121028B121028B1210000 /* MinSizeRel */,
				28B2C2028B2C2028B2C20000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		28C2E4028C2E4028C2E40000 /* Build configuration list for PBXNativeTarget "libboost_mpi-mt.a" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				28C31B028C31B028C31B0000 /* Debug */,
				28C411028C411028C4110000 /* Release */,
				28C6EF028C6EF028C6EF0000 /* MinSizeRel */,
				28C857028C857028C8570000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		28D68A028D68A028D68A0000 /* Build configuration list for PBXNativeTarget "libboost_mpi-mt-d.a" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				28D6C5028D6C5028D6C50000 /* Debug */,
				28D7BA028D7BA028D7BA0000 /* Release */,
				28DA91028DA91028DA910000 /* MinSizeRel */,
				28DC01028DC01028DC010000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		28E03C028E03C028E03C0000 /* Build configuration list for PBXAggregateTarget "boost_graph_parallel" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				28E02E028E02E028E02E0000 /* Debug */,
				28E0D3028E0D3028E0D30000 /* Release */,
				28E26B028E26B028E26B0000 /* MinSizeRel */,
				28E2FA028E2FA028E2FA0000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		28EA68028EA68028EA680000 /* Build configuration list for PBXNativeTarget "libboost_graph_parallel-mt.dylib" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				28EAA3028EAA3028EAA30000 /* Debug */,
				28EADD028EADD028EADD0000 /* Release */,
				28EC51028EC51028EC510000 /* MinSizeRel */,
				28EDA1028EDA1028EDA10000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		28F6D1028F6D1028F6D10000 /* Build configuration list for PBXNativeTarget "libboost_graph_parallel-mt-d.dylib" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				28F70C028F70C028F70C0000 /* Debug */,
				28F746028F746028F7460000 /* Release */,
				28F865028F865028F8650000 /* MinSizeRel */,
				28FA02028FA02028FA020000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		29072E029072E029072E0000 /* Build configuration list for PBXNativeTarget "libboost_graph_parallel-mt.a" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				290769029076902907690000 /* Debug */,
				29085D029085D029085D0000 /* Release */,
				290B320290B320290B320000 /* MinSizeRel */,
				290C9C0290C9C0290C9C0000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		291280029128002912800000 /* Build configuration list for PBXNativeTarget "libboost_graph_parallel-mt-d.a" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				2912BB02912BB02912BB0000 /* Debug */,
				2913B002913B002913B00000 /* Release */,
				291682029168202916820000 /* MinSizeRel */,
				2917F302917F302917F30000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		291BDD0291BDD0291BDD0000 /* Build configuration list for PBXAggregateTarget "iostreams-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				291C2F0291C2F0291C2F0000 /* Debug */,
				291D4B0291D4B0291D4B0000 /* Release */,
				291E5E0291E5E0291E5E0000 /* MinSizeRel */,
				291F710291F710291F710000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		2923C802923C802923C80000 /* Build configuration list for PBXAggregateTarget "boost_iostreams" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				292435029243502924350000 /* Debug */,
				292549029254902925490000 /* Release */,
				29265C029265C029265C0000 /* MinSizeRel */,
				29276F029276F029276F0000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		292FCC0292FCC0292FCC0000 /* Build configuration list for PBXNativeTarget "libboost_iostreams-mt.dylib" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				293007029300702930070000 /* Debug */,
				2931B902931B902931B90000 /* Release */,
				293235029323502932350000 /* MinSizeRel */,
				2933D202933D202933D20000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		293D390293D390293D390000 /* Build configuration list for PBXNativeTarget "libboost_iostreams-mt-d.dylib" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				293D740293D740293D740000 /* Debug */,
				293DAF0293DAF0293DAF0000 /* Release */,
				293FA70293FA70293FA70000 /* MinSizeRel */,
				2940E202940E202940E20000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		294AA60294AA60294AA60000 /* Build configuration list for PBXNativeTarget "libboost_iostreams-mt.a" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				294AE10294AE10294AE10000 /* Debug */,
				294C590294C590294C590000 /* Release */,
				294DC30294DC30294DC30000 /* MinSizeRel */,
				294F2F0294F2F0294F2F0000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		2956F502956F502956F50000 /* Build configuration list for PBXNativeTarget "libboost_iostreams-mt-d.a" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				295730029573002957300000 /* Debug */,
				2958A902958A902958A90000 /* Release */,
				295A170295A170295A170000 /* MinSizeRel */,
				295B820295B820295B820000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		296052029605202960520000 /* Build configuration list for PBXAggregateTarget "lambda-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				2960A302960A302960A30000 /* Debug */,
				2961C802961C802961C80000 /* Release */,
				2962DD02962DD02962DD0000 /* MinSizeRel */,
				2963F202963F202963F20000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		29685F029685F029685F0000 /* Build configuration list for PBXAggregateTarget "multi_array-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				2968B102968B102968B10000 /* Debug */,
				2969D802969D802969D80000 /* Release */,
				296AF00296AF00296AF00000 /* MinSizeRel */,
				296C080296C080296C080000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		29707F029707F029707F0000 /* Build configuration list for PBXAggregateTarget "program_options-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				2970D002970D002970D00000 /* Debug */,
				29718C029718C029718C0000 /* Release */,
				2972DD02972DD02972DD0000 /* MinSizeRel */,
				297402029740202974020000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		297873029787302978730000 /* Build configuration list for PBXAggregateTarget "boost_program_options" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				2978D202978D202978D20000 /* Debug */,
				297994029799402979940000 /* Release */,
				297AE40297AE40297AE40000 /* MinSizeRel */,
				297C0C0297C0C0297C0C0000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		298907029890702989070000 /* Build configuration list for PBXNativeTarget "libboost_program_options-mt.dylib" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				298942029894202989420000 /* Debug */,
				29897D029897D029897D0000 /* Release */,
				298B0E0298B0E0298B0E0000 /* MinSizeRel */,
				298C450298C450298C450000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		2999AB02999AB02999AB0000 /* Build configuration list for PBXNativeTarget "libboost_program_options-mt-d.dylib" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				2999E702999E702999E70000 /* Debug */,
				299A210299A210299A210000 /* Release */,
				299B630299B630299B630000 /* MinSizeRel */,
				299D000299D000299D000000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		29AA47029AA47029AA470000 /* Build configuration list for PBXNativeTarget "libboost_program_options-mt.a" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				29AA82029AA82029AA820000 /* Debug */,
				29AB99029AB99029AB990000 /* Release */,
				29AD05029AD05029AD050000 /* MinSizeRel */,
				29AE6E029AE6E029AE6E0000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		29B9C5029B9C5029B9C50000 /* Build configuration list for PBXNativeTarget "libboost_program_options-mt-d.a" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				29BA01029BA01029BA010000 /* Debug */,
				29BA3A029BA3A029BA3A0000 /* Release */,
				29BC86029BC86029BC860000 /* MinSizeRel */,
				29BDEF029BDEF029BDEF0000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		29C31A029C31A029C31A0000 /* Build configuration list for PBXAggregateTarget "rational-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				29C36C029C36C029C36C0000 /* Debug */,
				29C48E029C48E029C48E0000 /* Release */,
				29C5A2029C5A2029C5A20000 /* MinSizeRel */,
				29C6B8029C6B8029C6B80000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		29CB26029CB26029CB260000 /* Build configuration list for PBXAggregateTarget "signals-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				29CB7B029CB7B029CB7B0000 /* Debug */,
				29CC93029CC93029CC930000 /* Release */,
				29CDA5029CDA5029CDA50000 /* MinSizeRel */,
				29CEB7029CEB7029CEB70000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		29D318029D318029D3180000 /* Build configuration list for PBXAggregateTarget "boost_signals" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				29D36B029D36B029D36B0000 /* Debug */,
				29D476029D476029D4760000 /* Release */,
				29D4B6029D4B6029D4B60000 /* MinSizeRel */,
				29D69E029D69E029D69E0000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		29DFC6029DFC6029DFC60000 /* Build configuration list for PBXNativeTarget "libboost_signals-mt.dylib" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				29E001029E001029E0010000 /* Debug */,
				29E158029E158029E1580000 /* Release */,
				29E2BC029E2BC029E2BC0000 /* MinSizeRel */,
				29E36C029E36C029E36C0000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		29EDB1029EDB1029EDB10000 /* Build configuration list for PBXNativeTarget "libboost_signals-mt-d.dylib" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				29EDEC029EDEC029EDEC0000 /* Debug */,
				29EFAE029EFAE029EFAE0000 /* Release */,
				29F0EA029F0EA029F0EA0000 /* MinSizeRel */,
				29F252029F252029F2520000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		29FBA1029FBA1029FBA10000 /* Build configuration list for PBXNativeTarget "libboost_signals-mt.a" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				29FBDC029FBDC029FBDC0000 /* Debug */,
				2A000002A000002A00000000 /* Release */,
				2A016D02A016D02A016D0000 /* MinSizeRel */,
				2A02DB02A02DB02A02DB0000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		2A0C8002A0C8002A0C800000 /* Build configuration list for PBXNativeTarget "libboost_signals-mt-d.a" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				2A0CBB02A0CBB02A0CBB0000 /* Debug */,
				2A0CE502A0CE502A0CE50000 /* Release */,
				2A0E4C02A0E4C02A0E4C0000 /* MinSizeRel */,
				2A0FB902A0FB902A0FB90000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		2A15E202A15E202A15E20000 /* Build configuration list for PBXAggregateTarget "signals2-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				2A163702A163702A16370000 /* Debug */,
				2A175002A175002A17500000 /* Release */,
				2A186402A186402A18640000 /* MinSizeRel */,
				2A197602A197602A19760000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		2A1DE502A1DE502A1DE50000 /* Build configuration list for PBXAggregateTarget "statechart-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				2A1E3702A1E3702A1E370000 /* Debug */,
				2A1F0F02A1F0F02A1F0F0000 /* Release */,
				2A202402A202402A20240000 /* MinSizeRel */,
				2A213A02A213A02A213A0000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		2A25EC02A25EC02A25EC0000 /* Build configuration list for PBXAggregateTarget "tr1-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				2A263C02A263C02A263C0000 /* Debug */,
				2A271702A271702A27170000 /* Release */,
				2A282B02A282B02A282B0000 /* MinSizeRel */,
				2A293F02A293F02A293F0000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		2A2DF302A2DF302A2DF30000 /* Build configuration list for PBXAggregateTarget "units-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				2A2E4302A2E4302A2E430000 /* Debug */,
				2A2EFD02A2EFD02A2EFD0000 /* Release */,
				2A304E02A304E02A304E0000 /* MinSizeRel */,
				2A312702A312702A31270000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		2A363902A363902A36390000 /* Build configuration list for PBXAggregateTarget "wave-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				2A361502A361502A36150000 /* Debug */,
				2A376902A376902A37690000 /* Release */,
				2A388002A388002A38800000 /* MinSizeRel */,
				2A399802A399802A39980000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		2A3E1202A3E1202A3E120000 /* Build configuration list for PBXAggregateTarget "boost_wave" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				2A3E5F02A3E5F02A3E5F0000 /* Debug */,
				2A3F7B02A3F7B02A3F7B0000 /* Release */,
				2A409302A409302A40930000 /* MinSizeRel */,
				2A41AB02A41AB02A41AB0000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		2A4F3B02A4F3B02A4F3B0000 /* Build configuration list for PBXNativeTarget "libboost_wave-mt.dylib" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				2A4F7502A4F7502A4F750000 /* Debug */,
				2A512302A512302A51230000 /* Release */,
				2A52C202A52C202A52C20000 /* MinSizeRel */,
				2A533B02A533B02A533B0000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		2A604402A604402A60440000 /* Build configuration list for PBXNativeTarget "libboost_wave-mt-d.dylib" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				2A607F02A607F02A607F0000 /* Debug */,
				2A622E02A622E02A622E0000 /* Release */,
				2A62AA02A62AA02A62AA0000 /* MinSizeRel */,
				2A63EB02A63EB02A63EB0000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		2A715602A715602A71560000 /* Build configuration list for PBXNativeTarget "libboost_wave-mt.a" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				2A719002A719002A71900000 /* Debug */,
				2A730302A730302A73030000 /* Release */,
				2A747002A747002A74700000 /* MinSizeRel */,
				2A75DB02A75DB02A75DB0000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		2A815302A815302A81530000 /* Build configuration list for PBXNativeTarget "libboost_wave-mt-d.a" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				2A818E02A818E02A818E0000 /* Debug */,
				2A81C302A81C302A81C30000 /* Release */,
				2A847102A847102A84710000 /* MinSizeRel */,
				2A85DB02A85DB02A85DB0000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		2A93B002A93B002A93B00000 /* Build configuration list for PBXNativeTarget "bcp" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				2A93E502A93E502A93E50000 /* Debug */,
				2A94E002A94E002A94E00000 /* Release */,
				2A963A02A963A02A963A0000 /* MinSizeRel */,
				2A979502A979502A97950000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		2AA5C302AA5C302AA5C30000 /* Build configuration list for PBXNativeTarget "inspect" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				2AA5F902AA5F902AA5F90000 /* Debug */,
				2AA62C02AA62C02AA62C0000 /* Release */,
				2AA79802AA79802AA7980000 /* MinSizeRel */,
				2AAA4C02AAA4C02AAA4C0000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
/* End XCConfigurationList section */
	};
	rootObject = 22A47E022A47E022A47E0000 /* Project object */;
}
