// !$*UTF8*$!
{
	archiveVersion = 1;
	classes = {
	};
	objectVersion = 42;
	objects = {

/* Begin PBXAggregateTarget section */
		1FF44201FF44201FF4420000 /* ALL_BUILD */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 1FF54501FF54501FF5450000 /* Build configuration list for PBXAggregateTarget "ALL_BUILD" */;
			buildPhases = (
				1FF46301FF46301FF4630000 /* CMake ReRun */,
				1FF4E301FF4E301FF4E30000 /* CMake Rules */,
			);
			dependencies = (
				25A247025A247025A2470000 /* PBXTargetDependency */,
				25A2C0025A2C0025A2C00000 /* PBXTargetDependency */,
				25A339025A339025A3390000 /* PBXTargetDependency */,
				25A3AE025A3AE025A3AE0000 /* PBXTargetDependency */,
				25A42B025A42B025A42B0000 /* PBXTargetDependency */,
				25A4A7025A4A7025A4A70000 /* PBXTargetDependency */,
				25A521025A521025A5210000 /* PBXTargetDependency */,
				25A59B025A59B025A59B0000 /* PBXTargetDependency */,
				25A615025A615025A6150000 /* PBXTargetDependency */,
				25A695025A695025A6950000 /* PBXTargetDependency */,
				25A707025A707025A7070000 /* PBXTargetDependency */,
				25A77F025A77F025A77F0000 /* PBXTargetDependency */,
				25A7F7025A7F7025A7F70000 /* PBXTargetDependency */,
				25A86F025A86F025A86F0000 /* PBXTargetDependency */,
				25A8E7025A8E7025A8E70000 /* PBXTargetDependency */,
				25A95F025A95F025A95F0000 /* PBXTargetDependency */,
				25A9D7025A9D7025A9D70000 /* PBXTargetDependency */,
				25AA54025AA54025AA540000 /* PBXTargetDependency */,
				25AAD4025AAD4025AAD40000 /* PBXTargetDependency */,
				25AB45025AB45025AB450000 /* PBXTargetDependency */,
				25ABC5025ABC5025ABC50000 /* PBXTargetDependency */,
				25AC36025AC36025AC360000 /* PBXTargetDependency */,
				25ACB6025ACB6025ACB60000 /* PBXTargetDependency */,
				25AD27025AD27025AD270000 /* PBXTargetDependency */,
				25AD9F025AD9F025AD9F0000 /* PBXTargetDependency */,
				25AE1F025AE1F025AE1F0000 /* PBXTargetDependency */,
				25AE8E025AE8E025AE8E0000 /* PBXTargetDependency */,
				25AF06025AF06025AF060000 /* PBXTargetDependency */,
				25AF86025AF86025AF860000 /* PBXTargetDependency */,
				25AFF7025AFF7025AFF70000 /* PBXTargetDependency */,
				25B06F025B06F025B06F0000 /* PBXTargetDependency */,
				25B0E7025B0E7025B0E70000 /* PBXTargetDependency */,
				25B167025B167025B1670000 /* PBXTargetDependency */,
				25B1E3025B1E3025B1E30000 /* PBXTargetDependency */,
				25B25D025B25D025B25D0000 /* PBXTargetDependency */,
				25B2D7025B2D7025B2D70000 /* PBXTargetDependency */,
				25B351025B351025B3510000 /* PBXTargetDependency */,
				25B3CB025B3CB025B3CB0000 /* PBXTargetDependency */,
				25B449025B449025B4490000 /* PBXTargetDependency */,
			);
			name = ALL_BUILD;
			productName = ALL_BUILD;
		};
		200065020006502000650000 /* install */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 20018D020018D020018D0000 /* Build configuration list for PBXAggregateTarget "install" */;
			buildPhases = (
				200082020008202000820000 /* CMake ReRun */,
				2000FE02000FE02000FE0000 /* CMake PostBuild Rules */,
			);
			dependencies = (
				25B4D2025B4D2025B4D20000 /* PBXTargetDependency */,
			);
			name = install;
			productName = install;
		};
		2007D002007D002007D00000 /* modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 2008C002008C002008C00000 /* Build configuration list for PBXAggregateTarget "modularize" */;
			buildPhases = (
				2007F102007F102007F10000 /* CMake ReRun */,
				200871020087102008710000 /* CMake Rules */,
			);
			dependencies = (
				25B55D025B55D025B55D0000 /* PBXTargetDependency */,
				25B5CF025B5CF025B5CF0000 /* PBXTargetDependency */,
				25B648025B648025B6480000 /* PBXTargetDependency */,
				25B6C8025B6C8025B6C80000 /* PBXTargetDependency */,
				25B73F025B73F025B73F0000 /* PBXTargetDependency */,
				25B7B2025B7B2025B7B20000 /* PBXTargetDependency */,
				25B82E025B82E025B82E0000 /* PBXTargetDependency */,
				25B8AC025B8AC025B8AC0000 /* PBXTargetDependency */,
				25B91B025B91B025B91B0000 /* PBXTargetDependency */,
				25B992025B992025B9920000 /* PBXTargetDependency */,
				25BA17025BA17025BA170000 /* PBXTargetDependency */,
				25BA8E025BA8E025BA8E0000 /* PBXTargetDependency */,
				25BB05025BB05025BB050000 /* PBXTargetDependency */,
				25BB74025BB74025BB740000 /* PBXTargetDependency */,
				25BBF4025BBF4025BBF40000 /* PBXTargetDependency */,
				25BC63025BC63025BC630000 /* PBXTargetDependency */,
				25BCE3025BCE3025BCE30000 /* PBXTargetDependency */,
				25BD5F025BD5F025BD5F0000 /* PBXTargetDependency */,
				25BDD6025BDD6025BDD60000 /* PBXTargetDependency */,
				25BE45025BE45025BE450000 /* PBXTargetDependency */,
				25BEC5025BEC5025BEC50000 /* PBXTargetDependency */,
				25BF3C025BF3C025BF3C0000 /* PBXTargetDependency */,
				25BFAB025BFAB025BFAB0000 /* PBXTargetDependency */,
				25C02B025C02B025C02B0000 /* PBXTargetDependency */,
				25C09A025C09A025C09A0000 /* PBXTargetDependency */,
				25C11A025C11A025C11A0000 /* PBXTargetDependency */,
				25C191025C191025C1910000 /* PBXTargetDependency */,
				25C200025C200025C2000000 /* PBXTargetDependency */,
				25C280025C280025C2800000 /* PBXTargetDependency */,
				25C2F7025C2F7025C2F70000 /* PBXTargetDependency */,
				25C366025C366025C3660000 /* PBXTargetDependency */,
				25C3E6025C3E6025C3E60000 /* PBXTargetDependency */,
				25C45D025C45D025C45D0000 /* PBXTargetDependency */,
				25C4D9025C4D9025C4D90000 /* PBXTargetDependency */,
				25C54F025C54F025C54F0000 /* PBXTargetDependency */,
				25C5C7025C5C7025C5C70000 /* PBXTargetDependency */,
				25C647025C647025C6470000 /* PBXTargetDependency */,
				25C6BE025C6BE025C6BE0000 /* PBXTargetDependency */,
				25C737025C737025C7370000 /* PBXTargetDependency */,
				25C7A9025C7A9025C7A90000 /* PBXTargetDependency */,
				25C82A025C82A025C82A0000 /* PBXTargetDependency */,
				25C8A3025C8A3025C8A30000 /* PBXTargetDependency */,
				25C915025C915025C9150000 /* PBXTargetDependency */,
				25C996025C996025C9960000 /* PBXTargetDependency */,
				25CA0F025CA0F025CA0F0000 /* PBXTargetDependency */,
				25CA88025CA88025CA880000 /* PBXTargetDependency */,
				25CB01025CB01025CB010000 /* PBXTargetDependency */,
				25CB73025CB73025CB730000 /* PBXTargetDependency */,
				25CBED025CBED025CBED0000 /* PBXTargetDependency */,
				25CC6E025CC6E025CC6E0000 /* PBXTargetDependency */,
				25CCE7025CCE7025CCE70000 /* PBXTargetDependency */,
				25CD59025CD59025CD590000 /* PBXTargetDependency */,
				25CDD3025CDD3025CDD30000 /* PBXTargetDependency */,
				25CE54025CE54025CE540000 /* PBXTargetDependency */,
				25CECD025CECD025CECD0000 /* PBXTargetDependency */,
				25CF3F025CF3F025CF3F0000 /* PBXTargetDependency */,
				25CFC0025CFC0025CFC00000 /* PBXTargetDependency */,
				25D039025D039025D0390000 /* PBXTargetDependency */,
				25D0B2025D0B2025D0B20000 /* PBXTargetDependency */,
				25D124025D124025D1240000 /* PBXTargetDependency */,
				25D19E025D19E025D19E0000 /* PBXTargetDependency */,
				25D218025D218025D2180000 /* PBXTargetDependency */,
				25D292025D292025D2920000 /* PBXTargetDependency */,
				25D313025D313025D3130000 /* PBXTargetDependency */,
				25D38C025D38C025D38C0000 /* PBXTargetDependency */,
				25D3EF025D3EF025D3EF0000 /* PBXTargetDependency */,
				25D470025D470025D4700000 /* PBXTargetDependency */,
				25D4E1025D4E1025D4E10000 /* PBXTargetDependency */,
				25D55B025D55B025D55B0000 /* PBXTargetDependency */,
				25D5DD025D5DD025D5DD0000 /* PBXTargetDependency */,
				25D656025D656025D6560000 /* PBXTargetDependency */,
				25D6CF025D6CF025D6CF0000 /* PBXTargetDependency */,
				25D740025D740025D7400000 /* PBXTargetDependency */,
				25D7C2025D7C2025D7C20000 /* PBXTargetDependency */,
				25D83B025D83B025D83B0000 /* PBXTargetDependency */,
				25D8B4025D8B4025D8B40000 /* PBXTargetDependency */,
			);
			name = modularize;
			productName = modularize;
		};
		200F8D0200F8D0200F8D0000 /* package */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 201091020109102010910000 /* Build configuration list for PBXAggregateTarget "package" */;
			buildPhases = (
				200FAA0200FAA0200FAA0000 /* CMake ReRun */,
				201026020102602010260000 /* CMake PostBuild Rules */,
			);
			dependencies = (
				25B4D2025B4D2025B4D20000 /* PBXTargetDependency */,
			);
			name = package;
			productName = package;
		};
		201701020170102017010000 /* preprocessor-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 201813020181302018130000 /* Build configuration list for PBXAggregateTarget "preprocessor-modularize" */;
			buildPhases = (
				20172C020172C020172C0000 /* CMake ReRun */,
				2017A802017A802017A80000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "preprocessor-modularize";
			productName = "preprocessor-modularize";
		};
		201F4B0201F4B0201F4B0000 /* concept_check-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 20205D020205D020205D0000 /* Build configuration list for PBXAggregateTarget "concept_check-modularize" */;
			buildPhases = (
				201F780201F780201F780000 /* CMake ReRun */,
				201FF40201FF40201FF40000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "concept_check-modularize";
			productName = "concept_check-modularize";
		};
		2027AF02027AF02027AF0000 /* property_map-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 2028BF02028BF02028BF0000 /* Build configuration list for PBXAggregateTarget "property_map-modularize" */;
			buildPhases = (
				2027D802027D802027D80000 /* CMake ReRun */,
				202850020285002028500000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "property_map-modularize";
			productName = "property_map-modularize";
		};
		203032020303202030320000 /* config-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 203142020314202031420000 /* Build configuration list for PBXAggregateTarget "config-modularize" */;
			buildPhases = (
				20305D020305D020305D0000 /* CMake ReRun */,
				2030D902030D902030D90000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "config-modularize";
			productName = "config-modularize";
		};
		203877020387702038770000 /* mpl-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 203986020398602039860000 /* Build configuration list for PBXAggregateTarget "mpl-modularize" */;
			buildPhases = (
				2038A002038A002038A00000 /* CMake ReRun */,
				203918020391802039180000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "mpl-modularize";
			productName = "mpl-modularize";
		};
		204085020408502040850000 /* type_traits-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 204197020419702041970000 /* Build configuration list for PBXAggregateTarget "type_traits-modularize" */;
			buildPhases = (
				2040B002040B002040B00000 /* CMake ReRun */,
				20412C020412C020412C0000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "type_traits-modularize";
			productName = "type_traits-modularize";
		};
		204899020489902048990000 /* function-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 2049A902049A902049A90000 /* Build configuration list for PBXAggregateTarget "function-modularize" */;
			buildPhases = (
				2048C402048C402048C40000 /* CMake ReRun */,
				204940020494002049400000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "function-modularize";
			productName = "function-modularize";
		};
		2050A802050A802050A80000 /* iterator-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 2051B802051B802051B80000 /* Build configuration list for PBXAggregateTarget "iterator-modularize" */;
			buildPhases = (
				2050D302050D302050D30000 /* CMake ReRun */,
				20514F020514F020514F0000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "iterator-modularize";
			productName = "iterator-modularize";
		};
		2058B702058B702058B70000 /* smart_ptr-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 2058D402058D402058D40000 /* Build configuration list for PBXAggregateTarget "smart_ptr-modularize" */;
			buildPhases = (
				2058F202058F202058F20000 /* CMake ReRun */,
				20596E020596E020596E0000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "smart_ptr-modularize";
			productName = "smart_ptr-modularize";
		};
		2060C302060C302060C30000 /* exception-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 2061D302061D302061D30000 /* Build configuration list for PBXAggregateTarget "exception-modularize" */;
			buildPhases = (
				2060F002060F002060F00000 /* CMake ReRun */,
				20616C020616C020616C0000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "exception-modularize";
			productName = "exception-modularize";
		};
		2068D502068D502068D50000 /* utility-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 2068F202068F202068F20000 /* Build configuration list for PBXAggregateTarget "utility-modularize" */;
			buildPhases = (
				206917020691702069170000 /* CMake ReRun */,
				206993020699302069930000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "utility-modularize";
			productName = "utility-modularize";
		};
		2070DD02070DD02070DD0000 /* integer-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 2071ED02071ED02071ED0000 /* Build configuration list for PBXAggregateTarget "integer-modularize" */;
			buildPhases = (
				20710E020710E020710E0000 /* CMake ReRun */,
				20718A020718A020718A0000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "integer-modularize";
			productName = "integer-modularize";
		};
		2078E802078E802078E80000 /* detail-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 2079F702079F702079F70000 /* Build configuration list for PBXAggregateTarget "detail-modularize" */;
			buildPhases = (
				207911020791102079110000 /* CMake ReRun */,
				207989020798902079890000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "detail-modularize";
			productName = "detail-modularize";
		};
		2080F302080F302080F30000 /* static_assert-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 208203020820302082030000 /* Build configuration list for PBXAggregateTarget "static_assert-modularize" */;
			buildPhases = (
				20811C020811C020811C0000 /* CMake ReRun */,
				208194020819402081940000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "static_assert-modularize";
			productName = "static_assert-modularize";
		};
		208907020890702089070000 /* tuple-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 208A160208A160208A160000 /* Build configuration list for PBXAggregateTarget "tuple-modularize" */;
			buildPhases = (
				208930020893002089300000 /* CMake ReRun */,
				2089A802089A802089A80000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "tuple-modularize";
			productName = "tuple-modularize";
		};
		209111020911102091110000 /* function_types-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 209221020922102092210000 /* Build configuration list for PBXAggregateTarget "function_types-modularize" */;
			buildPhases = (
				20913A020913A020913A0000 /* CMake ReRun */,
				2091B202091B202091B20000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "function_types-modularize";
			productName = "function_types-modularize";
		};
		209929020992902099290000 /* fusion-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 209A380209A380209A380000 /* Build configuration list for PBXAggregateTarget "fusion-modularize" */;
			buildPhases = (
				209952020995202099520000 /* CMake ReRun */,
				2099CA02099CA02099CA0000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "fusion-modularize";
			productName = "fusion-modularize";
		};
		20A12A020A12A020A12A0000 /* typeof-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 20A239020A239020A2390000 /* Build configuration list for PBXAggregateTarget "typeof-modularize" */;
			buildPhases = (
				20A153020A153020A1530000 /* CMake ReRun */,
				20A1CB020A1CB020A1CB0000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "typeof-modularize";
			productName = "typeof-modularize";
		};
		20A934020A934020A9340000 /* proto-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 20AA43020AA43020AA430000 /* Build configuration list for PBXAggregateTarget "proto-modularize" */;
			buildPhases = (
				20A95D020A95D020A95D0000 /* CMake ReRun */,
				20A9D5020A9D5020A9D50000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "proto-modularize";
			productName = "proto-modularize";
		};
		20B135020B135020B1350000 /* intrusive-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 20B245020B245020B2450000 /* Build configuration list for PBXAggregateTarget "intrusive-modularize" */;
			buildPhases = (
				20B160020B160020B1600000 /* CMake ReRun */,
				20B1DC020B1DC020B1DC0000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "intrusive-modularize";
			productName = "intrusive-modularize";
		};
		20B949020B949020B9490000 /* logic-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 20BA58020BA58020BA580000 /* Build configuration list for PBXAggregateTarget "logic-modularize" */;
			buildPhases = (
				20B972020B972020B9720000 /* CMake ReRun */,
				20B9EA020B9EA020B9EA0000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "logic-modularize";
			productName = "logic-modularize";
		};
		20C14F020C14F020C14F0000 /* numeric-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 20C25E020C25E020C25E0000 /* Build configuration list for PBXAggregateTarget "numeric-modularize" */;
			buildPhases = (
				20C178020C178020C1780000 /* CMake ReRun */,
				20C1F0020C1F0020C1F00000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "numeric-modularize";
			productName = "numeric-modularize";
		};
		20C951020C951020C9510000 /* xpressive-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 20CA60020CA60020CA600000 /* Build configuration list for PBXAggregateTarget "xpressive-modularize" */;
			buildPhases = (
				20C97A020C97A020C97A0000 /* CMake ReRun */,
				20C9F2020C9F2020C9F20000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "xpressive-modularize";
			productName = "xpressive-modularize";
		};
		20D15A020D15A020D15A0000 /* optional-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 20D26A020D26A020D26A0000 /* Build configuration list for PBXAggregateTarget "optional-modularize" */;
			buildPhases = (
				20D185020D185020D1850000 /* CMake ReRun */,
				20D201020D201020D2010000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "optional-modularize";
			productName = "optional-modularize";
		};
		20D96B020D96B020D96B0000 /* tokenizer-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 20DA7A020DA7A020DA7A0000 /* Build configuration list for PBXAggregateTarget "tokenizer-modularize" */;
			buildPhases = (
				20D994020D994020D9940000 /* CMake ReRun */,
				20DA0C020DA0C020DA0C0000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "tokenizer-modularize";
			productName = "tokenizer-modularize";
		};
		20E17D020E17D020E17D0000 /* io-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 20E28D020E28D020E28D0000 /* Build configuration list for PBXAggregateTarget "io-modularize" */;
			buildPhases = (
				20E1A8020E1A8020E1A80000 /* CMake ReRun */,
				20E224020E224020E2240000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "io-modularize";
			productName = "io-modularize";
		};
		20E992020E992020E9920000 /* bind-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 20EAD9020EAD9020EAD90000 /* Build configuration list for PBXAggregateTarget "bind-modularize" */;
			buildPhases = (
				20E9BD020E9BD020E9BD0000 /* CMake ReRun */,
				20EA39020EA39020EA390000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "bind-modularize";
			productName = "bind-modularize";
		};
		20F19A020F19A020F19A0000 /* date_time-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 20F2AA020F2AA020F2AA0000 /* Build configuration list for PBXAggregateTarget "date_time-modularize" */;
			buildPhases = (
				20F1C5020F1C5020F1C50000 /* CMake ReRun */,
				20F241020F241020F2410000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "date_time-modularize";
			productName = "date_time-modularize";
		};
		20F9A0020F9A0020F9A00000 /* boost_date_time */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 20FA96020FA96020FA960000 /* Build configuration list for PBXAggregateTarget "boost_date_time" */;
			buildPhases = (
				20F9C1020F9C1020F9C10000 /* CMake ReRun */,
				20FA41020FA41020FA410000 /* CMake Rules */,
			);
			dependencies = (
				25A247025A247025A2470000 /* PBXTargetDependency */,
				25A2C0025A2C0025A2C00000 /* PBXTargetDependency */,
			);
			name = boost_date_time;
			productName = boost_date_time;
		};
		211E100211E100211E100000 /* thread-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 211F200211F200211F200000 /* Build configuration list for PBXAggregateTarget "thread-modularize" */;
			buildPhases = (
				211E3B0211E3B0211E3B0000 /* CMake ReRun */,
				211EB70211EB70211EB70000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "thread-modularize";
			productName = "thread-modularize";
		};
		212611021261102126110000 /* boost_thread */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 21270D021270D021270D0000 /* Build configuration list for PBXAggregateTarget "boost_thread" */;
			buildPhases = (
				212632021263202126320000 /* CMake ReRun */,
				2126B202126B202126B20000 /* CMake Rules */,
			);
			dependencies = (
				25A339025A339025A3390000 /* PBXTargetDependency */,
				25A3AE025A3AE025A3AE0000 /* PBXTargetDependency */,
			);
			name = boost_thread;
			productName = boost_thread;
		};
		214660021466002146600000 /* regex-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 214773021477302147730000 /* Build configuration list for PBXAggregateTarget "regex-modularize" */;
			buildPhases = (
				214694021469402146940000 /* CMake ReRun */,
				214710021471002147100000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "regex-modularize";
			productName = "regex-modularize";
		};
		214E5F0214E5F0214E5F0000 /* boost_regex */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 214F5B0214F5B0214F5B0000 /* Build configuration list for PBXAggregateTarget "boost_regex" */;
			buildPhases = (
				214E800214E800214E800000 /* CMake ReRun */,
				214F000214F000214F000000 /* CMake Rules */,
			);
			dependencies = (
				25A42B025A42B025A42B0000 /* PBXTargetDependency */,
				25A4A7025A4A7025A4A70000 /* PBXTargetDependency */,
			);
			name = boost_regex;
			productName = boost_regex;
		};
		218025021802502180250000 /* algorithm-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 218134021813402181340000 /* Build configuration list for PBXAggregateTarget "algorithm-modularize" */;
			buildPhases = (
				21804E021804E021804E0000 /* CMake ReRun */,
				2180C602180C602180C60000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "algorithm-modularize";
			productName = "algorithm-modularize";
		};
		21882A021882A021882A0000 /* range-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 21893A021893A021893A0000 /* Build configuration list for PBXAggregateTarget "range-modularize" */;
			buildPhases = (
				218855021885502188550000 /* CMake ReRun */,
				2188D102188D102188D10000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "range-modularize";
			productName = "range-modularize";
		};
		21902C021902C021902C0000 /* foreach-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 21913B021913B021913B0000 /* Build configuration list for PBXAggregateTarget "foreach-modularize" */;
			buildPhases = (
				219055021905502190550000 /* CMake ReRun */,
				2190CD02190CD02190CD0000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "foreach-modularize";
			productName = "foreach-modularize";
		};
		21982E021982E021982E0000 /* array-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 21993D021993D021993D0000 /* Build configuration list for PBXAggregateTarget "array-modularize" */;
			buildPhases = (
				219857021985702198570000 /* CMake ReRun */,
				2198CF02198CF02198CF0000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "array-modularize";
			productName = "array-modularize";
		};
		21A036021A036021A0360000 /* functional-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 21A146021A146021A1460000 /* Build configuration list for PBXAggregateTarget "functional-modularize" */;
			buildPhases = (
				21A061021A061021A0610000 /* CMake ReRun */,
				21A0DD021A0DD021A0DD0000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "functional-modularize";
			productName = "functional-modularize";
		};
		21A84B021A84B021A84B0000 /* unordered-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 21A95B021A95B021A95B0000 /* Build configuration list for PBXAggregateTarget "unordered-modularize" */;
			buildPhases = (
				21A878021A878021A8780000 /* CMake ReRun */,
				21A8F4021A8F4021A8F40000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "unordered-modularize";
			productName = "unordered-modularize";
		};
		21B059021B059021B0590000 /* pool-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 21B19A021B19A021B19A0000 /* Build configuration list for PBXAggregateTarget "pool-modularize" */;
			buildPhases = (
				21B082021B082021B0820000 /* CMake ReRun */,
				21B0FA021B0FA021B0FA0000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "pool-modularize";
			productName = "pool-modularize";
		};
		21B860021B860021B8600000 /* spirit-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 21B970021B970021B9700000 /* Build configuration list for PBXAggregateTarget "spirit-modularize" */;
			buildPhases = (
				21B88B021B88B021B88B0000 /* CMake ReRun */,
				21B907021B907021B9070000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "spirit-modularize";
			productName = "spirit-modularize";
		};
		21C061021C061021C0610000 /* variant-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 21C171021C171021C1710000 /* Build configuration list for PBXAggregateTarget "variant-modularize" */;
			buildPhases = (
				21C08C021C08C021C08C0000 /* CMake ReRun */,
				21C108021C108021C1080000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "variant-modularize";
			productName = "variant-modularize";
		};
		21C874021C874021C8740000 /* serialization-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 21C988021C988021C9880000 /* Build configuration list for PBXAggregateTarget "serialization-modularize" */;
			buildPhases = (
				21C89F021C89F021C89F0000 /* CMake ReRun */,
				21C91B021C91B021C91B0000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "serialization-modularize";
			productName = "serialization-modularize";
		};
		21D084021D084021D0840000 /* boost_serialization */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 21D187021D187021D1870000 /* Build configuration list for PBXAggregateTarget "boost_serialization" */;
			buildPhases = (
				21D0A5021D0A5021D0A50000 /* CMake ReRun */,
				21D125021D125021D1250000 /* CMake Rules */,
			);
			dependencies = (
				25A521025A521025A5210000 /* PBXTargetDependency */,
				25A59B025A59B025A59B0000 /* PBXTargetDependency */,
			);
			name = boost_serialization;
			productName = boost_serialization;
		};
		221089022108902210890000 /* boost_wserialization */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 22118C022118C022118C0000 /* Build configuration list for PBXAggregateTarget "boost_wserialization" */;
			buildPhases = (
				2210AA02210AA02210AA0000 /* CMake ReRun */,
				22112A022112A022112A0000 /* CMake Rules */,
			);
			dependencies = (
				25A615025A615025A6150000 /* PBXTargetDependency */,
				25A695025A695025A6950000 /* PBXTargetDependency */,
			);
			name = boost_wserialization;
			productName = boost_wserialization;
		};
		223851022385102238510000 /* format-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 223961022396102239610000 /* Build configuration list for PBXAggregateTarget "format-modularize" */;
			buildPhases = (
				22387C022387C022387C0000 /* CMake ReRun */,
				2238F802238F802238F80000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "format-modularize";
			productName = "format-modularize";
		};
		224061022406102240610000 /* math-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 224084022408402240840000 /* Build configuration list for PBXAggregateTarget "math-modularize" */;
			buildPhases = (
				22408C022408C022408C0000 /* CMake ReRun */,
				224108022410802241080000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "math-modularize";
			productName = "math-modularize";
		};
		224872022487202248720000 /* multi_index-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 224986022498602249860000 /* Build configuration list for PBXAggregateTarget "multi_index-modularize" */;
			buildPhases = (
				22489F022489F022489F0000 /* CMake ReRun */,
				22491B022491B022491B0000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "multi_index-modularize";
			productName = "multi_index-modularize";
		};
		22508B022508B022508B0000 /* any-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 2251F402251F402251F40000 /* Build configuration list for PBXAggregateTarget "any-modularize" */;
			buildPhases = (
				2250B402250B402250B40000 /* CMake ReRun */,
				225134022513402251340000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "any-modularize";
			productName = "any-modularize";
		};
		2258A402258A402258A40000 /* random-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 2259B402259B402259B40000 /* Build configuration list for PBXAggregateTarget "random-modularize" */;
			buildPhases = (
				2258CF02258CF02258CF0000 /* CMake ReRun */,
				22594B022594B022594B0000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "random-modularize";
			productName = "random-modularize";
		};
		2260B202260B202260B20000 /* graph-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 2261C302261C302261C30000 /* Build configuration list for PBXAggregateTarget "graph-modularize" */;
			buildPhases = (
				2260DB02260DB02260DB0000 /* CMake ReRun */,
				226153022615302261530000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "graph-modularize";
			productName = "graph-modularize";
		};
		2268B502268B502268B50000 /* boost_graph */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 2269E202269E202269E20000 /* Build configuration list for PBXAggregateTarget "boost_graph" */;
			buildPhases = (
				2268D602268D602268D60000 /* CMake ReRun */,
				226956022695602269560000 /* CMake Rules */,
			);
			dependencies = (
				25A707025A707025A7070000 /* PBXTargetDependency */,
				25A77F025A77F025A77F0000 /* PBXTargetDependency */,
			);
			name = boost_graph;
			productName = boost_graph;
		};
		2286BC02286BC02286BC0000 /* Python-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 2287CC02287CC02287CC0000 /* Build configuration list for PBXAggregateTarget "Python-modularize" */;
			buildPhases = (
				2286E702286E702286E70000 /* CMake ReRun */,
				228763022876302287630000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "Python-modularize";
			productName = "Python-modularize";
		};
		228ECD0228ECD0228ECD0000 /* boost_python */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 228FCA0228FCA0228FCA0000 /* Build configuration list for PBXAggregateTarget "boost_python" */;
			buildPhases = (
				228EEE0228EEE0228EEE0000 /* CMake ReRun */,
				228F6E0228F6E0228F6E0000 /* CMake Rules */,
			);
			dependencies = (
				25A7F7025A7F7025A7F70000 /* PBXTargetDependency */,
				25A86F025A86F025A86F0000 /* PBXTargetDependency */,
			);
			name = boost_python;
			productName = boost_python;
		};
		22CE63022CE63022CE630000 /* parameter-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 22D000022D000022D0000000 /* Build configuration list for PBXAggregateTarget "parameter-modularize" */;
			buildPhases = (
				22CF1B022CF1B022CF1B0000 /* CMake ReRun */,
				22CF97022CF97022CF970000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "parameter-modularize";
			productName = "parameter-modularize";
		};
		22D6F9022D6F9022D6F90000 /* accumulators-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 22D809022D809022D8090000 /* Build configuration list for PBXAggregateTarget "accumulators-modularize" */;
			buildPhases = (
				22D722022D722022D7220000 /* CMake ReRun */,
				22D79A022D79A022D79A0000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "accumulators-modularize";
			productName = "accumulators-modularize";
		};
		22EA01022EA01022EA010000 /* system-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 22EB11022EB11022EB110000 /* Build configuration list for PBXAggregateTarget "system-modularize" */;
			buildPhases = (
				22EA2B022EA2B022EA2B0000 /* CMake ReRun */,
				22EAA3022EAA3022EAA30000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "system-modularize";
			productName = "system-modularize";
		};
		22F20C022F20C022F20C0000 /* boost_system */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 22F308022F308022F3080000 /* Build configuration list for PBXAggregateTarget "boost_system" */;
			buildPhases = (
				22F22D022F22D022F22D0000 /* CMake ReRun */,
				22F2AD022F2AD022F2AD0000 /* CMake Rules */,
			);
			dependencies = (
				25A95F025A95F025A95F0000 /* PBXTargetDependency */,
				25A9D7025A9D7025A9D70000 /* PBXTargetDependency */,
			);
			name = boost_system;
			productName = boost_system;
		};
		2313F302313F302313F30000 /* asio-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 23153A023153A023153A0000 /* Build configuration list for PBXAggregateTarget "asio-modularize" */;
			buildPhases = (
				23141E023141E023141E0000 /* CMake ReRun */,
				23149A023149A023149A0000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "asio-modularize";
			productName = "asio-modularize";
		};
		231BF00231BF00231BF00000 /* circular_buffer-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 231D020231D020231D020000 /* Build configuration list for PBXAggregateTarget "circular_buffer-modularize" */;
			buildPhases = (
				231C1D0231C1D0231C1D0000 /* CMake ReRun */,
				231C990231C990231C990000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "circular_buffer-modularize";
			productName = "circular_buffer-modularize";
		};
		232409023240902324090000 /* ptr_container-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 23251A023251A023251A0000 /* Build configuration list for PBXAggregateTarget "ptr_container-modularize" */;
			buildPhases = (
				232432023243202324320000 /* CMake ReRun */,
				2324AA02324AA02324AA0000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "ptr_container-modularize";
			productName = "ptr_container-modularize";
		};
		232C260232C260232C260000 /* assign-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 232D3A0232D3A0232D3A0000 /* Build configuration list for PBXAggregateTarget "assign-modularize" */;
			buildPhases = (
				232C530232C530232C530000 /* CMake ReRun */,
				232CCF0232CCF0232CCF0000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "assign-modularize";
			productName = "assign-modularize";
		};
		23343D023343D023343D0000 /* bimap-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 23354D023354D023354D0000 /* Build configuration list for PBXAggregateTarget "bimap-modularize" */;
			buildPhases = (
				233468023346802334680000 /* CMake ReRun */,
				2334E402334E402334E40000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "bimap-modularize";
			productName = "bimap-modularize";
		};
		233C500233C500233C500000 /* compatibility-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 233D610233D610233D610000 /* Build configuration list for PBXAggregateTarget "compatibility-modularize" */;
			buildPhases = (
				233C790233C790233C790000 /* CMake ReRun */,
				233CF10233CF10233CF10000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "compatibility-modularize";
			productName = "compatibility-modularize";
		};
		2344A502344A502344A50000 /* crc-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 2345B602345B602345B60000 /* Build configuration list for PBXAggregateTarget "crc-modularize" */;
			buildPhases = (
				2344CE02344CE02344CE0000 /* CMake ReRun */,
				234546023454602345460000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "crc-modularize";
			productName = "crc-modularize";
		};
		234CB90234CB90234CB90000 /* timer-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 234DC80234DC80234DC80000 /* Build configuration list for PBXAggregateTarget "timer-modularize" */;
			buildPhases = (
				234CE20234CE20234CE20000 /* CMake ReRun */,
				234D5A0234D5A0234D5A0000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "timer-modularize";
			productName = "timer-modularize";
		};
		23551D023551D023551D0000 /* test-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 23565E023565E023565E0000 /* Build configuration list for PBXAggregateTarget "test-modularize" */;
			buildPhases = (
				235546023554602355460000 /* CMake ReRun */,
				2355BE02355BE02355BE0000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "test-modularize";
			productName = "test-modularize";
		};
		235D2E0235D2E0235D2E0000 /* boost_prg_exec_monitor */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 235E400235E400235E400000 /* Build configuration list for PBXAggregateTarget "boost_prg_exec_monitor" */;
			buildPhases = (
				235D4F0235D4F0235D4F0000 /* CMake ReRun */,
				235DCF0235DCF0235DCF0000 /* CMake Rules */,
			);
			dependencies = (
				25AA54025AA54025AA540000 /* PBXTargetDependency */,
				25AAD4025AAD4025AAD40000 /* PBXTargetDependency */,
			);
			name = boost_prg_exec_monitor;
			productName = boost_prg_exec_monitor;
		};
		237DB80237DB80237DB80000 /* boost_test_exec_monitor */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 237F000237F000237F000000 /* Build configuration list for PBXAggregateTarget "boost_test_exec_monitor" */;
			buildPhases = (
				237DD90237DD90237DD90000 /* CMake ReRun */,
				237E590237E590237E590000 /* CMake Rules */,
			);
			dependencies = (
				25AB45025AB45025AB450000 /* PBXTargetDependency */,
				25ABC5025ABC5025ABC50000 /* PBXTargetDependency */,
			);
			name = boost_test_exec_monitor;
			productName = boost_test_exec_monitor;
		};
		23AF12023AF12023AF120000 /* boost_unit_test_framework */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 23B05A023B05A023B05A0000 /* Build configuration list for PBXAggregateTarget "boost_unit_test_framework" */;
			buildPhases = (
				23AF33023AF33023AF330000 /* CMake ReRun */,
				23AFB3023AFB3023AFB30000 /* CMake Rules */,
			);
			dependencies = (
				25AC36025AC36025AC360000 /* PBXTargetDependency */,
				25ACB6025ACB6025ACB60000 /* PBXTargetDependency */,
			);
			name = boost_unit_test_framework;
			productName = boost_unit_test_framework;
		};
		23DFFB023DFFB023DFFB0000 /* dynamic_bitset-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 23E10D023E10D023E10D0000 /* Build configuration list for PBXAggregateTarget "dynamic_bitset-modularize" */;
			buildPhases = (
				23E028023E028023E0280000 /* CMake ReRun */,
				23E0A4023E0A4023E0A40000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "dynamic_bitset-modularize";
			productName = "dynamic_bitset-modularize";
		};
		23E811023E811023E8110000 /* filesystem-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 23E921023E921023E9210000 /* Build configuration list for PBXAggregateTarget "filesystem-modularize" */;
			buildPhases = (
				23E83C023E83C023E83C0000 /* CMake ReRun */,
				23E8B8023E8B8023E8B80000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "filesystem-modularize";
			productName = "filesystem-modularize";
		};
		23F02F023F02F023F02F0000 /* boost_filesystem */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 23F141023F141023F1410000 /* Build configuration list for PBXAggregateTarget "boost_filesystem" */;
			buildPhases = (
				23F050023F050023F0500000 /* CMake ReRun */,
				23F0D0023F0D0023F0D00000 /* CMake Rules */,
			);
			dependencies = (
				25AD27025AD27025AD270000 /* PBXTargetDependency */,
				25AD9F025AD9F025AD9F0000 /* PBXTargetDependency */,
			);
			name = boost_filesystem;
			productName = boost_filesystem;
		};
		2415F702415F702415F70000 /* interprocess-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 241707024170702417070000 /* Build configuration list for PBXAggregateTarget "interprocess-modularize" */;
			buildPhases = (
				241620024162002416200000 /* CMake ReRun */,
				241698024169802416980000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "interprocess-modularize";
			productName = "interprocess-modularize";
		};
		241E130241E130241E130000 /* flyweight-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 241F250241F250241F250000 /* Build configuration list for PBXAggregateTarget "flyweight-modularize" */;
			buildPhases = (
				241E3E0241E3E0241E3E0000 /* CMake ReRun */,
				241EBA0241EBA0241EBA0000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "flyweight-modularize";
			productName = "flyweight-modularize";
		};
		24262A024262A024262A0000 /* gil-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 24273C024273C024273C0000 /* Build configuration list for PBXAggregateTarget "gil-modularize" */;
			buildPhases = (
				242653024265302426530000 /* CMake ReRun */,
				2426CF02426CF02426CF0000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "gil-modularize";
			productName = "gil-modularize";
		};
		242E450242E450242E450000 /* mpi-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 242F550242F550242F550000 /* Build configuration list for PBXAggregateTarget "mpi-modularize" */;
			buildPhases = (
				242E700242E700242E700000 /* CMake ReRun */,
				242EEC0242EEC0242EEC0000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "mpi-modularize";
			productName = "mpi-modularize";
		};
		243653024365302436530000 /* boost_mpi */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 243761024376102437610000 /* Build configuration list for PBXAggregateTarget "boost_mpi" */;
			buildPhases = (
				243674024367402436740000 /* CMake ReRun */,
				2436F402436F402436F40000 /* CMake Rules */,
			);
			dependencies = (
				25AE1F025AE1F025AE1F0000 /* PBXTargetDependency */,
				25AE8E025AE8E025AE8E0000 /* PBXTargetDependency */,
			);
			name = boost_mpi;
			productName = boost_mpi;
		};
		246997024699702469970000 /* boost_graph_parallel */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 246A9E0246A9E0246A9E0000 /* Build configuration list for PBXAggregateTarget "boost_graph_parallel" */;
			buildPhases = (
				2469B702469B702469B70000 /* CMake ReRun */,
				246A370246A370246A370000 /* CMake Rules */,
			);
			dependencies = (
				25AF06025AF06025AF060000 /* PBXTargetDependency */,
				25AF86025AF86025AF860000 /* PBXTargetDependency */,
			);
			name = boost_graph_parallel;
			productName = boost_graph_parallel;
		};
		2488D702488D702488D70000 /* iostreams-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 2489E802489E802489E80000 /* Build configuration list for PBXAggregateTarget "iostreams-modularize" */;
			buildPhases = (
				248900024890002489000000 /* CMake ReRun */,
				248978024897802489780000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "iostreams-modularize";
			productName = "iostreams-modularize";
		};
		2490F102490F102490F10000 /* boost_iostreams */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 24920A024920A024920A0000 /* Build configuration list for PBXAggregateTarget "boost_iostreams" */;
			buildPhases = (
				249112024911202491120000 /* CMake ReRun */,
				24918C024918C024918C0000 /* CMake Rules */,
			);
			dependencies = (
				25AFF7025AFF7025AFF70000 /* PBXTargetDependency */,
				25B06F025B06F025B06F0000 /* PBXTargetDependency */,
			);
			name = boost_iostreams;
			productName = boost_iostreams;
		};
		24B2A7024B2A7024B2A70000 /* lambda-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 24B3B6024B3B6024B3B60000 /* Build configuration list for PBXAggregateTarget "lambda-modularize" */;
			buildPhases = (
				24B2D0024B2D0024B2D00000 /* CMake ReRun */,
				24B348024B348024B3480000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "lambda-modularize";
			productName = "lambda-modularize";
		};
		24BAB9024BAB9024BAB90000 /* multi_array-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 24BBCB024BBCB024BBCB0000 /* Build configuration list for PBXAggregateTarget "multi_array-modularize" */;
			buildPhases = (
				24BAE4024BAE4024BAE40000 /* CMake ReRun */,
				24BB60024BB60024BB600000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "multi_array-modularize";
			productName = "multi_array-modularize";
		};
		24C2D7024C2D7024C2D70000 /* program_options-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 24C3EB024C3EB024C3EB0000 /* Build configuration list for PBXAggregateTarget "program_options-modularize" */;
			buildPhases = (
				24C302024C302024C3020000 /* CMake ReRun */,
				24C37E024C37E024C37E0000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "program_options-modularize";
			productName = "program_options-modularize";
		};
		24CAF5024CAF5024CAF50000 /* boost_program_options */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 24CC06024CC06024CC060000 /* Build configuration list for PBXAggregateTarget "boost_program_options" */;
			buildPhases = (
				24CB16024CB16024CB160000 /* CMake ReRun */,
				24CB96024CB96024CB960000 /* CMake Rules */,
			);
			dependencies = (
				25B0E7025B0E7025B0E70000 /* PBXTargetDependency */,
				25B167025B167025B1670000 /* PBXTargetDependency */,
			);
			name = boost_program_options;
			productName = boost_program_options;
		};
		24F43B024F43B024F43B0000 /* rational-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 24F54A024F54A024F54A0000 /* Build configuration list for PBXAggregateTarget "rational-modularize" */;
			buildPhases = (
				24F464024F464024F4640000 /* CMake ReRun */,
				24F4DC024F4DC024F4DC0000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "rational-modularize";
			productName = "rational-modularize";
		};
		250044025004402500440000 /* signals-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 250155025015502501550000 /* Build configuration list for PBXAggregateTarget "signals-modularize" */;
			buildPhases = (
				250072025007202500720000 /* CMake ReRun */,
				2500EE02500EE02500EE0000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "signals-modularize";
			productName = "signals-modularize";
		};
		250859025085902508590000 /* boost_signals */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 250958025095802509580000 /* Build configuration list for PBXAggregateTarget "boost_signals" */;
			buildPhases = (
				25087A025087A025087A0000 /* CMake ReRun */,
				2508FA02508FA02508FA0000 /* CMake Rules */,
			);
			dependencies = (
				25B1E3025B1E3025B1E30000 /* PBXTargetDependency */,
				25B25D025B25D025B25D0000 /* PBXTargetDependency */,
			);
			name = boost_signals;
			productName = boost_signals;
		};
		252B500252B500252B500000 /* signals2-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 252C600252C600252C600000 /* Build configuration list for PBXAggregateTarget "signals2-modularize" */;
			buildPhases = (
				252B7B0252B7B0252B7B0000 /* CMake ReRun */,
				252BF70252BF70252BF70000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "signals2-modularize";
			productName = "signals2-modularize";
		};
		253354025335402533540000 /* statechart-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 253463025346302534630000 /* Build configuration list for PBXAggregateTarget "statechart-modularize" */;
			buildPhases = (
				25337D025337D025337D0000 /* CMake ReRun */,
				2533F502533F502533F50000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "statechart-modularize";
			productName = "statechart-modularize";
		};
		253B680253B680253B680000 /* tr1-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 253C7F0253C7F0253C7F0000 /* Build configuration list for PBXAggregateTarget "tr1-modularize" */;
			buildPhases = (
				253B910253B910253B910000 /* CMake ReRun */,
				253C0B0253C0B0253C0B0000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "tr1-modularize";
			productName = "tr1-modularize";
		};
		254380025438002543800000 /* units-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 25448F025448F025448F0000 /* Build configuration list for PBXAggregateTarget "units-modularize" */;
			buildPhases = (
				2543A902543A902543A90000 /* CMake ReRun */,
				254421025442102544210000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "units-modularize";
			productName = "units-modularize";
		};
		254B930254B930254B930000 /* wave-modularize */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 254CDA0254CDA0254CDA0000 /* Build configuration list for PBXAggregateTarget "wave-modularize" */;
			buildPhases = (
				254BBE0254BBE0254BBE0000 /* CMake ReRun */,
				254C3A0254C3A0254C3A0000 /* CMake Rules */,
			);
			dependencies = (
			);
			name = "wave-modularize";
			productName = "wave-modularize";
		};
		2553A202553A202553A20000 /* boost_wave */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 2554B002554B002554B00000 /* Build configuration list for PBXAggregateTarget "boost_wave" */;
			buildPhases = (
				2553C302553C302553C30000 /* CMake ReRun */,
				255443025544302554430000 /* CMake Rules */,
			);
			dependencies = (
				25B2D7025B2D7025B2D70000 /* PBXTargetDependency */,
				25B351025B351025B3510000 /* PBXTargetDependency */,
			);
			name = boost_wave;
			productName = boost_wave;
		};
/* End PBXAggregateTarget section */

/* Begin PBXBuildFile section */
		21057F021057F021057F0000 /* greg_month.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 210547021054702105470000 /* greg_month.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_DATE_TIME_STATIC_LINK     "; }; };
		210652021065202106520000 /* greg_weekday.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2105FC02105FC02105FC0000 /* greg_weekday.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_DATE_TIME_STATIC_LINK     "; }; };
		210710021071002107100000 /* date_generators.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2106B902106B902106B90000 /* date_generators.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_DATE_TIME_STATIC_LINK     "; }; };
		2111E002111E002111E00000 /* greg_month.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 210547021054702105470000 /* greg_month.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_DATE_TIME_STATIC_LINK     "; }; };
		21129E021129E021129E0000 /* greg_weekday.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2105FC02105FC02105FC0000 /* greg_weekday.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_DATE_TIME_STATIC_LINK     "; }; };
		211301021130102113010000 /* date_generators.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2106B902106B902106B90000 /* date_generators.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_DATE_TIME_STATIC_LINK     "; }; };
		212E000212E000212E000000 /* thread.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 212D780212D780212D780000 /* thread.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_THREAD_BUILD_LIB=1     "; }; };
		212EBA0212EBA0212EBA0000 /* exceptions.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 212E650212E650212E650000 /* exceptions.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_THREAD_BUILD_LIB=1     "; }; };
		212F750212F750212F750000 /* once.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 212F200212F200212F200000 /* once.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_THREAD_BUILD_LIB=1     "; }; };
		213A560213A560213A560000 /* thread.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 212D780212D780212D780000 /* thread.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_THREAD_BUILD_LIB=1     "; }; };
		213B070213B070213B070000 /* exceptions.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 212E650212E650212E650000 /* exceptions.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_THREAD_BUILD_LIB=1     "; }; };
		213B8D0213B8D0213B8D0000 /* once.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 212F200212F200212F200000 /* once.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_THREAD_BUILD_LIB=1     "; }; };
		215646021564602156460000 /* c_regex_traits.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2155DA02155DA02155DA0000 /* c_regex_traits.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		215705021570502157050000 /* cpp_regex_traits.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2156B302156B302156B30000 /* cpp_regex_traits.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		2157AF02157AF02157AF0000 /* cregex.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 215771021577102157710000 /* cregex.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		215866021586602158660000 /* fileiter.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 21582A021582A021582A0000 /* fileiter.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		215923021592302159230000 /* icu.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2158E002158E002158E00000 /* icu.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		2159DC02159DC02159DC0000 /* instances.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 21599F021599F021599F0000 /* instances.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		215A940215A940215A940000 /* posix_api.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 215A550215A550215A550000 /* posix_api.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		215B4A0215B4A0215B4A0000 /* regex.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 215B0C0215B0C0215B0C0000 /* regex.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		215C030215C030215C030000 /* regex_debug.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 215BC50215BC50215BC50000 /* regex_debug.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		215CBE0215CBE0215CBE0000 /* regex_raw_buffer.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 215C7D0215C7D0215C7D0000 /* regex_raw_buffer.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		215D7A0215D7A0215D7A0000 /* regex_traits_defaults.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 215D3D0215D3D0215D3D0000 /* regex_traits_defaults.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		215E350215E350215E350000 /* static_mutex.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 215DF60215DF60215DF60000 /* static_mutex.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		215EED0215EED0215EED0000 /* w32_regex_traits.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 215EAE0215EAE0215EAE0000 /* w32_regex_traits.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		215FA90215FA90215FA90000 /* wc_regex_traits.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 215F6C0215F6C0215F6C0000 /* wc_regex_traits.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		2160AA02160AA02160AA0000 /* wide_posix_api.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 216023021602302160230000 /* wide_posix_api.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		21611B021611B021611B0000 /* winstances.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2160DC02160DC02160DC0000 /* winstances.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		2161D502161D502161D50000 /* usinstances.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 216193021619302161930000 /* usinstances.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		216CB90216CB90216CB90000 /* c_regex_traits.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2155DA02155DA02155DA0000 /* c_regex_traits.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		216D3E0216D3E0216D3E0000 /* cpp_regex_traits.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2156B302156B302156B30000 /* cpp_regex_traits.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		216DD80216DD80216DD80000 /* cregex.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 215771021577102157710000 /* cregex.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		216E840216E840216E840000 /* fileiter.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 21582A021582A021582A0000 /* fileiter.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		216F0A0216F0A0216F0A0000 /* icu.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2158E002158E002158E00000 /* icu.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		216F8F0216F8F0216F8F0000 /* instances.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 21599F021599F021599F0000 /* instances.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		216FD90216FD90216FD90000 /* posix_api.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 215A550215A550215A550000 /* posix_api.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		217057021705702170570000 /* regex.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 215B0C0215B0C0215B0C0000 /* regex.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		2170D902170D902170D90000 /* regex_debug.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 215BC50215BC50215BC50000 /* regex_debug.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		21715C021715C021715C0000 /* regex_raw_buffer.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 215C7D0215C7D0215C7D0000 /* regex_raw_buffer.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		2171E402171E402171E40000 /* regex_traits_defaults.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 215D3D0215D3D0215D3D0000 /* regex_traits_defaults.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		217268021726802172680000 /* static_mutex.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 215DF60215DF60215DF60000 /* static_mutex.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		2172EB02172EB02172EB0000 /* w32_regex_traits.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 215EAE0215EAE0215EAE0000 /* w32_regex_traits.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		2173A802173A802173A80000 /* wc_regex_traits.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 215F6C0215F6C0215F6C0000 /* wc_regex_traits.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		21742A021742A021742A0000 /* wide_posix_api.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 216023021602302160230000 /* wide_posix_api.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		217472021747202174720000 /* winstances.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2160DC02160DC02160DC0000 /* winstances.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		217535021753502175350000 /* usinstances.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 216193021619302161930000 /* usinstances.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		21D88D021D88D021D88D0000 /* basic_archive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 21D81F021D81F021D81F0000 /* basic_archive.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		21D948021D948021D9480000 /* basic_iarchive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 21D8EF021D8EF021D8EF0000 /* basic_iarchive.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		21D9F3021D9F3021D9F30000 /* basic_iserializer.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 21D9AA021D9AA021D9AA0000 /* basic_iserializer.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		21DAA7021DAA7021DAA70000 /* basic_oarchive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 21DA6B021DA6B021DA6B0000 /* basic_oarchive.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		21DB64021DB64021DB640000 /* basic_oserializer.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 21DB24021DB24021DB240000 /* basic_oserializer.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		21DC3B021DC3B021DC3B0000 /* basic_pointer_iserializer.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 21DBDF021DBDF021DBDF0000 /* basic_pointer_iserializer.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		21DCF3021DCF3021DCF30000 /* basic_pointer_oserializer.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 21DCA3021DCA3021DCA30000 /* basic_pointer_oserializer.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		21DDA4021DDA4021DDA40000 /* basic_serializer_map.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 21DD5D021DD5D021DD5D0000 /* basic_serializer_map.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		21DE75021DE75021DE750000 /* basic_text_iprimitive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 21DE1D021DE1D021DE1D0000 /* basic_text_iprimitive.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		21DF35021DF35021DF350000 /* basic_text_oprimitive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 21DEDD021DEDD021DEDD0000 /* basic_text_oprimitive.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		21DFD8021DFD8021DFD80000 /* basic_xml_archive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 21DF9C021DF9C021DF9C0000 /* basic_xml_archive.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		21E0AB021E0AB021E0AB0000 /* binary_iarchive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 21E052021E052021E0520000 /* binary_iarchive.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		21E166021E166021E1660000 /* binary_oarchive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 21E10D021E10D021E10D0000 /* binary_oarchive.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		21E211021E211021E2110000 /* extended_type_info.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 21E1C8021E1C8021E1C80000 /* extended_type_info.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		21E2DA021E2DA021E2DA0000 /* extended_type_info_typeid.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 21E28A021E28A021E28A0000 /* extended_type_info_typeid.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		21E387021E387021E3870000 /* extended_type_info_no_rtti.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 21E345021E345021E3450000 /* extended_type_info_no_rtti.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		21E44E021E44E021E44E0000 /* polymorphic_iarchive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 21E3F8021E3F8021E3F80000 /* polymorphic_iarchive.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		21E50F021E50F021E50F0000 /* polymorphic_oarchive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 21E4C6021E4C6021E4C60000 /* polymorphic_oarchive.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		21E5C1021E5C1021E5C10000 /* stl_port.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 21E587021E587021E5870000 /* stl_port.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		21E68E021E68E021E68E0000 /* text_iarchive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 21E63E021E63E021E63E0000 /* text_iarchive.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		21E74F021E74F021E74F0000 /* text_oarchive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 21E6F6021E6F6021E6F60000 /* text_oarchive.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		21E807021E807021E8070000 /* void_cast.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 21E7B1021E7B1021E7B10000 /* void_cast.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		21E8BF021E8BF021E8BF0000 /* xml_grammar.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 21E869021E869021E8690000 /* xml_grammar.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		21E977021E977021E9770000 /* xml_iarchive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 21E921021E921021E9210000 /* xml_iarchive.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		21EA2F021EA2F021EA2F0000 /* xml_oarchive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 21E9D9021E9D9021E9D90000 /* xml_oarchive.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		21F4F5021F4F5021F4F50000 /* basic_archive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 21D81F021D81F021D81F0000 /* basic_archive.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		21F57D021F57D021F57D0000 /* basic_iarchive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 21D8EF021D8EF021D8EF0000 /* basic_iarchive.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		21F612021F612021F6120000 /* basic_iserializer.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 21D9AA021D9AA021D9AA0000 /* basic_iserializer.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		21F684021F684021F6840000 /* basic_oarchive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 21DA6B021DA6B021DA6B0000 /* basic_oarchive.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		21F71C021F71C021F71C0000 /* basic_oserializer.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 21DB24021DB24021DB240000 /* basic_oserializer.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		21F7A2021F7A2021F7A20000 /* basic_pointer_iserializer.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 21DBDF021DBDF021DBDF0000 /* basic_pointer_iserializer.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		21F82A021F82A021F82A0000 /* basic_pointer_oserializer.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 21DCA3021DCA3021DCA30000 /* basic_pointer_oserializer.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		21F89D021F89D021F89D0000 /* basic_serializer_map.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 21DD5D021DD5D021DD5D0000 /* basic_serializer_map.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		21F937021F937021F9370000 /* basic_text_iprimitive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 21DE1D021DE1D021DE1D0000 /* basic_text_iprimitive.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		21F9BD021F9BD021F9BD0000 /* basic_text_oprimitive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 21DEDD021DEDD021DEDD0000 /* basic_text_oprimitive.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		21FA30021FA30021FA300000 /* basic_xml_archive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 21DF9C021DF9C021DF9C0000 /* basic_xml_archive.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		21FAF0021FAF0021FAF00000 /* binary_iarchive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 21E052021E052021E0520000 /* binary_iarchive.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		21FB4A021FB4A021FB4A0000 /* binary_oarchive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 21E10D021E10D021E10D0000 /* binary_oarchive.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		21FBBB021FBBB021FBBB0000 /* extended_type_info.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 21E1C8021E1C8021E1C80000 /* extended_type_info.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		220051022005102200510000 /* extended_type_info_typeid.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 21E28A021E28A021E28A0000 /* extended_type_info_typeid.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		2200D402200D402200D40000 /* extended_type_info_no_rtti.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 21E345021E345021E3450000 /* extended_type_info_no_rtti.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		22015D022015D022015D0000 /* polymorphic_iarchive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 21E3F8021E3F8021E3F80000 /* polymorphic_iarchive.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		2201E702201E702201E70000 /* polymorphic_oarchive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 21E4C6021E4C6021E4C60000 /* polymorphic_oarchive.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		22026C022026C022026C0000 /* stl_port.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 21E587021E587021E5870000 /* stl_port.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		220318022031802203180000 /* text_iarchive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 21E63E021E63E021E63E0000 /* text_iarchive.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		220372022037202203720000 /* text_oarchive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 21E6F6021E6F6021E6F60000 /* text_oarchive.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		2203E202203E202203E20000 /* void_cast.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 21E7B1021E7B1021E7B10000 /* void_cast.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		220478022047802204780000 /* xml_grammar.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 21E869021E869021E8690000 /* xml_grammar.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		2204E802204E802204E80000 /* xml_iarchive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 21E921021E921021E9210000 /* xml_iarchive.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		22057E022057E022057E0000 /* xml_oarchive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 21E9D9021E9D9021E9D90000 /* xml_oarchive.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		22184A022184A022184A0000 /* basic_text_wiprimitive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2217C402217C402217C40000 /* basic_text_wiprimitive.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		221913022191302219130000 /* basic_text_woprimitive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2218B502218B502218B50000 /* basic_text_woprimitive.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		2219CE02219CE02219CE0000 /* text_wiarchive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 22197A022197A022197A0000 /* text_wiarchive.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		221A860221A860221A860000 /* text_woarchive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 221A300221A300221A300000 /* text_woarchive.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		221B2B0221B2B0221B2B0000 /* utf8_codecvt_facet.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 221AE80221AE80221AE80000 /* utf8_codecvt_facet.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		221BFE0221BFE0221BFE0000 /* xml_wgrammar.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 221BA50221BA50221BA50000 /* xml_wgrammar.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		221CB90221CB90221CB90000 /* xml_wiarchive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 221C600221C600221C600000 /* xml_wiarchive.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		221D740221D740221D740000 /* xml_woarchive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 221D1B0221D1B0221D1B0000 /* xml_woarchive.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		221E1A0221E1A0221E1A0000 /* codecvt_null.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 221DD60221DD60221DD60000 /* codecvt_null.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		2228F902228F902228F90000 /* basic_text_wiprimitive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2217C402217C402217C40000 /* basic_text_wiprimitive.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		222994022299402229940000 /* basic_text_woprimitive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2218B502218B502218B50000 /* basic_text_woprimitive.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		222A040222A040222A040000 /* text_wiarchive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 22197A022197A022197A0000 /* text_wiarchive.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		222A8D0222A8D0222A8D0000 /* text_woarchive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 221A300221A300221A300000 /* text_woarchive.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		222B260222B260222B260000 /* utf8_codecvt_facet.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 221AE80221AE80221AE80000 /* utf8_codecvt_facet.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		222B990222B990222B990000 /* xml_wgrammar.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 221BA50221BA50221BA50000 /* xml_wgrammar.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		222C220222C220222C220000 /* xml_wiarchive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 221C600221C600221C600000 /* xml_wiarchive.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		222CA60222CA60222CA60000 /* xml_woarchive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 221D1B0221D1B0221D1B0000 /* xml_woarchive.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		222D2C0222D2C0222D2C0000 /* codecvt_null.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 221DD60221DD60221DD60000 /* codecvt_null.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		2270A702270A702270A70000 /* read_graphviz_spirit.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 226FC90226FC90226FC90000 /* read_graphviz_spirit.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		227B4D0227B4D0227B4D0000 /* read_graphviz_spirit.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 226FC90226FC90226FC90000 /* read_graphviz_spirit.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		2296B802296B802296B80000 /* numeric.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 229659022965902296590000 /* numeric.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_PYTHON_SOURCE -DBOOST_PYTHON_STATIC_LIB       "; }; };
		229773022977302297730000 /* list.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 229738022973802297380000 /* list.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_PYTHON_SOURCE -DBOOST_PYTHON_STATIC_LIB       "; }; };
		22982F022982F022982F0000 /* long.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2297F402297F402297F40000 /* long.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_PYTHON_SOURCE -DBOOST_PYTHON_STATIC_LIB       "; }; };
		2298E702298E702298E70000 /* dict.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2298B002298B002298B00000 /* dict.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_PYTHON_SOURCE -DBOOST_PYTHON_STATIC_LIB       "; }; };
		2299AA02299AA02299AA0000 /* tuple.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 22996C022996C022996C0000 /* tuple.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_PYTHON_SOURCE -DBOOST_PYTHON_STATIC_LIB       "; }; };
		229A660229A660229A660000 /* str.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 229A2F0229A2F0229A2F0000 /* str.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_PYTHON_SOURCE -DBOOST_PYTHON_STATIC_LIB       "; }; };
		229B1F0229B1F0229B1F0000 /* slice.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 229AE70229AE70229AE70000 /* slice.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_PYTHON_SOURCE -DBOOST_PYTHON_STATIC_LIB       "; }; };
		229BDE0229BDE0229BDE0000 /* from_python.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 229BA30229BA30229BA30000 /* from_python.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_PYTHON_SOURCE -DBOOST_PYTHON_STATIC_LIB       "; }; };
		229CB10229CB10229CB10000 /* registry.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 229C640229C640229C640000 /* registry.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_PYTHON_SOURCE -DBOOST_PYTHON_STATIC_LIB       "; }; };
		229D6F0229D6F0229D6F0000 /* type_id.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 229D260229D260229D260000 /* type_id.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_PYTHON_SOURCE -DBOOST_PYTHON_STATIC_LIB       "; }; };
		229E150229E150229E150000 /* enum.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 229DDD0229DDD0229DDD0000 /* enum.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_PYTHON_SOURCE -DBOOST_PYTHON_STATIC_LIB       "; }; };
		229ED40229ED40229ED40000 /* class.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 229E9A0229E9A0229E9A0000 /* class.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_PYTHON_SOURCE -DBOOST_PYTHON_STATIC_LIB       "; }; };
		229F940229F940229F940000 /* function.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 229F5A0229F5A0229F5A0000 /* function.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_PYTHON_SOURCE -DBOOST_PYTHON_STATIC_LIB       "; }; };
		22A06D022A06D022A06D0000 /* inheritance.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 229F4B0229F4B0229F4B0000 /* inheritance.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_PYTHON_SOURCE -DBOOST_PYTHON_STATIC_LIB       "; }; };
		22A111022A111022A1110000 /* life_support.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 22A0D7022A0D7022A0D70000 /* life_support.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_PYTHON_SOURCE -DBOOST_PYTHON_STATIC_LIB       "; }; };
		22A1D2022A1D2022A1D20000 /* pickle_support.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 22A197022A197022A1970000 /* pickle_support.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_PYTHON_SOURCE -DBOOST_PYTHON_STATIC_LIB       "; }; };
		22A294022A294022A2940000 /* errors.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 22A250022A250022A2500000 /* errors.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_PYTHON_SOURCE -DBOOST_PYTHON_STATIC_LIB       "; }; };
		22A352022A352022A3520000 /* module.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 22A31A022A31A022A31A0000 /* module.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_PYTHON_SOURCE -DBOOST_PYTHON_STATIC_LIB       "; }; };
		22A42A022A42A022A42A0000 /* builtin_converters.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 22A3D3022A3D3022A3D30000 /* builtin_converters.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_PYTHON_SOURCE -DBOOST_PYTHON_STATIC_LIB       "; }; };
		22A4EA022A4EA022A4EA0000 /* arg_to_python_base.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 22A493022A493022A4930000 /* arg_to_python_base.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_PYTHON_SOURCE -DBOOST_PYTHON_STATIC_LIB       "; }; };
		22A58C022A58C022A58C0000 /* iterator.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 22A552022A552022A5520000 /* iterator.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_PYTHON_SOURCE -DBOOST_PYTHON_STATIC_LIB       "; }; };
		22A64C022A64C022A64C0000 /* stl_iterator.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 22A612022A612022A6120000 /* stl_iterator.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_PYTHON_SOURCE -DBOOST_PYTHON_STATIC_LIB       "; }; };
		22A757022A757022A7570000 /* object_protocol.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 22A603022A603022A6030000 /* object_protocol.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_PYTHON_SOURCE -DBOOST_PYTHON_STATIC_LIB       "; }; };
		22A7DB022A7DB022A7DB0000 /* object_operators.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 22A78F022A78F022A78F0000 /* object_operators.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_PYTHON_SOURCE -DBOOST_PYTHON_STATIC_LIB       "; }; };
		22A884022A884022A8840000 /* wrapper.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 22A84C022A84C022A84C0000 /* wrapper.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_PYTHON_SOURCE -DBOOST_PYTHON_STATIC_LIB       "; }; };
		22A93F022A93F022A93F0000 /* import.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 22A907022A907022A9070000 /* import.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_PYTHON_SOURCE -DBOOST_PYTHON_STATIC_LIB       "; }; };
		22A9F9022A9F9022A9F90000 /* exec.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 22A9C2022A9C2022A9C20000 /* exec.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_PYTHON_SOURCE -DBOOST_PYTHON_STATIC_LIB       "; }; };
		22AAD7022AAD7022AAD70000 /* function_doc_signature.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 22AA80022AA80022AA800000 /* function_doc_signature.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_PYTHON_SOURCE -DBOOST_PYTHON_STATIC_LIB       "; }; };
		22B519022B519022B5190000 /* numeric.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 229659022965902296590000 /* numeric.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_PYTHON_SOURCE -DBOOST_PYTHON_STATIC_LIB       "; }; };
		22B639022B639022B6390000 /* list.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 229738022973802297380000 /* list.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_PYTHON_SOURCE -DBOOST_PYTHON_STATIC_LIB       "; }; };
		22B6BD022B6BD022B6BD0000 /* long.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2297F402297F402297F40000 /* long.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_PYTHON_SOURCE -DBOOST_PYTHON_STATIC_LIB       "; }; };
		22B733022B733022B7330000 /* dict.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2298B002298B002298B00000 /* dict.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_PYTHON_SOURCE -DBOOST_PYTHON_STATIC_LIB       "; }; };
		22B7C9022B7C9022B7C90000 /* tuple.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 22996C022996C022996C0000 /* tuple.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_PYTHON_SOURCE -DBOOST_PYTHON_STATIC_LIB       "; }; };
		22B83E022B83E022B83E0000 /* str.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 229A2F0229A2F0229A2F0000 /* str.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_PYTHON_SOURCE -DBOOST_PYTHON_STATIC_LIB       "; }; };
		22B8C2022B8C2022B8C20000 /* slice.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 229AE70229AE70229AE70000 /* slice.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_PYTHON_SOURCE -DBOOST_PYTHON_STATIC_LIB       "; }; };
		22B986022B986022B9860000 /* from_python.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 229BA30229BA30229BA30000 /* from_python.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_PYTHON_SOURCE -DBOOST_PYTHON_STATIC_LIB       "; }; };
		22B9D2022B9D2022B9D20000 /* registry.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 229C640229C640229C640000 /* registry.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_PYTHON_SOURCE -DBOOST_PYTHON_STATIC_LIB       "; }; };
		22BA9C022BA9C022BA9C0000 /* type_id.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 229D260229D260229D260000 /* type_id.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_PYTHON_SOURCE -DBOOST_PYTHON_STATIC_LIB       "; }; };
		22BAE7022BAE7022BAE70000 /* enum.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 229DDD0229DDD0229DDD0000 /* enum.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_PYTHON_SOURCE -DBOOST_PYTHON_STATIC_LIB       "; }; };
		22BBA7022BBA7022BBA70000 /* class.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 229E9A0229E9A0229E9A0000 /* class.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_PYTHON_SOURCE -DBOOST_PYTHON_STATIC_LIB       "; }; };
		22BBF3022BBF3022BBF30000 /* function.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 229F5A0229F5A0229F5A0000 /* function.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_PYTHON_SOURCE -DBOOST_PYTHON_STATIC_LIB       "; }; };
		22BCB7022BCB7022BCB70000 /* inheritance.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 229F4B0229F4B0229F4B0000 /* inheritance.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_PYTHON_SOURCE -DBOOST_PYTHON_STATIC_LIB       "; }; };
		22BD03022BD03022BD030000 /* life_support.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 22A0D7022A0D7022A0D70000 /* life_support.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_PYTHON_SOURCE -DBOOST_PYTHON_STATIC_LIB       "; }; };
		22BDC7022BDC7022BDC70000 /* pickle_support.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 22A197022A197022A1970000 /* pickle_support.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_PYTHON_SOURCE -DBOOST_PYTHON_STATIC_LIB       "; }; };
		22BE4F022BE4F022BE4F0000 /* errors.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 22A250022A250022A2500000 /* errors.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_PYTHON_SOURCE -DBOOST_PYTHON_STATIC_LIB       "; }; };
		22BE9C022BE9C022BE9C0000 /* module.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 22A31A022A31A022A31A0000 /* module.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_PYTHON_SOURCE -DBOOST_PYTHON_STATIC_LIB       "; }; };
		22BF32022BF32022BF320000 /* builtin_converters.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 22A3D3022A3D3022A3D30000 /* builtin_converters.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_PYTHON_SOURCE -DBOOST_PYTHON_STATIC_LIB       "; }; };
		22BFBE022BFBE022BFBE0000 /* arg_to_python_base.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 22A493022A493022A4930000 /* arg_to_python_base.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_PYTHON_SOURCE -DBOOST_PYTHON_STATIC_LIB       "; }; };
		22C06E022C06E022C06E0000 /* iterator.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 22A552022A552022A5520000 /* iterator.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_PYTHON_SOURCE -DBOOST_PYTHON_STATIC_LIB       "; }; };
		22C0BA022C0BA022C0BA0000 /* stl_iterator.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 22A612022A612022A6120000 /* stl_iterator.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_PYTHON_SOURCE -DBOOST_PYTHON_STATIC_LIB       "; }; };
		22C17E022C17E022C17E0000 /* object_protocol.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 22A603022A603022A6030000 /* object_protocol.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_PYTHON_SOURCE -DBOOST_PYTHON_STATIC_LIB       "; }; };
		22C1C7022C1C7022C1C70000 /* object_operators.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 22A78F022A78F022A78F0000 /* object_operators.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_PYTHON_SOURCE -DBOOST_PYTHON_STATIC_LIB       "; }; };
		22C24D022C24D022C24D0000 /* wrapper.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 22A84C022A84C022A84C0000 /* wrapper.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_PYTHON_SOURCE -DBOOST_PYTHON_STATIC_LIB       "; }; };
		22C2D1022C2D1022C2D10000 /* import.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 22A907022A907022A9070000 /* import.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_PYTHON_SOURCE -DBOOST_PYTHON_STATIC_LIB       "; }; };
		22C355022C355022C3550000 /* exec.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 22A9C2022A9C2022A9C20000 /* exec.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_PYTHON_SOURCE -DBOOST_PYTHON_STATIC_LIB       "; }; };
		22C3EF022C3EF022C3EF0000 /* function_doc_signature.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 22AA80022AA80022AA800000 /* function_doc_signature.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_PYTHON_SOURCE -DBOOST_PYTHON_STATIC_LIB       "; }; };
		22DF24022DF24022DF240000 /* main.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 22DDFE022DDFE022DDFE0000 /* main.cpp */; settings = {COMPILER_FLAGS = "        "; }; };
		22F9ED022F9ED022F9ED0000 /* error_code.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 22F9BE022F9BE022F9BE0000 /* error_code.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_SYSTEM_STATIC_LINK=1     "; }; };
		2308C702308C702308C70000 /* error_code.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 22F9BE022F9BE022F9BE0000 /* error_code.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_SYSTEM_STATIC_LINK=1     "; }; };
		236532023653202365320000 /* execution_monitor.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 23635D023635D023635D0000 /* execution_monitor.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		2365DB02365DB02365DB0000 /* cpp_main.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 23659E023659E023659E0000 /* cpp_main.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		236692023669202366920000 /* debug.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 236654023665402366540000 /* debug.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		237198023719802371980000 /* execution_monitor.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 23635D023635D023635D0000 /* execution_monitor.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		23720B023720B023720B0000 /* cpp_main.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 23659E023659E023659E0000 /* cpp_main.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		23729F023729F023729F0000 /* debug.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 236654023665402366540000 /* debug.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		23857A023857A023857A0000 /* compiler_log_formatter.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2383B602383B602383B60000 /* compiler_log_formatter.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		23860F023860F023860F0000 /* debug.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 236654023665402366540000 /* debug.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		238691023869102386910000 /* execution_monitor.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 23635D023635D023635D0000 /* execution_monitor.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		23873C023873C023873C0000 /* framework.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2386FF02386FF02386FF0000 /* framework.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		238804023880402388040000 /* plain_report_formatter.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2387B502387B502387B50000 /* plain_report_formatter.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		2388B102388B102388B10000 /* progress_monitor.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 23886E023886E023886E0000 /* progress_monitor.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		23896E023896E023896E0000 /* results_collector.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 23892D023892D023892D0000 /* results_collector.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		238A2B0238A2B0238A2B0000 /* results_reporter.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2389EA02389EA02389EA0000 /* results_reporter.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		238AE70238AE70238AE70000 /* test_main.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 238AA60238AA60238AA60000 /* test_main.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		238BA00238BA00238BA00000 /* test_tools.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 238B5F0238B5F0238B5F0000 /* test_tools.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		238C580238C580238C580000 /* unit_test_log.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 238C190238C190238C190000 /* unit_test_log.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		238D5B0238D5B0238D5B0000 /* unit_test_main.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 238CD20238CD20238CD20000 /* unit_test_main.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		238DCC0238DCC0238DCC0000 /* unit_test_monitor.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 238D8D0238D8D0238D8D0000 /* unit_test_monitor.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		238E940238E940238E940000 /* unit_test_parameters.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 238E490238E490238E490000 /* unit_test_parameters.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		238F890238F890238F890000 /* unit_test_suite.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 238EFE0238EFE0238EFE0000 /* unit_test_suite.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		238FFA0238FFA0238FFA0000 /* xml_log_formatter.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 238FBB0238FBB0238FBB0000 /* xml_log_formatter.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		2390C602390C602390C60000 /* xml_report_formatter.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 239077023907702390770000 /* xml_report_formatter.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		239B4E0239B4E0239B4E0000 /* compiler_log_formatter.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2383B602383B602383B60000 /* compiler_log_formatter.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		239C160239C160239C160000 /* debug.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 236654023665402366540000 /* debug.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		239CDF0239CDF0239CDF0000 /* execution_monitor.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 23635D023635D023635D0000 /* execution_monitor.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		239D1E0239D1E0239D1E0000 /* framework.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2386FF02386FF02386FF0000 /* framework.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		239DAA0239DAA0239DAA0000 /* plain_report_formatter.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2387B502387B502387B50000 /* plain_report_formatter.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		239E340239E340239E340000 /* progress_monitor.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 23886E023886E023886E0000 /* progress_monitor.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		239EBA0239EBA0239EBA0000 /* results_collector.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 23892D023892D023892D0000 /* results_collector.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		239F400239F400239F400000 /* results_reporter.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2389EA02389EA02389EA0000 /* results_reporter.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		239FC70239FC70239FC70000 /* test_main.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 238AA60238AA60238AA60000 /* test_main.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		23A044023A044023A0440000 /* test_tools.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 238B5F0238B5F0238B5F0000 /* test_tools.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		23A0CE023A0CE023A0CE0000 /* unit_test_log.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 238C190238C190238C190000 /* unit_test_log.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		23A18B023A18B023A18B0000 /* unit_test_main.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 238CD20238CD20238CD20000 /* unit_test_main.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		23A20F023A20F023A20F0000 /* unit_test_monitor.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 238D8D0238D8D0238D8D0000 /* unit_test_monitor.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		23A256023A256023A2560000 /* unit_test_parameters.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 238E490238E490238E490000 /* unit_test_parameters.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		23A2F0023A2F0023A2F00000 /* unit_test_suite.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 238EFE0238EFE0238EFE0000 /* unit_test_suite.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		23A360023A360023A3600000 /* xml_log_formatter.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 238FBB0238FBB0238FBB0000 /* xml_log_formatter.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		23A3E8023A3E8023A3E80000 /* xml_report_formatter.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 239077023907702390770000 /* xml_report_formatter.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		23B542023B542023B5420000 /* compiler_log_formatter.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2383B602383B602383B60000 /* compiler_log_formatter.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		23B759023B759023B7590000 /* debug.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 236654023665402366540000 /* debug.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		23B7CE023B7CE023B7CE0000 /* exception_safety.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 23B78A023B78A023B78A0000 /* exception_safety.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		23B8A1023B8A1023B8A10000 /* execution_monitor.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 23635D023635D023635D0000 /* execution_monitor.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		23B8EA023B8EA023B8EA0000 /* framework.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2386FF02386FF02386FF0000 /* framework.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		23B997023B997023B9970000 /* interaction_based.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 23B957023B957023B9570000 /* interaction_based.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		23BA53023BA53023BA530000 /* logged_expectations.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 23BA13023BA13023BA130000 /* logged_expectations.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		23BB26023BB26023BB260000 /* plain_report_formatter.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2387B502387B502387B50000 /* plain_report_formatter.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		23BB70023BB70023BB700000 /* progress_monitor.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 23886E023886E023886E0000 /* progress_monitor.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		23BBF6023BBF6023BBF60000 /* results_collector.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 23892D023892D023892D0000 /* results_collector.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		23BC7A023BC7A023BC7A0000 /* results_reporter.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2389EA02389EA02389EA0000 /* results_reporter.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		23BD3E023BD3E023BD3E0000 /* test_tools.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 238B5F0238B5F0238B5F0000 /* test_tools.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		23BDC0023BDC0023BDC00000 /* unit_test_log.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 238C190238C190238C190000 /* unit_test_log.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		23BE06023BE06023BE060000 /* unit_test_main.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 238CD20238CD20238CD20000 /* unit_test_main.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		23BE9E023BE9E023BE9E0000 /* unit_test_monitor.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 238D8D0238D8D0238D8D0000 /* unit_test_monitor.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		23BF50023BF50023BF500000 /* unit_test_parameters.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 238E490238E490238E490000 /* unit_test_parameters.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		23BF9C023BF9C023BF9C0000 /* unit_test_suite.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 238EFE0238EFE0238EFE0000 /* unit_test_suite.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		23C023023C023023C0230000 /* xml_log_formatter.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 238FBB0238FBB0238FBB0000 /* xml_log_formatter.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		23C0A7023C0A7023C0A70000 /* xml_report_formatter.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 239077023907702390770000 /* xml_report_formatter.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		23CB34023CB34023CB340000 /* compiler_log_formatter.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2383B602383B602383B60000 /* compiler_log_formatter.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		23CBFC023CBFC023CBFC0000 /* debug.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 236654023665402366540000 /* debug.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		23CC86023CC86023CC860000 /* exception_safety.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 23B78A023B78A023B78A0000 /* exception_safety.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		23CD0D023CD0D023CD0D0000 /* execution_monitor.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 23635D023635D023635D0000 /* execution_monitor.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		23CD90023CD90023CD900000 /* framework.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2386FF02386FF02386FF0000 /* framework.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		23CE11023CE11023CE110000 /* interaction_based.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 23B957023B957023B9570000 /* interaction_based.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		23CE97023CE97023CE970000 /* logged_expectations.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 23BA13023BA13023BA130000 /* logged_expectations.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		23CF1E023CF1E023CF1E0000 /* plain_report_formatter.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2387B502387B502387B50000 /* plain_report_formatter.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		23CFA4023CFA4023CFA40000 /* progress_monitor.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 23886E023886E023886E0000 /* progress_monitor.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		23D069023D069023D0690000 /* results_collector.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 23892D023892D023892D0000 /* results_collector.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		23D0B1023D0B1023D0B10000 /* results_reporter.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2389EA02389EA02389EA0000 /* results_reporter.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		23D133023D133023D1330000 /* test_tools.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 238B5F0238B5F0238B5F0000 /* test_tools.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		23D1B6023D1B6023D1B60000 /* unit_test_log.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 238C190238C190238C190000 /* unit_test_log.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		23D233023D233023D2330000 /* unit_test_main.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 238CD20238CD20238CD20000 /* unit_test_main.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		23D2FB023D2FB023D2FB0000 /* unit_test_monitor.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 238D8D0238D8D0238D8D0000 /* unit_test_monitor.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		23D341023D341023D3410000 /* unit_test_parameters.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 238E490238E490238E490000 /* unit_test_parameters.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		23D3CA023D3CA023D3CA0000 /* unit_test_suite.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 238EFE0238EFE0238EFE0000 /* unit_test_suite.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		23D454023D454023D4540000 /* xml_log_formatter.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 238FBB0238FBB0238FBB0000 /* xml_log_formatter.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		23D4D9023D4D9023D4D90000 /* xml_report_formatter.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 239077023907702390770000 /* xml_report_formatter.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		23F82F023F82F023F82F0000 /* operations.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 23F743023F743023F7430000 /* operations.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_FILESYSTEM_STATIC_LINK=1     "; }; };
		23F8D5023F8D5023F8D50000 /* path.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 23F89B023F89B023F89B0000 /* path.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_FILESYSTEM_STATIC_LINK=1     "; }; };
		23F9AA023F9AA023F9AA0000 /* portability.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 23F959023F959023F9590000 /* portability.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_FILESYSTEM_STATIC_LINK=1     "; }; };
		23FA55023FA55023FA550000 /* utf8_codecvt_facet.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 23FA11023FA11023FA110000 /* utf8_codecvt_facet.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG -DBOOST_FILESYSTEM_STATIC_LINK=1     "; }; };
		240946024094602409460000 /* operations.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 23F743023F743023F7430000 /* operations.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_FILESYSTEM_STATIC_LINK=1     "; }; };
		2409BC02409BC02409BC0000 /* path.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 23F89B023F89B023F89B0000 /* path.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_FILESYSTEM_STATIC_LINK=1     "; }; };
		240A7D0240A7D0240A7D0000 /* portability.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 23F959023F959023F9590000 /* portability.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_FILESYSTEM_STATIC_LINK=1     "; }; };
		240AC60240AC60240AC60000 /* utf8_codecvt_facet.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 23FA11023FA11023FA110000 /* utf8_codecvt_facet.cpp */; settings = {COMPILER_FLAGS = "  -g -DBOOST_FILESYSTEM_STATIC_LINK=1     "; }; };
		243E3D0243E3D0243E3D0000 /* broadcast.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 243DE10243DE10243DE10000 /* broadcast.cpp */; settings = {COMPILER_FLAGS = "-D_REENTRANT  -O3 -DNDEBUG      "; }; };
		243EFC0243EFC0243EFC0000 /* communicator.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 243EBA0243EBA0243EBA0000 /* communicator.cpp */; settings = {COMPILER_FLAGS = "-D_REENTRANT  -O3 -DNDEBUG      "; }; };
		243FB50243FB50243FB50000 /* computation_tree.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 243F760243F760243F760000 /* computation_tree.cpp */; settings = {COMPILER_FLAGS = "-D_REENTRANT  -O3 -DNDEBUG      "; }; };
		244071024407102440710000 /* content_oarchive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 244034024403402440340000 /* content_oarchive.cpp */; settings = {COMPILER_FLAGS = "-D_REENTRANT  -O3 -DNDEBUG      "; }; };
		24412E024412E024412E0000 /* environment.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2440ED02440ED02440ED0000 /* environment.cpp */; settings = {COMPILER_FLAGS = "-D_REENTRANT  -O3 -DNDEBUG      "; }; };
		2441E802441E802441E80000 /* exception.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2441AA02441AA02441AA0000 /* exception.cpp */; settings = {COMPILER_FLAGS = "-D_REENTRANT  -O3 -DNDEBUG      "; }; };
		2442A102442A102442A10000 /* graph_communicator.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 244264024426402442640000 /* graph_communicator.cpp */; settings = {COMPILER_FLAGS = "-D_REENTRANT  -O3 -DNDEBUG      "; }; };
		24435B024435B024435B0000 /* group.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 24431D024431D024431D0000 /* group.cpp */; settings = {COMPILER_FLAGS = "-D_REENTRANT  -O3 -DNDEBUG      "; }; };
		244417024441702444170000 /* intercommunicator.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2443D702443D702443D70000 /* intercommunicator.cpp */; settings = {COMPILER_FLAGS = "-D_REENTRANT  -O3 -DNDEBUG      "; }; };
		2444D702444D702444D70000 /* mpi_datatype_cache.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 244496024449602444960000 /* mpi_datatype_cache.cpp */; settings = {COMPILER_FLAGS = "-D_REENTRANT  -O3 -DNDEBUG      "; }; };
		244592024459202445920000 /* mpi_datatype_oarchive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 244556024455602445560000 /* mpi_datatype_oarchive.cpp */; settings = {COMPILER_FLAGS = "-D_REENTRANT  -O3 -DNDEBUG      "; }; };
		244695024469502446950000 /* packed_iarchive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 24460E024460E024460E0000 /* packed_iarchive.cpp */; settings = {COMPILER_FLAGS = "-D_REENTRANT  -O3 -DNDEBUG      "; }; };
		24474F024474F024474F0000 /* packed_oarchive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2446C802446C802446C80000 /* packed_oarchive.cpp */; settings = {COMPILER_FLAGS = "-D_REENTRANT  -O3 -DNDEBUG      "; }; };
		2447C102447C102447C10000 /* packed_skeleton_iarchive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 244782024478202447820000 /* packed_skeleton_iarchive.cpp */; settings = {COMPILER_FLAGS = "-D_REENTRANT  -O3 -DNDEBUG      "; }; };
		24487D024487D024487D0000 /* packed_skeleton_oarchive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 244840024484002448400000 /* packed_skeleton_oarchive.cpp */; settings = {COMPILER_FLAGS = "-D_REENTRANT  -O3 -DNDEBUG      "; }; };
		244938024493802449380000 /* point_to_point.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2448F902448F902448F90000 /* point_to_point.cpp */; settings = {COMPILER_FLAGS = "-D_REENTRANT  -O3 -DNDEBUG      "; }; };
		2449F102449F102449F10000 /* request.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2449B002449B002449B00000 /* request.cpp */; settings = {COMPILER_FLAGS = "-D_REENTRANT  -O3 -DNDEBUG      "; }; };
		244AAE0244AAE0244AAE0000 /* text_skeleton_oarchive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 244A6F0244A6F0244A6F0000 /* text_skeleton_oarchive.cpp */; settings = {COMPILER_FLAGS = "-D_REENTRANT  -O3 -DNDEBUG      "; }; };
		245539024553902455390000 /* broadcast.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 243DE10243DE10243DE10000 /* broadcast.cpp */; settings = {COMPILER_FLAGS = "-D_REENTRANT  -g      "; }; };
		245629024562902456290000 /* communicator.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 243EBA0243EBA0243EBA0000 /* communicator.cpp */; settings = {COMPILER_FLAGS = "-D_REENTRANT  -g      "; }; };
		24569B024569B024569B0000 /* computation_tree.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 243F760243F760243F760000 /* computation_tree.cpp */; settings = {COMPILER_FLAGS = "-D_REENTRANT  -g      "; }; };
		245723024572302457230000 /* content_oarchive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 244034024403402440340000 /* content_oarchive.cpp */; settings = {COMPILER_FLAGS = "-D_REENTRANT  -g      "; }; };
		2457C002457C002457C00000 /* environment.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2440ED02440ED02440ED0000 /* environment.cpp */; settings = {COMPILER_FLAGS = "-D_REENTRANT  -g      "; }; };
		245832024583202458320000 /* exception.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2441AA02441AA02441AA0000 /* exception.cpp */; settings = {COMPILER_FLAGS = "-D_REENTRANT  -g      "; }; };
		2458B602458B602458B60000 /* graph_communicator.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 244264024426402442640000 /* graph_communicator.cpp */; settings = {COMPILER_FLAGS = "-D_REENTRANT  -g      "; }; };
		24593A024593A024593A0000 /* group.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 24431D024431D024431D0000 /* group.cpp */; settings = {COMPILER_FLAGS = "-D_REENTRANT  -g      "; }; };
		2459D202459D202459D20000 /* intercommunicator.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2443D702443D702443D70000 /* intercommunicator.cpp */; settings = {COMPILER_FLAGS = "-D_REENTRANT  -g      "; }; };
		245A480245A480245A480000 /* mpi_datatype_cache.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 244496024449602444960000 /* mpi_datatype_cache.cpp */; settings = {COMPILER_FLAGS = "-D_REENTRANT  -g      "; }; };
		245AD10245AD10245AD10000 /* mpi_datatype_oarchive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 244556024455602445560000 /* mpi_datatype_oarchive.cpp */; settings = {COMPILER_FLAGS = "-D_REENTRANT  -g      "; }; };
		245B930245B930245B930000 /* packed_iarchive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 24460E024460E024460E0000 /* packed_iarchive.cpp */; settings = {COMPILER_FLAGS = "-D_REENTRANT  -g      "; }; };
		245BDB0245BDB0245BDB0000 /* packed_oarchive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2446C802446C802446C80000 /* packed_oarchive.cpp */; settings = {COMPILER_FLAGS = "-D_REENTRANT  -g      "; }; };
		245C600245C600245C600000 /* packed_skeleton_iarchive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 244782024478202447820000 /* packed_skeleton_iarchive.cpp */; settings = {COMPILER_FLAGS = "-D_REENTRANT  -g      "; }; };
		245CF90245CF90245CF90000 /* packed_skeleton_oarchive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 244840024484002448400000 /* packed_skeleton_oarchive.cpp */; settings = {COMPILER_FLAGS = "-D_REENTRANT  -g      "; }; };
		245DA40245DA40245DA40000 /* point_to_point.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2448F902448F902448F90000 /* point_to_point.cpp */; settings = {COMPILER_FLAGS = "-D_REENTRANT  -g      "; }; };
		245DEC0245DEC0245DEC0000 /* request.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2449B002449B002449B00000 /* request.cpp */; settings = {COMPILER_FLAGS = "-D_REENTRANT  -g      "; }; };
		245E750245E750245E750000 /* text_skeleton_oarchive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 244A6F0244A6F0244A6F0000 /* text_skeleton_oarchive.cpp */; settings = {COMPILER_FLAGS = "-D_REENTRANT  -g      "; }; };
		247181024718102471810000 /* mpi_process_group.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 24701E024701E024701E0000 /* mpi_process_group.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		247254024725402472540000 /* tag_allocator.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2471FB02471FB02471FB0000 /* tag_allocator.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		247CD60247CD60247CD60000 /* mpi_process_group.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 24701E024701E024701E0000 /* mpi_process_group.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		247DA60247DA60247DA60000 /* tag_allocator.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2471FB02471FB02471FB0000 /* tag_allocator.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		2498F702498F702498F70000 /* file_descriptor.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 249809024980902498090000 /* file_descriptor.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		24999A024999A024999A0000 /* mapped_file.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 24995A024995A024995A0000 /* mapped_file.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		249A610249A610249A610000 /* zlib.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 249A190249A190249A190000 /* zlib.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		249B0D0249B0D0249B0D0000 /* bzip2.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 249AD40249AD40249AD40000 /* bzip2.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		24A5EF024A5EF024A5EF0000 /* file_descriptor.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 249809024980902498090000 /* file_descriptor.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		24A676024A676024A6760000 /* mapped_file.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 24995A024995A024995A0000 /* mapped_file.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		24A6F5024A6F5024A6F50000 /* zlib.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 249A190249A190249A190000 /* zlib.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		24A776024A776024A7760000 /* bzip2.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 249AD40249AD40249AD40000 /* bzip2.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		24D2FC024D2FC024D2FC0000 /* cmdline.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 24CDD7024CDD7024CDD70000 /* cmdline.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		24D3BC024D3BC024D3BC0000 /* config_file.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 24D366024D366024D3660000 /* config_file.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		24D47D024D47D024D47D0000 /* options_description.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 24D41F024D41F024D41F0000 /* options_description.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		24D520024D520024D5200000 /* parsers.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 24D4E4024D4E4024D4E40000 /* parsers.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		24D5DD024D5DD024D5DD0000 /* variables_map.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 24D59D024D59D024D59D0000 /* variables_map.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		24D6B0024D6B0024D6B00000 /* value_semantic.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 24D65A024D65A024D65A0000 /* value_semantic.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		24D758024D758024D7580000 /* positional_options.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 24D712024D712024D7120000 /* positional_options.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		24D80C024D80C024D80C0000 /* utf8_codecvt_facet.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 24D7D0024D7D0024D7D00000 /* utf8_codecvt_facet.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		24D8DA024D8DA024D8DA0000 /* convert.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 24D886024D886024D8860000 /* convert.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		24D99A024D99A024D99A0000 /* winmain.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 24D944024D944024D9440000 /* winmain.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		24E403024E403024E4030000 /* cmdline.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 24CDD7024CDD7024CDD70000 /* cmdline.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		24E4E7024E4E7024E4E70000 /* config_file.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 24D366024D366024D3660000 /* config_file.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		24E5AB024E5AB024E5AB0000 /* options_description.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 24D41F024D41F024D41F0000 /* options_description.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		24E5F3024E5F3024E5F30000 /* parsers.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 24D4E4024D4E4024D4E40000 /* parsers.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		24E679024E679024E6790000 /* variables_map.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 24D59D024D59D024D59D0000 /* variables_map.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		24E73F024E73F024E73F0000 /* value_semantic.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 24D65A024D65A024D65A0000 /* value_semantic.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		24E799024E799024E7990000 /* positional_options.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 24D712024D712024D7120000 /* positional_options.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		24E81E024E81E024E81E0000 /* utf8_codecvt_facet.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 24D7D0024D7D0024D7D00000 /* utf8_codecvt_facet.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		24E8D3024E8D3024E8D30000 /* convert.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 24D886024D886024D8860000 /* convert.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		24E958024E958024E9580000 /* winmain.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 24D944024D944024D9440000 /* winmain.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		251056025105602510560000 /* trackable.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 250F710250F710250F710000 /* trackable.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		251107025110702511070000 /* connection.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2510BF02510BF02510BF0000 /* connection.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		2511D002511D002511D00000 /* named_slot_map.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 25117B025117B025117B0000 /* named_slot_map.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		25128A025128A025128A0000 /* signal_base.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 251235025123502512350000 /* signal_base.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		25132F025132F025132F0000 /* slot.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2512EE02512EE02512EE0000 /* slot.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		251E1A0251E1A0251E1A0000 /* trackable.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 250F710250F710250F710000 /* trackable.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		251E990251E990251E990000 /* connection.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2510BF02510BF02510BF0000 /* connection.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		251F1C0251F1C0251F1C0000 /* named_slot_map.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 25117B025117B025117B0000 /* named_slot_map.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		251FDE0251FDE0251FDE0000 /* signal_base.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 251235025123502512350000 /* signal_base.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		252025025202502520250000 /* slot.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2512EE02512EE02512EE0000 /* slot.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		255B900255B900255B900000 /* instantiate_cpp_exprgrammar.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 255B2E0255B2E0255B2E0000 /* instantiate_cpp_exprgrammar.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		255C5E0255C5E0255C5E0000 /* instantiate_cpp_grammar.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 255C0C0255C0C0255C0C0000 /* instantiate_cpp_grammar.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		255D0B0255D0B0255D0B0000 /* instantiate_cpp_literalgrs.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 255CCB0255CCB0255CCB0000 /* instantiate_cpp_literalgrs.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		255DC70255DC70255DC70000 /* instantiate_defined_grammar.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 255D870255D870255D870000 /* instantiate_defined_grammar.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		255E850255E850255E850000 /* instantiate_predef_macros.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 255E430255E430255E430000 /* instantiate_predef_macros.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		255F510255F510255F510000 /* instantiate_re2c_lexer.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 255F040255F040255F040000 /* instantiate_re2c_lexer.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		25600C025600C025600C0000 /* instantiate_re2c_lexer_str.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 255FBE0255FBE0255FBE0000 /* instantiate_re2c_lexer_str.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		2560B602560B602560B60000 /* token_ids.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 256075025607502560750000 /* token_ids.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		25617F025617F025617F0000 /* wave_config_constant.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 256130025613002561300000 /* wave_config_constant.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		256241025624102562410000 /* aq.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2561EC02561EC02561EC0000 /* aq.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		2562FB02562FB02562FB0000 /* cpp_re.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2562A602562A602562A60000 /* cpp_re.cpp */; settings = {COMPILER_FLAGS = "  -O3 -DNDEBUG      "; }; };
		256DBF0256DBF0256DBF0000 /* instantiate_cpp_exprgrammar.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 255B2E0255B2E0255B2E0000 /* instantiate_cpp_exprgrammar.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		256E470256E470256E470000 /* instantiate_cpp_grammar.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 255C0C0255C0C0255C0C0000 /* instantiate_cpp_grammar.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		256ECD0256ECD0256ECD0000 /* instantiate_cpp_literalgrs.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 255CCB0255CCB0255CCB0000 /* instantiate_cpp_literalgrs.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		256F660256F660256F660000 /* instantiate_defined_grammar.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 255D870255D870255D870000 /* instantiate_defined_grammar.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		256FEB0256FEB0256FEB0000 /* instantiate_predef_macros.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 255E430255E430255E430000 /* instantiate_predef_macros.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		257070025707002570700000 /* instantiate_re2c_lexer.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 255F040255F040255F040000 /* instantiate_re2c_lexer.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		2570E202570E202570E20000 /* instantiate_re2c_lexer_str.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 255FBE0255FBE0255FBE0000 /* instantiate_re2c_lexer_str.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		257166025716602571660000 /* token_ids.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 256075025607502560750000 /* token_ids.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		257202025720202572020000 /* wave_config_constant.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 256130025613002561300000 /* wave_config_constant.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		257288025728802572880000 /* aq.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2561EC02561EC02561EC0000 /* aq.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		257336025733602573360000 /* cpp_re.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2562A602562A602562A60000 /* cpp_re.cpp */; settings = {COMPILER_FLAGS = "  -g      "; }; };
		257DBC0257DBC0257DBC0000 /* add_path.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 257DAE0257DAE0257DAE0000 /* add_path.cpp */; settings = {COMPILER_FLAGS = "        "; }; };
		257E710257E710257E710000 /* bcp_imp.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 257E5B0257E5B0257E5B0000 /* bcp_imp.cpp */; settings = {COMPILER_FLAGS = "        "; }; };
		257F280257F280257F280000 /* copy_path.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 257F120257F120257F120000 /* copy_path.cpp */; settings = {COMPILER_FLAGS = "        "; }; };
		257FDF0257FDF0257FDF0000 /* file_types.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 257FC90257FC90257FC90000 /* file_types.cpp */; settings = {COMPILER_FLAGS = "        "; }; };
		258096025809602580960000 /* fileview.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 258080025808002580800000 /* fileview.cpp */; settings = {COMPILER_FLAGS = "        "; }; };
		258153025815302581530000 /* main.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 25813A025813A025813A0000 /* main.cpp */; settings = {COMPILER_FLAGS = "        "; }; };
		258233025823302582330000 /* path_operations.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2581F402581F402581F40000 /* path_operations.cpp */; settings = {COMPILER_FLAGS = "        "; }; };
		2582C202582C202582C20000 /* scan_cvs_path.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2582AC02582AC02582AC0000 /* scan_cvs_path.cpp */; settings = {COMPILER_FLAGS = "        "; }; };
		258379025837902583790000 /* licence_info.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 258363025836302583630000 /* licence_info.cpp */; settings = {COMPILER_FLAGS = "        "; }; };
		258437025843702584370000 /* scan_licence.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 258420025842002584200000 /* scan_licence.cpp */; settings = {COMPILER_FLAGS = "        "; }; };
		258513025851302585130000 /* output_licence_info.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2584D302584D302584D30000 /* output_licence_info.cpp */; settings = {COMPILER_FLAGS = "        "; }; };
		258F7A0258F7A0258F7A0000 /* inspect.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 258F3E0258F3E0258F3E0000 /* inspect.cpp */; settings = {COMPILER_FLAGS = "        "; }; };
		25909E025909E025909E0000 /* license_check.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 25905F025905F025905F0000 /* license_check.cpp */; settings = {COMPILER_FLAGS = "        "; }; };
		259156025915602591560000 /* link_check.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 259117025911702591170000 /* link_check.cpp */; settings = {COMPILER_FLAGS = "        "; }; };
		259258025925802592580000 /* path_name_check.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2591D002591D002591D00000 /* path_name_check.cpp */; settings = {COMPILER_FLAGS = "        "; }; };
		2592CA02592CA02592CA0000 /* tab_check.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 259286025928602592860000 /* tab_check.cpp */; settings = {COMPILER_FLAGS = "        "; }; };
		259385025938502593850000 /* crlf_check.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 259343025934302593430000 /* crlf_check.cpp */; settings = {COMPILER_FLAGS = "        "; }; };
		25943D025943D025943D0000 /* end_check.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2593FE02593FE02593FE0000 /* end_check.cpp */; settings = {COMPILER_FLAGS = "        "; }; };
		2594F802594F802594F80000 /* unnamed_namespace_check.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2594B702594B702594B70000 /* unnamed_namespace_check.cpp */; settings = {COMPILER_FLAGS = "        "; }; };
		2595B002595B002595B00000 /* ascii_check.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 259574025957402595740000 /* ascii_check.cpp */; settings = {COMPILER_FLAGS = "        "; }; };
		25966B025966B025966B0000 /* copyright_check.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 25962F025962F025962F0000 /* copyright_check.cpp */; settings = {COMPILER_FLAGS = "        "; }; };
		259723025972302597230000 /* minmax_check.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 2596E402596E402596E40000 /* minmax_check.cpp */; settings = {COMPILER_FLAGS = "        "; }; };
/* End PBXBuildFile section */

/* Begin PBXContainerItemProxy section */
		25A208025A208025A2080000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1FF26C01FF26C01FF26C0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 21098F021098F021098F0000;
			remoteInfo = "boost_date_time-mt-static";
		};
		25A279025A279025A2790000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1FF26C01FF26C01FF26C0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 21156A021156A021156A0000;
			remoteInfo = "boost_date_time-mt-static-debug";
		};
		25A2EF025A2EF025A2EF0000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1FF26C01FF26C01FF26C0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 2131FC02131FC02131FC0000;
			remoteInfo = "boost_thread-mt-static";
		};
		25A367025A367025A3670000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1FF26C01FF26C01FF26C0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 213DD70213DD70213DD70000;
			remoteInfo = "boost_thread-mt-static-debug";
		};
		25A3E4025A3E4025A3E40000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1FF26C01FF26C01FF26C0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 21647E021647E021647E0000;
			remoteInfo = "boost_regex-mt-static";
		};
		25A45C025A45C025A45C0000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1FF26C01FF26C01FF26C0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 21778E021778E021778E0000;
			remoteInfo = "boost_regex-mt-static-debug";
		};
		25A4DD025A4DD025A4DD0000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1FF26C01FF26C01FF26C0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 21ECAF021ECAF021ECAF0000;
			remoteInfo = "boost_serialization-mt-static";
		};
		25A557025A557025A5570000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1FF26C01FF26C01FF26C0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 2207F002207F002207F00000;
			remoteInfo = "boost_serialization-mt-static-debug";
		};
		25A5D1025A5D1025A5D10000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1FF26C01FF26C01FF26C0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 2220B002220B002220B00000;
			remoteInfo = "boost_wserialization-mt-static";
		};
		25A64B025A64B025A64B0000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1FF26C01FF26C01FF26C0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 222FB50222FB50222FB50000;
			remoteInfo = "boost_wserialization-mt-static-debug";
		};
		25A6C0025A6C0025A6C00000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1FF26C01FF26C01FF26C0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 227338022733802273380000;
			remoteInfo = "boost_graph-mt-static";
		};
		25A738025A738025A7380000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1FF26C01FF26C01FF26C0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 227E170227E170227E170000;
			remoteInfo = "boost_graph-mt-static-debug";
		};
		25A7B0025A7B0025A7B00000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1FF26C01FF26C01FF26C0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 22AD65022AD65022AD650000;
			remoteInfo = "boost_python-mt-static";
		};
		25A828025A828025A8280000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1FF26C01FF26C01FF26C0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 22C670022C670022C6700000;
			remoteInfo = "boost_python-mt-static-debug";
		};
		25A8A0025A8A0025A8A00000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1FF26C01FF26C01FF26C0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 22E19E022E19E022E19E0000;
			remoteInfo = "accumulators-accumulators_example";
		};
		25A918025A918025A9180000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1FF26C01FF26C01FF26C0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 2300AE02300AE02300AE0000;
			remoteInfo = "boost_system-mt-static";
		};
		25A990025A990025A9900000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1FF26C01FF26C01FF26C0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 230B560230B560230B560000;
			remoteInfo = "boost_system-mt-static-debug";
		};
		25AA06025AA06025AA060000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1FF26C01FF26C01FF26C0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 236926023692602369260000;
			remoteInfo = "boost_prg_exec_monitor-mt-static";
		};
		25AA0F025AA0F025AA0F0000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1FF26C01FF26C01FF26C0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 2515C202515C202515C20000;
			remoteInfo = "boost_signals-mt-static";
		};
		25AA85025AA85025AA850000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1FF26C01FF26C01FF26C0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 23750E023750E023750E0000;
			remoteInfo = "boost_prg_exec_monitor-mt-static-debug";
		};
		25AAFE025AAFE025AAFE0000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1FF26C01FF26C01FF26C0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 239359023935902393590000;
			remoteInfo = "boost_test_exec_monitor-mt-static";
		};
		25AB76025AB76025AB760000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1FF26C01FF26C01FF26C0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 23A67D023A67D023A67D0000;
			remoteInfo = "boost_test_exec_monitor-mt-static-debug";
		};
		25ABEF025ABEF025ABEF0000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1FF26C01FF26C01FF26C0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 23C33D023C33D023C33D0000;
			remoteInfo = "boost_unit_test_framework-mt-static";
		};
		25AC67025AC67025AC670000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1FF26C01FF26C01FF26C0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 23D769023D769023D7690000;
			remoteInfo = "boost_unit_test_framework-mt-static-debug";
		};
		25ACE0025ACE0025ACE00000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1FF26C01FF26C01FF26C0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 2400DF02400DF02400DF0000;
			remoteInfo = "boost_filesystem-mt-static";
		};
		25AD58025AD58025AD580000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1FF26C01FF26C01FF26C0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 240D4E0240D4E0240D4E0000;
			remoteInfo = "boost_filesystem-mt-static-debug";
		};
		25ADD0025ADD0025ADD00000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1FF26C01FF26C01FF26C0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 244D500244D500244D500000;
			remoteInfo = "boost_mpi-mt-static";
		};
		25AE47025AE47025AE470000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1FF26C01FF26C01FF26C0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 246103024610302461030000;
			remoteInfo = "boost_mpi-mt-static-debug";
		};
		25AEBF025AEBF025AEBF0000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1FF26C01FF26C01FF26C0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 2474CD02474CD02474CD0000;
			remoteInfo = "boost_graph_parallel-mt-static";
		};
		25AF37025AF37025AF370000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1FF26C01FF26C01FF26C0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 248024024802402480240000;
			remoteInfo = "boost_graph_parallel-mt-static-debug";
		};
		25AFB0025AFB0025AFB00000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1FF26C01FF26C01FF26C0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 249DA50249DA50249DA50000;
			remoteInfo = "boost_iostreams-mt-static";
		};
		25B028025B028025B0280000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1FF26C01FF26C01FF26C0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 24A9F5024A9F5024A9F50000;
			remoteInfo = "boost_iostreams-mt-static-debug";
		};
		25B0A0025B0A0025B0A00000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1FF26C01FF26C01FF26C0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 24DC17024DC17024DC170000;
			remoteInfo = "boost_program_options-mt-static";
		};
		25B118025B118025B1180000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1FF26C01FF26C01FF26C0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 24EB9C024EB9C024EB9C0000;
			remoteInfo = "boost_program_options-mt-static-debug";
		};
		25B219025B219025B2190000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1FF26C01FF26C01FF26C0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 2522A702522A702522A70000;
			remoteInfo = "boost_signals-mt-static-debug";
		};
		25B293025B293025B2930000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1FF26C01FF26C01FF26C0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 256585025658502565850000;
			remoteInfo = "boost_wave-mt-static";
		};
		25B30D025B30D025B30D0000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1FF26C01FF26C01FF26C0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 257582025758202575820000;
			remoteInfo = "boost_wave-mt-static-debug";
		};
		25B387025B387025B3870000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1FF26C01FF26C01FF26C0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 2587E102587E102587E10000;
			remoteInfo = bcp;
		};
		25B3FA025B3FA025B3FA0000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1FF26C01FF26C01FF26C0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 2599F302599F302599F30000;
			remoteInfo = inspect;
		};
		25B473025B473025B4730000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1FF26C01FF26C01FF26C0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 1FF44201FF44201FF4420000;
			remoteInfo = ALL_BUILD;
		};
		25B4FE025B4FE025B4FE0000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1FF26C01FF26C01FF26C0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 201701020170102017010000;
			remoteInfo = "preprocessor-modularize";
		};
		25B588025B588025B5880000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1FF26C01FF26C01FF26C0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 201F4B0201F4B0201F4B0000;
			remoteInfo = "concept_check-modularize";
		};
		25B5FE025B5FE025B5FE0000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1FF26C01FF26C01FF26C0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 2027AF02027AF02027AF0000;
			remoteInfo = "property_map-modularize";
		};
		25B676025B676025B6760000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1FF26C01FF26C01FF26C0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 203032020303202030320000;
			remoteInfo = "config-modularize";
		};
		25B6F0025B6F0025B6F00000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1FF26C01FF26C01FF26C0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 203877020387702038770000;
			remoteInfo = "mpl-modularize";
		};
		25B767025B767025B7670000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1FF26C01FF26C01FF26C0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 204085020408502040850000;
			remoteInfo = "type_traits-modularize";
		};
		25B7E8025B7E8025B7E80000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1FF26C01FF26C01FF26C0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 204899020489902048990000;
			remoteInfo = "function-modularize";
		};
		25B85D025B85D025B85D0000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1FF26C01FF26C01FF26C0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 2050A802050A802050A80000;
			remoteInfo = "iterator-modularize";
		};
		25B8D4025B8D4025B8D40000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1FF26C01FF26C01FF26C0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 2058B702058B702058B70000;
			remoteInfo = "smart_ptr-modularize";
		};
		25B953025B953025B9530000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1FF26C01FF26C01FF26C0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 2060C302060C302060C30000;
			remoteInfo = "exception-modularize";
		};
		25B9C8025B9C8025B9C80000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1FF26C01FF26C01FF26C0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 2068D502068D502068D50000;
			remoteInfo = "utility-modularize";
		};
		25BA3F025BA3F025BA3F0000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1FF26C01FF26C01FF26C0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 2070DD02070DD02070DD0000;
			remoteInfo = "integer-modularize";
		};
		25BAB6025BAB6025BAB60000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1FF26C01FF26C01FF26C0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 2078E802078E802078E80000;
			remoteInfo = "detail-modularize";
		};
		25BB2D025BB2D025BB2D0000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1FF26C01FF26C01FF26C0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 2080F302080F302080F30000;
			remoteInfo = "static_assert-modularize";
		};
		25BBA5025BBA5025BBA50000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1FF26C01FF26C01FF26C0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 208907020890702089070000;
			remoteInfo = "tuple-modularize";
		};
		25BC1C025BC1C025BC1C0000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1FF26C01FF26C01FF26C0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 209111020911102091110000;
			remoteInfo = "function_types-modularize";
		};
		25BC94025BC94025BC940000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1FF26C01FF26C01FF26C0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 209929020992902099290000;
			remoteInfo = "fusion-modularize";
		};
		25BD09025BD09025BD090000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1FF26C01FF26C01FF26C0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 20A12A020A12A020A12A0000;
			remoteInfo = "typeof-modularize";
		};
		25BD12025BD12025BD120000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1FF26C01FF26C01FF26C0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 21982E021982E021982E0000;
			remoteInfo = "array-modularize";
		};
		25BD87025BD87025BD870000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1FF26C01FF26C01FF26C0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 20A934020A934020A9340000;
			remoteInfo = "proto-modularize";
		};
		25BDFE025BDFE025BDFE0000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1FF26C01FF26C01FF26C0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 20B135020B135020B1350000;
			remoteInfo = "intrusive-modularize";
		};
		25BE76025BE76025BE760000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1FF26C01FF26C01FF26C0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 20B949020B949020B9490000;
			remoteInfo = "logic-modularize";
		};
		25BEED025BEED025BEED0000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1FF26C01FF26C01FF26C0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 20C14F020C14F020C14F0000;
			remoteInfo = "numeric-modularize";
		};
		25BF64025BF64025BF640000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1FF26C01FF26C01FF26C0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 20C951020C951020C9510000;
			remoteInfo = "xpressive-modularize";
		};
		25BFDC025BFDC025BFDC0000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1FF26C01FF26C01FF26C0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 20D15A020D15A020D15A0000;
			remoteInfo = "optional-modularize";
		};
		25C053025C053025C0530000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1FF26C01FF26C01FF26C0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 20D96B020D96B020D96B0000;
			remoteInfo = "tokenizer-modularize";
		};
		25C0CB025C0CB025C0CB0000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1FF26C01FF26C01FF26C0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 20E17D020E17D020E17D0000;
			remoteInfo = "io-modularize";
		};
		25C142025C142025C1420000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1FF26C01FF26C01FF26C0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 20E992020E992020E9920000;
			remoteInfo = "bind-modularize";
		};
		25C1B9025C1B9025C1B90000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1FF26C01FF26C01FF26C0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 20F19A020F19A020F19A0000;
			remoteInfo = "date_time-modularize";
		};
		25C231025C231025C2310000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1FF26C01FF26C01FF26C0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 211E100211E100211E100000;
			remoteInfo = "thread-modularize";
		};
		25C2A8025C2A8025C2A80000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1FF26C01FF26C01FF26C0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 214660021466002146600000;
			remoteInfo = "regex-modularize";
		};
		25C31F025C31F025C31F0000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1FF26C01FF26C01FF26C0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 218025021802502180250000;
			remoteInfo = "algorithm-modularize";
		};
		25C397025C397025C3970000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1FF26C01FF26C01FF26C0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 21882A021882A021882A0000;
			remoteInfo = "range-modularize";
		};
		25C40E025C40E025C40E0000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1FF26C01FF26C01FF26C0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 21902C021902C021902C0000;
			remoteInfo = "foreach-modularize";
		};
		25C508025C508025C5080000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1FF26C01FF26C01FF26C0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 21A036021A036021A0360000;
			remoteInfo = "functional-modularize";
		};
		25C580025C580025C5800000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1FF26C01FF26C01FF26C0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 21A84B021A84B021A84B0000;
			remoteInfo = "unordered-modularize";
		};
		25C5F8025C5F8025C5F80000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1FF26C01FF26C01FF26C0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 21B059021B059021B0590000;
			remoteInfo = "pool-modularize";
		};
		25C66F025C66F025C66F0000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1FF26C01FF26C01FF26C0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 21B860021B860021B8600000;
			remoteInfo = "spirit-modularize";
		};
		25C6E8025C6E8025C6E80000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1FF26C01FF26C01FF26C0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 21C061021C061021C0610000;
			remoteInfo = "variant-modularize";
		};
		25C761025C761025C7610000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1FF26C01FF26C01FF26C0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 21C874021C874021C8740000;
			remoteInfo = "serialization-modularize";
		};
		25C7DB025C7DB025C7DB0000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1FF26C01FF26C01FF26C0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 223851022385102238510000;
			remoteInfo = "format-modularize";
		};
		25C854025C854025C8540000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1FF26C01FF26C01FF26C0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 224061022406102240610000;
			remoteInfo = "math-modularize";
		};
		25C8CD025C8CD025C8CD0000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1FF26C01FF26C01FF26C0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 224872022487202248720000;
			remoteInfo = "multi_index-modularize";
		};
		25C947025C947025C9470000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1FF26C01FF26C01FF26C0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 22508B022508B022508B0000;
			remoteInfo = "any-modularize";
		};
		25C9C0025C9C0025C9C00000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1FF26C01FF26C01FF26C0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 2258A402258A402258A40000;
			remoteInfo = "random-modularize";
		};
		25CA39025CA39025CA390000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1FF26C01FF26C01FF26C0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 2260B202260B202260B20000;
			remoteInfo = "graph-modularize";
		};
		25CAB2025CAB2025CAB20000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1FF26C01FF26C01FF26C0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 2286BC02286BC02286BC0000;
			remoteInfo = "Python-modularize";
		};
		25CB2B025CB2B025CB2B0000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1FF26C01FF26C01FF26C0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 22CE63022CE63022CE630000;
			remoteInfo = "parameter-modularize";
		};
		25CBA5025CBA5025CBA50000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1FF26C01FF26C01FF26C0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 22D6F9022D6F9022D6F90000;
			remoteInfo = "accumulators-modularize";
		};
		25CC1F025CC1F025CC1F0000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1FF26C01FF26C01FF26C0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 22EA01022EA01022EA010000;
			remoteInfo = "system-modularize";
		};
		25CC98025CC98025CC980000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1FF26C01FF26C01FF26C0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 2313F302313F302313F30000;
			remoteInfo = "asio-modularize";
		};
		25CD11025CD11025CD110000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1FF26C01FF26C01FF26C0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 231BF00231BF00231BF00000;
			remoteInfo = "circular_buffer-modularize";
		};
		25CD8B025CD8B025CD8B0000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1FF26C01FF26C01FF26C0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 232409023240902324090000;
			remoteInfo = "ptr_container-modularize";
		};
		25CE05025CE05025CE050000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1FF26C01FF26C01FF26C0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 232C260232C260232C260000;
			remoteInfo = "assign-modularize";
		};
		25CE7E025CE7E025CE7E0000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1FF26C01FF26C01FF26C0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 23343D023343D023343D0000;
			remoteInfo = "bimap-modularize";
		};
		25CEF7025CEF7025CEF70000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1FF26C01FF26C01FF26C0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 233C500233C500233C500000;
			remoteInfo = "compatibility-modularize";
		};
		25CF71025CF71025CF710000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1FF26C01FF26C01FF26C0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 2344A502344A502344A50000;
			remoteInfo = "crc-modularize";
		};
		25CFEA025CFEA025CFEA0000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1FF26C01FF26C01FF26C0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 234CB90234CB90234CB90000;
			remoteInfo = "timer-modularize";
		};
		25D063025D063025D0630000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1FF26C01FF26C01FF26C0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 23551D023551D023551D0000;
			remoteInfo = "test-modularize";
		};
		25D0DC025D0DC025D0DC0000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1FF26C01FF26C01FF26C0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 23DFFB023DFFB023DFFB0000;
			remoteInfo = "dynamic_bitset-modularize";
		};
		25D156025D156025D1560000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1FF26C01FF26C01FF26C0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 23E811023E811023E8110000;
			remoteInfo = "filesystem-modularize";
		};
		25D1D0025D1D0025D1D00000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1FF26C01FF26C01FF26C0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 2415F702415F702415F70000;
			remoteInfo = "interprocess-modularize";
		};
		25D24A025D24A025D24A0000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1FF26C01FF26C01FF26C0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 241E130241E130241E130000;
			remoteInfo = "flyweight-modularize";
		};
		25D2C4025D2C4025D2C40000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1FF26C01FF26C01FF26C0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 24262A024262A024262A0000;
			remoteInfo = "gil-modularize";
		};
		25D33D025D33D025D33D0000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1FF26C01FF26C01FF26C0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 242E450242E450242E450000;
			remoteInfo = "mpi-modularize";
		};
		25D3B6025D3B6025D3B60000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1FF26C01FF26C01FF26C0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 2488D702488D702488D70000;
			remoteInfo = "iostreams-modularize";
		};
		25D421025D421025D4210000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1FF26C01FF26C01FF26C0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 24B2A7024B2A7024B2A70000;
			remoteInfo = "lambda-modularize";
		};
		25D49A025D49A025D49A0000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1FF26C01FF26C01FF26C0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 24BAB9024BAB9024BAB90000;
			remoteInfo = "multi_array-modularize";
		};
		25D514025D514025D5140000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1FF26C01FF26C01FF26C0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 24C2D7024C2D7024C2D70000;
			remoteInfo = "program_options-modularize";
		};
		25D58E025D58E025D58E0000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1FF26C01FF26C01FF26C0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 24F43B024F43B024F43B0000;
			remoteInfo = "rational-modularize";
		};
		25D607025D607025D6070000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1FF26C01FF26C01FF26C0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 250044025004402500440000;
			remoteInfo = "signals-modularize";
		};
		25D680025D680025D6800000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1FF26C01FF26C01FF26C0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 252B500252B500252B500000;
			remoteInfo = "signals2-modularize";
		};
		25D6F9025D6F9025D6F90000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1FF26C01FF26C01FF26C0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 253354025335402533540000;
			remoteInfo = "statechart-modularize";
		};
		25D773025D773025D7730000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1FF26C01FF26C01FF26C0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 253B680253B680253B680000;
			remoteInfo = "tr1-modularize";
		};
		25D7EC025D7EC025D7EC0000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1FF26C01FF26C01FF26C0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 254380025438002543800000;
			remoteInfo = "units-modularize";
		};
		25D865025D865025D8650000 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1FF26C01FF26C01FF26C0000 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 254B930254B930254B930000;
			remoteInfo = "wave-modularize";
		};
/* End PBXContainerItemProxy section */

/* Begin PBXFileReference section */
		1FFB4C01FFB4C01FFB4C0000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeLists.txt; sourceTree = "<absolute>"; };
		201E2B0201E2B0201E2B0000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/CMakeLists.txt; sourceTree = "<absolute>"; };
		202692020269202026920000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/CMakeLists.txt; sourceTree = "<absolute>"; };
		202F160202F160202F160000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/CMakeLists.txt; sourceTree = "<absolute>"; };
		203759020375902037590000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/CMakeLists.txt; sourceTree = "<absolute>"; };
		203F650203F650203F650000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/CMakeLists.txt; sourceTree = "<absolute>"; };
		20477D020477D020477D0000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/CMakeLists.txt; sourceTree = "<absolute>"; };
		204F8D0204F8D0204F8D0000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/CMakeLists.txt; sourceTree = "<absolute>"; };
		20579C020579C020579C0000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/CMakeLists.txt; sourceTree = "<absolute>"; };
		205FA90205FA90205FA90000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/CMakeLists.txt; sourceTree = "<absolute>"; };
		2067BB02067BB02067BB0000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/CMakeLists.txt; sourceTree = "<absolute>"; };
		206FB70206FB70206FB70000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/CMakeLists.txt; sourceTree = "<absolute>"; };
		2077CB02077CB02077CB0000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/CMakeLists.txt; sourceTree = "<absolute>"; };
		207FD30207FD30207FD30000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/CMakeLists.txt; sourceTree = "<absolute>"; };
		2087EB02087EB02087EB0000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/CMakeLists.txt; sourceTree = "<absolute>"; };
		208FF60208FF60208FF60000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/CMakeLists.txt; sourceTree = "<absolute>"; };
		20980D020980D020980D0000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/CMakeLists.txt; sourceTree = "<absolute>"; };
		20A005020A005020A0050000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/CMakeLists.txt; sourceTree = "<absolute>"; };
		20A819020A819020A8190000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/CMakeLists.txt; sourceTree = "<absolute>"; };
		20B01A020B01A020B01A0000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/CMakeLists.txt; sourceTree = "<absolute>"; };
		20B82F020B82F020B82F0000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/CMakeLists.txt; sourceTree = "<absolute>"; };
		20C034020C034020C0340000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/CMakeLists.txt; sourceTree = "<absolute>"; };
		20C82B020C82B020C82B0000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/CMakeLists.txt; sourceTree = "<absolute>"; };
		20D005020D005020D0050000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/CMakeLists.txt; sourceTree = "<absolute>"; };
		20D847020D847020D8470000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/CMakeLists.txt; sourceTree = "<absolute>"; };
		20E065020E065020E0650000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/CMakeLists.txt; sourceTree = "<absolute>"; };
		20E86C020E86C020E86C0000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/CMakeLists.txt; sourceTree = "<absolute>"; };
		20F07F020F07F020F07F0000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/CMakeLists.txt; sourceTree = "<absolute>"; };
		20F887020F887020F8870000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/CMakeLists.txt; sourceTree = "<absolute>"; };
		210475021047502104750000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/src/CMakeLists.txt; sourceTree = "<absolute>"; };
		210547021054702105470000 /* greg_month.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = greg_month.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/src/gregorian/greg_month.cpp; sourceTree = "<absolute>"; };
		2105FC02105FC02105FC0000 /* greg_weekday.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = greg_weekday.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/src/gregorian/greg_weekday.cpp; sourceTree = "<absolute>"; };
		2106B902106B902106B90000 /* date_generators.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = date_generators.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/src/gregorian/date_generators.cpp; sourceTree = "<absolute>"; };
		211142021114202111420000 /* libboost_date_time-mt.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; path = "libboost_date_time-mt.a"; sourceTree = BUILT_PRODUCTS_DIR; };
		211D290211D290211D290000 /* libboost_date_time-mt-d.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; path = "libboost_date_time-mt-d.a"; sourceTree = BUILT_PRODUCTS_DIR; };
		2124EF02124EF02124EF0000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/CMakeLists.txt; sourceTree = "<absolute>"; };
		212CEE0212CEE0212CEE0000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/src/CMakeLists.txt; sourceTree = "<absolute>"; };
		212D780212D780212D780000 /* thread.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = thread.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/src/pthread/thread.cpp; sourceTree = "<absolute>"; };
		212E650212E650212E650000 /* exceptions.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = exceptions.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/src/pthread/exceptions.cpp; sourceTree = "<absolute>"; };
		212F200212F200212F200000 /* once.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = once.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/src/pthread/once.cpp; sourceTree = "<absolute>"; };
		2139A902139A902139A90000 /* libboost_thread-mt.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; path = "libboost_thread-mt.a"; sourceTree = BUILT_PRODUCTS_DIR; };
		214579021457902145790000 /* libboost_thread-mt-d.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; path = "libboost_thread-mt-d.a"; sourceTree = BUILT_PRODUCTS_DIR; };
		214D3D0214D3D0214D3D0000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/CMakeLists.txt; sourceTree = "<absolute>"; };
		21553E021553E021553E0000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/src/CMakeLists.txt; sourceTree = "<absolute>"; };
		2155DA02155DA02155DA0000 /* c_regex_traits.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = c_regex_traits.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/src/c_regex_traits.cpp; sourceTree = "<absolute>"; };
		2156B302156B302156B30000 /* cpp_regex_traits.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = cpp_regex_traits.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/src/cpp_regex_traits.cpp; sourceTree = "<absolute>"; };
		215771021577102157710000 /* cregex.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = cregex.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/src/cregex.cpp; sourceTree = "<absolute>"; };
		21582A021582A021582A0000 /* fileiter.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = fileiter.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/src/fileiter.cpp; sourceTree = "<absolute>"; };
		2158E002158E002158E00000 /* icu.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = icu.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/src/icu.cpp; sourceTree = "<absolute>"; };
		21599F021599F021599F0000 /* instances.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = instances.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/src/instances.cpp; sourceTree = "<absolute>"; };
		215A550215A550215A550000 /* posix_api.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = posix_api.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/src/posix_api.cpp; sourceTree = "<absolute>"; };
		215B0C0215B0C0215B0C0000 /* regex.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = regex.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/src/regex.cpp; sourceTree = "<absolute>"; };
		215BC50215BC50215BC50000 /* regex_debug.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = regex_debug.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/src/regex_debug.cpp; sourceTree = "<absolute>"; };
		215C7D0215C7D0215C7D0000 /* regex_raw_buffer.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = regex_raw_buffer.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/src/regex_raw_buffer.cpp; sourceTree = "<absolute>"; };
		215D3D0215D3D0215D3D0000 /* regex_traits_defaults.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = regex_traits_defaults.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/src/regex_traits_defaults.cpp; sourceTree = "<absolute>"; };
		215DF60215DF60215DF60000 /* static_mutex.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = static_mutex.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/src/static_mutex.cpp; sourceTree = "<absolute>"; };
		215EAE0215EAE0215EAE0000 /* w32_regex_traits.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = w32_regex_traits.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/src/w32_regex_traits.cpp; sourceTree = "<absolute>"; };
		215F6C0215F6C0215F6C0000 /* wc_regex_traits.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = wc_regex_traits.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/src/wc_regex_traits.cpp; sourceTree = "<absolute>"; };
		216023021602302160230000 /* wide_posix_api.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = wide_posix_api.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/src/wide_posix_api.cpp; sourceTree = "<absolute>"; };
		2160DC02160DC02160DC0000 /* winstances.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = winstances.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/src/winstances.cpp; sourceTree = "<absolute>"; };
		216193021619302161930000 /* usinstances.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = usinstances.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/src/usinstances.cpp; sourceTree = "<absolute>"; };
		216C330216C330216C330000 /* libboost_regex-mt.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; path = "libboost_regex-mt.a"; sourceTree = BUILT_PRODUCTS_DIR; };
		217F460217F460217F460000 /* libboost_regex-mt-d.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; path = "libboost_regex-mt-d.a"; sourceTree = BUILT_PRODUCTS_DIR; };
		218711021871102187110000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/CMakeLists.txt; sourceTree = "<absolute>"; };
		218F0A0218F0A0218F0A0000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/CMakeLists.txt; sourceTree = "<absolute>"; };
		219708021970802197080000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/CMakeLists.txt; sourceTree = "<absolute>"; };
		219F1B0219F1B0219F1B0000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/CMakeLists.txt; sourceTree = "<absolute>"; };
		21A731021A731021A7310000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/CMakeLists.txt; sourceTree = "<absolute>"; };
		21AF36021AF36021AF360000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/CMakeLists.txt; sourceTree = "<absolute>"; };
		21B745021B745021B7450000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/CMakeLists.txt; sourceTree = "<absolute>"; };
		21BF3F021BF3F021BF3F0000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/CMakeLists.txt; sourceTree = "<absolute>"; };
		21C74E021C74E021C74E0000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/CMakeLists.txt; sourceTree = "<absolute>"; };
		21CF65021CF65021CF650000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/CMakeLists.txt; sourceTree = "<absolute>"; };
		21D778021D778021D7780000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/src/CMakeLists.txt; sourceTree = "<absolute>"; };
		21D81F021D81F021D81F0000 /* basic_archive.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = basic_archive.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/src/basic_archive.cpp; sourceTree = "<absolute>"; };
		21D8EF021D8EF021D8EF0000 /* basic_iarchive.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = basic_iarchive.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/src/basic_iarchive.cpp; sourceTree = "<absolute>"; };
		21D9AA021D9AA021D9AA0000 /* basic_iserializer.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = basic_iserializer.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/src/basic_iserializer.cpp; sourceTree = "<absolute>"; };
		21DA6B021DA6B021DA6B0000 /* basic_oarchive.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = basic_oarchive.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/src/basic_oarchive.cpp; sourceTree = "<absolute>"; };
		21DB24021DB24021DB240000 /* basic_oserializer.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = basic_oserializer.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/src/basic_oserializer.cpp; sourceTree = "<absolute>"; };
		21DBDF021DBDF021DBDF0000 /* basic_pointer_iserializer.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = basic_pointer_iserializer.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/src/basic_pointer_iserializer.cpp; sourceTree = "<absolute>"; };
		21DCA3021DCA3021DCA30000 /* basic_pointer_oserializer.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = basic_pointer_oserializer.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/src/basic_pointer_oserializer.cpp; sourceTree = "<absolute>"; };
		21DD5D021DD5D021DD5D0000 /* basic_serializer_map.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = basic_serializer_map.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/src/basic_serializer_map.cpp; sourceTree = "<absolute>"; };
		21DE1D021DE1D021DE1D0000 /* basic_text_iprimitive.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = basic_text_iprimitive.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/src/basic_text_iprimitive.cpp; sourceTree = "<absolute>"; };
		21DEDD021DEDD021DEDD0000 /* basic_text_oprimitive.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = basic_text_oprimitive.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/src/basic_text_oprimitive.cpp; sourceTree = "<absolute>"; };
		21DF9C021DF9C021DF9C0000 /* basic_xml_archive.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = basic_xml_archive.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/src/basic_xml_archive.cpp; sourceTree = "<absolute>"; };
		21E052021E052021E0520000 /* binary_iarchive.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = binary_iarchive.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/src/binary_iarchive.cpp; sourceTree = "<absolute>"; };
		21E10D021E10D021E10D0000 /* binary_oarchive.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = binary_oarchive.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/src/binary_oarchive.cpp; sourceTree = "<absolute>"; };
		21E1C8021E1C8021E1C80000 /* extended_type_info.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = extended_type_info.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/src/extended_type_info.cpp; sourceTree = "<absolute>"; };
		21E28A021E28A021E28A0000 /* extended_type_info_typeid.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = extended_type_info_typeid.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/src/extended_type_info_typeid.cpp; sourceTree = "<absolute>"; };
		21E345021E345021E3450000 /* extended_type_info_no_rtti.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = extended_type_info_no_rtti.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/src/extended_type_info_no_rtti.cpp; sourceTree = "<absolute>"; };
		21E3F8021E3F8021E3F80000 /* polymorphic_iarchive.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = polymorphic_iarchive.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/src/polymorphic_iarchive.cpp; sourceTree = "<absolute>"; };
		21E4C6021E4C6021E4C60000 /* polymorphic_oarchive.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = polymorphic_oarchive.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/src/polymorphic_oarchive.cpp; sourceTree = "<absolute>"; };
		21E587021E587021E5870000 /* stl_port.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = stl_port.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/src/stl_port.cpp; sourceTree = "<absolute>"; };
		21E63E021E63E021E63E0000 /* text_iarchive.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = text_iarchive.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/src/text_iarchive.cpp; sourceTree = "<absolute>"; };
		21E6F6021E6F6021E6F60000 /* text_oarchive.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = text_oarchive.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/src/text_oarchive.cpp; sourceTree = "<absolute>"; };
		21E7B1021E7B1021E7B10000 /* void_cast.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = void_cast.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/src/void_cast.cpp; sourceTree = "<absolute>"; };
		21E869021E869021E8690000 /* xml_grammar.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = xml_grammar.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/src/xml_grammar.cpp; sourceTree = "<absolute>"; };
		21E921021E921021E9210000 /* xml_iarchive.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = xml_iarchive.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/src/xml_iarchive.cpp; sourceTree = "<absolute>"; };
		21E9D9021E9D9021E9D90000 /* xml_oarchive.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = xml_oarchive.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/src/xml_oarchive.cpp; sourceTree = "<absolute>"; };
		21F467021F467021F4670000 /* libboost_serialization-mt.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; path = "libboost_serialization-mt.a"; sourceTree = BUILT_PRODUCTS_DIR; };
		220FA90220FA90220FA90000 /* libboost_serialization-mt-d.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; path = "libboost_serialization-mt-d.a"; sourceTree = BUILT_PRODUCTS_DIR; };
		2217C402217C402217C40000 /* basic_text_wiprimitive.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = basic_text_wiprimitive.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/src/basic_text_wiprimitive.cpp; sourceTree = "<absolute>"; };
		2218B502218B502218B50000 /* basic_text_woprimitive.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = basic_text_woprimitive.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/src/basic_text_woprimitive.cpp; sourceTree = "<absolute>"; };
		22197A022197A022197A0000 /* text_wiarchive.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = text_wiarchive.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/src/text_wiarchive.cpp; sourceTree = "<absolute>"; };
		221A300221A300221A300000 /* text_woarchive.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = text_woarchive.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/src/text_woarchive.cpp; sourceTree = "<absolute>"; };
		221AE80221AE80221AE80000 /* utf8_codecvt_facet.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = utf8_codecvt_facet.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/src/utf8_codecvt_facet.cpp; sourceTree = "<absolute>"; };
		221BA50221BA50221BA50000 /* xml_wgrammar.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = xml_wgrammar.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/src/xml_wgrammar.cpp; sourceTree = "<absolute>"; };
		221C600221C600221C600000 /* xml_wiarchive.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = xml_wiarchive.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/src/xml_wiarchive.cpp; sourceTree = "<absolute>"; };
		221D1B0221D1B0221D1B0000 /* xml_woarchive.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = xml_woarchive.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/src/xml_woarchive.cpp; sourceTree = "<absolute>"; };
		221DD60221DD60221DD60000 /* codecvt_null.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = codecvt_null.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/src/codecvt_null.cpp; sourceTree = "<absolute>"; };
		222866022286602228660000 /* libboost_wserialization-mt.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; path = "libboost_wserialization-mt.a"; sourceTree = BUILT_PRODUCTS_DIR; };
		22376E022376E022376E0000 /* libboost_wserialization-mt-d.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; path = "libboost_wserialization-mt-d.a"; sourceTree = BUILT_PRODUCTS_DIR; };
		223F3C0223F3C0223F3C0000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/CMakeLists.txt; sourceTree = "<absolute>"; };
		22474D022474D022474D0000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/CMakeLists.txt; sourceTree = "<absolute>"; };
		224F720224F720224F720000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/CMakeLists.txt; sourceTree = "<absolute>"; };
		22577E022577E022577E0000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/CMakeLists.txt; sourceTree = "<absolute>"; };
		225F970225F970225F970000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/CMakeLists.txt; sourceTree = "<absolute>"; };
		226727022672702267270000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/CMakeLists.txt; sourceTree = "<absolute>"; };
		226F2D0226F2D0226F2D0000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/src/CMakeLists.txt; sourceTree = "<absolute>"; };
		226FC90226FC90226FC90000 /* read_graphviz_spirit.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = read_graphviz_spirit.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/src/read_graphviz_spirit.cpp; sourceTree = "<absolute>"; };
		227A840227A840227A840000 /* libboost_graph-mt.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; path = "libboost_graph-mt.a"; sourceTree = BUILT_PRODUCTS_DIR; };
		228559022855902285590000 /* libboost_graph-mt-d.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; path = "libboost_graph-mt-d.a"; sourceTree = BUILT_PRODUCTS_DIR; };
		228DBA0228DBA0228DBA0000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/CMakeLists.txt; sourceTree = "<absolute>"; };
		2295BD02295BD02295BD0000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/src/CMakeLists.txt; sourceTree = "<absolute>"; };
		229659022965902296590000 /* numeric.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = numeric.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/src/numeric.cpp; sourceTree = "<absolute>"; };
		229738022973802297380000 /* list.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = list.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/src/list.cpp; sourceTree = "<absolute>"; };
		2297F402297F402297F40000 /* long.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = long.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/src/long.cpp; sourceTree = "<absolute>"; };
		2298B002298B002298B00000 /* dict.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = dict.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/src/dict.cpp; sourceTree = "<absolute>"; };
		22996C022996C022996C0000 /* tuple.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = tuple.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/src/tuple.cpp; sourceTree = "<absolute>"; };
		229A2F0229A2F0229A2F0000 /* str.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = str.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/src/str.cpp; sourceTree = "<absolute>"; };
		229AE70229AE70229AE70000 /* slice.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = slice.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/src/slice.cpp; sourceTree = "<absolute>"; };
		229BA30229BA30229BA30000 /* from_python.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = from_python.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/src/converter/from_python.cpp; sourceTree = "<absolute>"; };
		229C640229C640229C640000 /* registry.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = registry.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/src/converter/registry.cpp; sourceTree = "<absolute>"; };
		229D260229D260229D260000 /* type_id.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = type_id.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/src/converter/type_id.cpp; sourceTree = "<absolute>"; };
		229DDD0229DDD0229DDD0000 /* enum.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = enum.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/src/object/enum.cpp; sourceTree = "<absolute>"; };
		229E9A0229E9A0229E9A0000 /* class.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = class.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/src/object/class.cpp; sourceTree = "<absolute>"; };
		229F4B0229F4B0229F4B0000 /* inheritance.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = inheritance.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/src/object/inheritance.cpp; sourceTree = "<absolute>"; };
		229F5A0229F5A0229F5A0000 /* function.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = function.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/src/object/function.cpp; sourceTree = "<absolute>"; };
		22A0D7022A0D7022A0D70000 /* life_support.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = life_support.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/src/object/life_support.cpp; sourceTree = "<absolute>"; };
		22A197022A197022A1970000 /* pickle_support.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = pickle_support.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/src/object/pickle_support.cpp; sourceTree = "<absolute>"; };
		22A250022A250022A2500000 /* errors.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = errors.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/src/errors.cpp; sourceTree = "<absolute>"; };
		22A31A022A31A022A31A0000 /* module.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = module.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/src/module.cpp; sourceTree = "<absolute>"; };
		22A3D3022A3D3022A3D30000 /* builtin_converters.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = builtin_converters.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/src/converter/builtin_converters.cpp; sourceTree = "<absolute>"; };
		22A493022A493022A4930000 /* arg_to_python_base.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = arg_to_python_base.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/src/converter/arg_to_python_base.cpp; sourceTree = "<absolute>"; };
		22A552022A552022A5520000 /* iterator.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = iterator.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/src/object/iterator.cpp; sourceTree = "<absolute>"; };
		22A603022A603022A6030000 /* object_protocol.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = object_protocol.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/src/object_protocol.cpp; sourceTree = "<absolute>"; };
		22A612022A612022A6120000 /* stl_iterator.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = stl_iterator.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/src/object/stl_iterator.cpp; sourceTree = "<absolute>"; };
		22A78F022A78F022A78F0000 /* object_operators.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = object_operators.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/src/object_operators.cpp; sourceTree = "<absolute>"; };
		22A84C022A84C022A84C0000 /* wrapper.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = wrapper.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/src/wrapper.cpp; sourceTree = "<absolute>"; };
		22A907022A907022A9070000 /* import.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = import.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/src/import.cpp; sourceTree = "<absolute>"; };
		22A9C2022A9C2022A9C20000 /* exec.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = exec.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/src/exec.cpp; sourceTree = "<absolute>"; };
		22AA80022AA80022AA800000 /* function_doc_signature.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = function_doc_signature.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/src/object/function_doc_signature.cpp; sourceTree = "<absolute>"; };
		22B488022B488022B4880000 /* libboost_python-mt.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; path = "libboost_python-mt.a"; sourceTree = BUILT_PRODUCTS_DIR; };
		22CD8A022CD8A022CD8A0000 /* libboost_python-mt-d.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; path = "libboost_python-mt-d.a"; sourceTree = BUILT_PRODUCTS_DIR; };
		22D554022D554022D5540000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/parameter/CMakeLists.txt; sourceTree = "<absolute>"; };
		22DDE6022DDE6022DDE60000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/accumulators/CMakeLists.txt; sourceTree = "<absolute>"; };
		22DDFE022DDFE022DDFE0000 /* main.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = main.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/accumulators/example/main.cpp; sourceTree = "<absolute>"; };
		22DF53022DF53022DF530000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/accumulators/example/CMakeLists.txt; sourceTree = "<absolute>"; };
		22E91B022E91B022E91B0000 /* accumulators-accumulators_example */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = "accumulators-accumulators_example"; sourceTree = BUILT_PRODUCTS_DIR; };
		22F0F1022F0F1022F0F10000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/CMakeLists.txt; sourceTree = "<absolute>"; };
		22F8FB022F8FB022F8FB0000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/src/CMakeLists.txt; sourceTree = "<absolute>"; };
		22F9BE022F9BE022F9BE0000 /* error_code.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = error_code.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/src/error_code.cpp; sourceTree = "<absolute>"; };
		23083D023083D023083D0000 /* libboost_system-mt.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; path = "libboost_system-mt.a"; sourceTree = BUILT_PRODUCTS_DIR; };
		231313023131302313130000 /* libboost_system-mt-d.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; path = "libboost_system-mt-d.a"; sourceTree = BUILT_PRODUCTS_DIR; };
		231ACC0231ACC0231ACC0000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/asio/CMakeLists.txt; sourceTree = "<absolute>"; };
		2322E902322E902322E90000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/circular_buffer/CMakeLists.txt; sourceTree = "<absolute>"; };
		232B0A0232B0A0232B0A0000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/ptr_container/CMakeLists.txt; sourceTree = "<absolute>"; };
		233319023331902333190000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/assign/CMakeLists.txt; sourceTree = "<absolute>"; };
		233B550233B550233B550000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bimap/CMakeLists.txt; sourceTree = "<absolute>"; };
		23437B023437B023437B0000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/compatibility/CMakeLists.txt; sourceTree = "<absolute>"; };
		234B9B0234B9B0234B9B0000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/crc/CMakeLists.txt; sourceTree = "<absolute>"; };
		2353FB02353FB02353FB0000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/CMakeLists.txt; sourceTree = "<absolute>"; };
		235BBD0235BBD0235BBD0000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/CMakeLists.txt; sourceTree = "<absolute>"; };
		23635D023635D023635D0000 /* execution_monitor.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = execution_monitor.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/src/execution_monitor.cpp; sourceTree = "<absolute>"; };
		236464023646402364640000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/src/CMakeLists.txt; sourceTree = "<absolute>"; };
		23659E023659E023659E0000 /* cpp_main.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = cpp_main.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/src/cpp_main.cpp; sourceTree = "<absolute>"; };
		236654023665402366540000 /* debug.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = debug.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/src/debug.cpp; sourceTree = "<absolute>"; };
		2370A102370A102370A10000 /* libboost_prg_exec_monitor-mt.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; path = "libboost_prg_exec_monitor-mt.a"; sourceTree = BUILT_PRODUCTS_DIR; };
		237C850237C850237C850000 /* libboost_prg_exec_monitor-mt-d.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; path = "libboost_prg_exec_monitor-mt-d.a"; sourceTree = BUILT_PRODUCTS_DIR; };
		2383B602383B602383B60000 /* compiler_log_formatter.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = compiler_log_formatter.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/src/compiler_log_formatter.cpp; sourceTree = "<absolute>"; };
		2386FF02386FF02386FF0000 /* framework.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = framework.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/src/framework.cpp; sourceTree = "<absolute>"; };
		2387B502387B502387B50000 /* plain_report_formatter.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = plain_report_formatter.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/src/plain_report_formatter.cpp; sourceTree = "<absolute>"; };
		23886E023886E023886E0000 /* progress_monitor.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = progress_monitor.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/src/progress_monitor.cpp; sourceTree = "<absolute>"; };
		23892D023892D023892D0000 /* results_collector.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = results_collector.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/src/results_collector.cpp; sourceTree = "<absolute>"; };
		2389EA02389EA02389EA0000 /* results_reporter.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = results_reporter.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/src/results_reporter.cpp; sourceTree = "<absolute>"; };
		238AA60238AA60238AA60000 /* test_main.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = test_main.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/src/test_main.cpp; sourceTree = "<absolute>"; };
		238B5F0238B5F0238B5F0000 /* test_tools.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = test_tools.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/src/test_tools.cpp; sourceTree = "<absolute>"; };
		238C190238C190238C190000 /* unit_test_log.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = unit_test_log.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/src/unit_test_log.cpp; sourceTree = "<absolute>"; };
		238CD20238CD20238CD20000 /* unit_test_main.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = unit_test_main.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/src/unit_test_main.cpp; sourceTree = "<absolute>"; };
		238D8D0238D8D0238D8D0000 /* unit_test_monitor.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = unit_test_monitor.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/src/unit_test_monitor.cpp; sourceTree = "<absolute>"; };
		238E490238E490238E490000 /* unit_test_parameters.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = unit_test_parameters.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/src/unit_test_parameters.cpp; sourceTree = "<absolute>"; };
		238EFE0238EFE0238EFE0000 /* unit_test_suite.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = unit_test_suite.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/src/unit_test_suite.cpp; sourceTree = "<absolute>"; };
		238FBB0238FBB0238FBB0000 /* xml_log_formatter.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = xml_log_formatter.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/src/xml_log_formatter.cpp; sourceTree = "<absolute>"; };
		239077023907702390770000 /* xml_report_formatter.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = xml_report_formatter.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/src/xml_report_formatter.cpp; sourceTree = "<absolute>"; };
		239ABC0239ABC0239ABC0000 /* libboost_test_exec_monitor-mt.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; path = "libboost_test_exec_monitor-mt.a"; sourceTree = BUILT_PRODUCTS_DIR; };
		23ADE4023ADE4023ADE40000 /* libboost_test_exec_monitor-mt-d.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; path = "libboost_test_exec_monitor-mt-d.a"; sourceTree = BUILT_PRODUCTS_DIR; };
		23B78A023B78A023B78A0000 /* exception_safety.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = exception_safety.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/src/exception_safety.cpp; sourceTree = "<absolute>"; };
		23B957023B957023B9570000 /* interaction_based.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = interaction_based.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/src/interaction_based.cpp; sourceTree = "<absolute>"; };
		23BA13023BA13023BA130000 /* logged_expectations.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = logged_expectations.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/src/logged_expectations.cpp; sourceTree = "<absolute>"; };
		23CAA1023CAA1023CAA10000 /* libboost_unit_test_framework-mt.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; path = "libboost_unit_test_framework-mt.a"; sourceTree = BUILT_PRODUCTS_DIR; };
		23DECF023DECF023DECF0000 /* libboost_unit_test_framework-mt-d.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; path = "libboost_unit_test_framework-mt-d.a"; sourceTree = BUILT_PRODUCTS_DIR; };
		23E6F5023E6F5023E6F50000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/dynamic_bitset/CMakeLists.txt; sourceTree = "<absolute>"; };
		23EF0C023EF0C023EF0C0000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/filesystem/CMakeLists.txt; sourceTree = "<absolute>"; };
		23F71E023F71E023F71E0000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/filesystem/src/CMakeLists.txt; sourceTree = "<absolute>"; };
		23F743023F743023F7430000 /* operations.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = operations.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/filesystem/src/operations.cpp; sourceTree = "<absolute>"; };
		23F89B023F89B023F89B0000 /* path.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = path.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/filesystem/src/path.cpp; sourceTree = "<absolute>"; };
		23F959023F959023F9590000 /* portability.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = portability.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/filesystem/src/portability.cpp; sourceTree = "<absolute>"; };
		23FA11023FA11023FA110000 /* utf8_codecvt_facet.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = utf8_codecvt_facet.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/filesystem/src/utf8_codecvt_facet.cpp; sourceTree = "<absolute>"; };
		2408A102408A102408A10000 /* libboost_filesystem-mt.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; path = "libboost_filesystem-mt.a"; sourceTree = BUILT_PRODUCTS_DIR; };
		241519024151902415190000 /* libboost_filesystem-mt-d.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; path = "libboost_filesystem-mt-d.a"; sourceTree = BUILT_PRODUCTS_DIR; };
		241CF40241CF40241CF40000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/interprocess/CMakeLists.txt; sourceTree = "<absolute>"; };
		242513024251302425130000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/flyweight/CMakeLists.txt; sourceTree = "<absolute>"; };
		242D200242D200242D200000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/gil/CMakeLists.txt; sourceTree = "<absolute>"; };
		243530024353002435300000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpi/CMakeLists.txt; sourceTree = "<absolute>"; };
		243D460243D460243D460000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpi/src/CMakeLists.txt; sourceTree = "<absolute>"; };
		243DE10243DE10243DE10000 /* broadcast.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = broadcast.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpi/src/broadcast.cpp; sourceTree = "<absolute>"; };
		243EBA0243EBA0243EBA0000 /* communicator.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = communicator.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpi/src/communicator.cpp; sourceTree = "<absolute>"; };
		243F760243F760243F760000 /* computation_tree.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = computation_tree.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpi/src/computation_tree.cpp; sourceTree = "<absolute>"; };
		244034024403402440340000 /* content_oarchive.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = content_oarchive.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpi/src/content_oarchive.cpp; sourceTree = "<absolute>"; };
		2440ED02440ED02440ED0000 /* environment.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = environment.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpi/src/environment.cpp; sourceTree = "<absolute>"; };
		2441AA02441AA02441AA0000 /* exception.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = exception.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpi/src/exception.cpp; sourceTree = "<absolute>"; };
		244264024426402442640000 /* graph_communicator.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = graph_communicator.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpi/src/graph_communicator.cpp; sourceTree = "<absolute>"; };
		24431D024431D024431D0000 /* group.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = group.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpi/src/group.cpp; sourceTree = "<absolute>"; };
		2443D702443D702443D70000 /* intercommunicator.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = intercommunicator.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpi/src/intercommunicator.cpp; sourceTree = "<absolute>"; };
		244496024449602444960000 /* mpi_datatype_cache.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = mpi_datatype_cache.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpi/src/mpi_datatype_cache.cpp; sourceTree = "<absolute>"; };
		244556024455602445560000 /* mpi_datatype_oarchive.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = mpi_datatype_oarchive.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpi/src/mpi_datatype_oarchive.cpp; sourceTree = "<absolute>"; };
		24460E024460E024460E0000 /* packed_iarchive.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = packed_iarchive.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpi/src/packed_iarchive.cpp; sourceTree = "<absolute>"; };
		2446C802446C802446C80000 /* packed_oarchive.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = packed_oarchive.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpi/src/packed_oarchive.cpp; sourceTree = "<absolute>"; };
		244782024478202447820000 /* packed_skeleton_iarchive.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = packed_skeleton_iarchive.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpi/src/packed_skeleton_iarchive.cpp; sourceTree = "<absolute>"; };
		244840024484002448400000 /* packed_skeleton_oarchive.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = packed_skeleton_oarchive.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpi/src/packed_skeleton_oarchive.cpp; sourceTree = "<absolute>"; };
		2448F902448F902448F90000 /* point_to_point.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = point_to_point.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpi/src/point_to_point.cpp; sourceTree = "<absolute>"; };
		2449B002449B002449B00000 /* request.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = request.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpi/src/request.cpp; sourceTree = "<absolute>"; };
		244A6F0244A6F0244A6F0000 /* text_skeleton_oarchive.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = text_skeleton_oarchive.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpi/src/text_skeleton_oarchive.cpp; sourceTree = "<absolute>"; };
		2454B302454B302454B30000 /* libboost_mpi-mt.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; path = "libboost_mpi-mt.a"; sourceTree = BUILT_PRODUCTS_DIR; };
		246865024686502468650000 /* libboost_mpi-mt-d.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; path = "libboost_mpi-mt-d.a"; sourceTree = BUILT_PRODUCTS_DIR; };
		247006024700602470060000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph_parallel/src/CMakeLists.txt; sourceTree = "<absolute>"; };
		24701E024701E024701E0000 /* mpi_process_group.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = mpi_process_group.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph_parallel/src/mpi_process_group.cpp; sourceTree = "<absolute>"; };
		2471FB02471FB02471FB0000 /* tag_allocator.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = tag_allocator.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph_parallel/src/tag_allocator.cpp; sourceTree = "<absolute>"; };
		247C300247C300247C300000 /* libboost_graph_parallel-mt.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; path = "libboost_graph_parallel-mt.a"; sourceTree = BUILT_PRODUCTS_DIR; };
		248794024879402487940000 /* libboost_graph_parallel-mt-d.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; path = "libboost_graph_parallel-mt-d.a"; sourceTree = BUILT_PRODUCTS_DIR; };
		248FD60248FD60248FD60000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iostreams/CMakeLists.txt; sourceTree = "<absolute>"; };
		2497E402497E402497E40000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iostreams/src/CMakeLists.txt; sourceTree = "<absolute>"; };
		249809024980902498090000 /* file_descriptor.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = file_descriptor.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iostreams/src/file_descriptor.cpp; sourceTree = "<absolute>"; };
		24995A024995A024995A0000 /* mapped_file.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = mapped_file.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iostreams/src/mapped_file.cpp; sourceTree = "<absolute>"; };
		249A190249A190249A190000 /* zlib.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = zlib.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iostreams/src/zlib.cpp; sourceTree = "<absolute>"; };
		249AD40249AD40249AD40000 /* bzip2.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = bzip2.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iostreams/src/bzip2.cpp; sourceTree = "<absolute>"; };
		24A55A024A55A024A55A0000 /* libboost_iostreams-mt.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; path = "libboost_iostreams-mt.a"; sourceTree = BUILT_PRODUCTS_DIR; };
		24B1BF024B1BF024B1BF0000 /* libboost_iostreams-mt-d.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; path = "libboost_iostreams-mt-d.a"; sourceTree = BUILT_PRODUCTS_DIR; };
		24B994024B994024B9940000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/lambda/CMakeLists.txt; sourceTree = "<absolute>"; };
		24C1BA024C1BA024C1BA0000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_array/CMakeLists.txt; sourceTree = "<absolute>"; };
		24C9A6024C9A6024C9A60000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/program_options/CMakeLists.txt; sourceTree = "<absolute>"; };
		24CDD7024CDD7024CDD70000 /* cmdline.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = cmdline.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/program_options/src/cmdline.cpp; sourceTree = "<absolute>"; };
		24D1C8024D1C8024D1C80000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/program_options/src/CMakeLists.txt; sourceTree = "<absolute>"; };
		24D366024D366024D3660000 /* config_file.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = config_file.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/program_options/src/config_file.cpp; sourceTree = "<absolute>"; };
		24D41F024D41F024D41F0000 /* options_description.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = options_description.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/program_options/src/options_description.cpp; sourceTree = "<absolute>"; };
		24D4E4024D4E4024D4E40000 /* parsers.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = parsers.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/program_options/src/parsers.cpp; sourceTree = "<absolute>"; };
		24D59D024D59D024D59D0000 /* variables_map.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = variables_map.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/program_options/src/variables_map.cpp; sourceTree = "<absolute>"; };
		24D65A024D65A024D65A0000 /* value_semantic.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = value_semantic.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/program_options/src/value_semantic.cpp; sourceTree = "<absolute>"; };
		24D712024D712024D7120000 /* positional_options.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = positional_options.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/program_options/src/positional_options.cpp; sourceTree = "<absolute>"; };
		24D7D0024D7D0024D7D00000 /* utf8_codecvt_facet.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = utf8_codecvt_facet.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/program_options/src/utf8_codecvt_facet.cpp; sourceTree = "<absolute>"; };
		24D886024D886024D8860000 /* convert.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = convert.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/program_options/src/convert.cpp; sourceTree = "<absolute>"; };
		24D944024D944024D9440000 /* winmain.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = winmain.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/program_options/src/winmain.cpp; sourceTree = "<absolute>"; };
		24E370024E370024E3700000 /* libboost_program_options-mt.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; path = "libboost_program_options-mt.a"; sourceTree = BUILT_PRODUCTS_DIR; };
		24F2F8024F2F8024F2F80000 /* libboost_program_options-mt-d.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; path = "libboost_program_options-mt-d.a"; sourceTree = BUILT_PRODUCTS_DIR; };
		24FB2E024FB2E024FB2E0000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/rational/CMakeLists.txt; sourceTree = "<absolute>"; };
		250738025073802507380000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/signals/CMakeLists.txt; sourceTree = "<absolute>"; };
		250F530250F530250F530000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/signals/src/CMakeLists.txt; sourceTree = "<absolute>"; };
		250F710250F710250F710000 /* trackable.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = trackable.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/signals/src/trackable.cpp; sourceTree = "<absolute>"; };
		2510BF02510BF02510BF0000 /* connection.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = connection.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/signals/src/connection.cpp; sourceTree = "<absolute>"; };
		25117B025117B025117B0000 /* named_slot_map.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = named_slot_map.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/signals/src/named_slot_map.cpp; sourceTree = "<absolute>"; };
		251235025123502512350000 /* signal_base.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = signal_base.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/signals/src/signal_base.cpp; sourceTree = "<absolute>"; };
		2512EE02512EE02512EE0000 /* slot.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = slot.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/signals/src/slot.cpp; sourceTree = "<absolute>"; };
		251D830251D830251D830000 /* libboost_signals-mt.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; path = "libboost_signals-mt.a"; sourceTree = BUILT_PRODUCTS_DIR; };
		252A6C0252A6C0252A6C0000 /* libboost_signals-mt-d.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; path = "libboost_signals-mt-d.a"; sourceTree = BUILT_PRODUCTS_DIR; };
		253232025323202532320000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/signals2/CMakeLists.txt; sourceTree = "<absolute>"; };
		253A0B0253A0B0253A0B0000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/statechart/CMakeLists.txt; sourceTree = "<absolute>"; };
		25425A025425A025425A0000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tr1/CMakeLists.txt; sourceTree = "<absolute>"; };
		254A120254A120254A120000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/units/CMakeLists.txt; sourceTree = "<absolute>"; };
		25527F025527F025527F0000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/wave/CMakeLists.txt; sourceTree = "<absolute>"; };
		255A920255A920255A920000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/wave/src/CMakeLists.txt; sourceTree = "<absolute>"; };
		255B2E0255B2E0255B2E0000 /* instantiate_cpp_exprgrammar.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = instantiate_cpp_exprgrammar.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/wave/src/instantiate_cpp_exprgrammar.cpp; sourceTree = "<absolute>"; };
		255C0C0255C0C0255C0C0000 /* instantiate_cpp_grammar.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = instantiate_cpp_grammar.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/wave/src/instantiate_cpp_grammar.cpp; sourceTree = "<absolute>"; };
		255CCB0255CCB0255CCB0000 /* instantiate_cpp_literalgrs.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = instantiate_cpp_literalgrs.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/wave/src/instantiate_cpp_literalgrs.cpp; sourceTree = "<absolute>"; };
		255D870255D870255D870000 /* instantiate_defined_grammar.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = instantiate_defined_grammar.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/wave/src/instantiate_defined_grammar.cpp; sourceTree = "<absolute>"; };
		255E430255E430255E430000 /* instantiate_predef_macros.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = instantiate_predef_macros.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/wave/src/instantiate_predef_macros.cpp; sourceTree = "<absolute>"; };
		255F040255F040255F040000 /* instantiate_re2c_lexer.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = instantiate_re2c_lexer.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/wave/src/instantiate_re2c_lexer.cpp; sourceTree = "<absolute>"; };
		255FBE0255FBE0255FBE0000 /* instantiate_re2c_lexer_str.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = instantiate_re2c_lexer_str.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/wave/src/instantiate_re2c_lexer_str.cpp; sourceTree = "<absolute>"; };
		256075025607502560750000 /* token_ids.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = token_ids.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/wave/src/token_ids.cpp; sourceTree = "<absolute>"; };
		256130025613002561300000 /* wave_config_constant.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = wave_config_constant.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/wave/src/wave_config_constant.cpp; sourceTree = "<absolute>"; };
		2561EC02561EC02561EC0000 /* aq.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = aq.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/wave/src/cpplexer/re2clex/aq.cpp; sourceTree = "<absolute>"; };
		2562A602562A602562A60000 /* cpp_re.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = cpp_re.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/wave/src/cpplexer/re2clex/cpp_re.cpp; sourceTree = "<absolute>"; };
		256D330256D330256D330000 /* libboost_wave-mt.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; path = "libboost_wave-mt.a"; sourceTree = BUILT_PRODUCTS_DIR; };
		257D2D0257D2D0257D2D0000 /* libboost_wave-mt-d.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; path = "libboost_wave-mt-d.a"; sourceTree = BUILT_PRODUCTS_DIR; };
		257DAE0257DAE0257DAE0000 /* add_path.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = add_path.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/tools/bcp/add_path.cpp; sourceTree = "<absolute>"; };
		257E5B0257E5B0257E5B0000 /* bcp_imp.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = bcp_imp.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/tools/bcp/bcp_imp.cpp; sourceTree = "<absolute>"; };
		257F120257F120257F120000 /* copy_path.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = copy_path.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/tools/bcp/copy_path.cpp; sourceTree = "<absolute>"; };
		257FC90257FC90257FC90000 /* file_types.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = file_types.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/tools/bcp/file_types.cpp; sourceTree = "<absolute>"; };
		258080025808002580800000 /* fileview.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = fileview.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/tools/bcp/fileview.cpp; sourceTree = "<absolute>"; };
		25813A025813A025813A0000 /* main.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = main.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/tools/bcp/main.cpp; sourceTree = "<absolute>"; };
		2581F402581F402581F40000 /* path_operations.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = path_operations.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/tools/bcp/path_operations.cpp; sourceTree = "<absolute>"; };
		2582AC02582AC02582AC0000 /* scan_cvs_path.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = scan_cvs_path.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/tools/bcp/scan_cvs_path.cpp; sourceTree = "<absolute>"; };
		258363025836302583630000 /* licence_info.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = licence_info.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/tools/bcp/licence_info.cpp; sourceTree = "<absolute>"; };
		258420025842002584200000 /* scan_licence.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = scan_licence.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/tools/bcp/scan_licence.cpp; sourceTree = "<absolute>"; };
		2584D302584D302584D30000 /* output_licence_info.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = output_licence_info.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/tools/bcp/output_licence_info.cpp; sourceTree = "<absolute>"; };
		25858E025858E025858E0000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/tools/bcp/CMakeLists.txt; sourceTree = "<absolute>"; };
		258ECE0258ECE0258ECE0000 /* bcp */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = bcp; sourceTree = BUILT_PRODUCTS_DIR; };
		258F3E0258F3E0258F3E0000 /* inspect.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = inspect.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/tools/inspect/inspect.cpp; sourceTree = "<absolute>"; };
		25905F025905F025905F0000 /* license_check.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = license_check.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/tools/inspect/license_check.cpp; sourceTree = "<absolute>"; };
		259117025911702591170000 /* link_check.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = link_check.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/tools/inspect/link_check.cpp; sourceTree = "<absolute>"; };
		2591D002591D002591D00000 /* path_name_check.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = path_name_check.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/tools/inspect/path_name_check.cpp; sourceTree = "<absolute>"; };
		259286025928602592860000 /* tab_check.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = tab_check.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/tools/inspect/tab_check.cpp; sourceTree = "<absolute>"; };
		259343025934302593430000 /* crlf_check.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = crlf_check.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/tools/inspect/crlf_check.cpp; sourceTree = "<absolute>"; };
		2593FE02593FE02593FE0000 /* end_check.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = end_check.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/tools/inspect/end_check.cpp; sourceTree = "<absolute>"; };
		2594B702594B702594B70000 /* unnamed_namespace_check.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = unnamed_namespace_check.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/tools/inspect/unnamed_namespace_check.cpp; sourceTree = "<absolute>"; };
		259574025957402595740000 /* ascii_check.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = ascii_check.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/tools/inspect/ascii_check.cpp; sourceTree = "<absolute>"; };
		25962F025962F025962F0000 /* copyright_check.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = copyright_check.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/tools/inspect/copyright_check.cpp; sourceTree = "<absolute>"; };
		2596E402596E402596E40000 /* minmax_check.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = minmax_check.cpp; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/tools/inspect/minmax_check.cpp; sourceTree = "<absolute>"; };
		25979C025979C025979C0000 /* CMakeLists.txt */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/tools/inspect/CMakeLists.txt; sourceTree = "<absolute>"; };
		25A1A4025A1A4025A1A40000 /* inspect */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = inspect; sourceTree = BUILT_PRODUCTS_DIR; };
/* End PBXFileReference section */

/* Begin PBXGroup section */
		1F73B101F73B101F73B10000 = {
			isa = PBXGroup;
			children = (
				1F73D601F73D601F73D60000 /* Sources */,
				1F741301F741301F74130000 /* Resources */,
				1F918801F918801F91880000 /* Products */,
			);
			sourceTree = "<group>";
		};
		1F73D601F73D601F73D60000 /* Sources */ = {
			isa = PBXGroup;
			children = (
				1F746B01F746B01F746B0000 /* ALL_BUILD */,
				1F752701F752701F75270000 /* modularize */,
				1F760101F760101F76010000 /* preprocessor-modularize */,
				1F76F401F76F401F76F40000 /* concept_check-modularize */,
				1F77E501F77E501F77E50000 /* property_map-modularize */,
				1F78CF01F78CF01F78CF0000 /* config-modularize */,
				1F79B201F79B201F79B20000 /* mpl-modularize */,
				1F7A8001F7A8001F7A800000 /* type_traits-modularize */,
				1F7B6F01F7B6F01F7B6F0000 /* function-modularize */,
				1F7C5D01F7C5D01F7C5D0000 /* iterator-modularize */,
				1F7D4A01F7D4A01F7D4A0000 /* smart_ptr-modularize */,
				1F7E3801F7E3801F7E380000 /* exception-modularize */,
				1F7F2601F7F2601F7F260000 /* utility-modularize */,
				1F801301F801301F80130000 /* integer-modularize */,
				1F811501F811501F81150000 /* detail-modularize */,
				1F81F301F81F301F81F30000 /* static_assert-modularize */,
				1F82E901F82E901F82E90000 /* tuple-modularize */,
				1F83CC01F83CC01F83CC0000 /* function_types-modularize */,
				1F84C501F84C501F84C50000 /* fusion-modularize */,
				1F85A901F85A901F85A90000 /* typeof-modularize */,
				1F868C01F868C01F868C0000 /* proto-modularize */,
				1F875A01F875A01F875A0000 /* intrusive-modularize */,
				1F885C01F885C01F885C0000 /* logic-modularize */,
				1F892A01F892A01F892A0000 /* numeric-modularize */,
				1F8A1701F8A1701F8A170000 /* xpressive-modularize */,
				1F8B0501F8B0501F8B050000 /* optional-modularize */,
				1F8BF201F8BF201F8BF20000 /* tokenizer-modularize */,
				1F8CF401F8CF401F8CF40000 /* io-modularize */,
				1F8DD501F8DD501F8DD50000 /* bind-modularize */,
				1F8EA301F8EA301F8EA30000 /* date_time-modularize */,
				1F8F7601F8F7601F8F760000 /* boost_date_time */,
				1F903201F903201F90320000 /* boost_date_time-mt-static */,
				1F90D901F90D901F90D90000 /* boost_date_time-mt-static-debug */,
				1F91E401F91E401F91E40000 /* thread-modularize */,
				1F929801F929801F92980000 /* boost_thread */,
				1F934E01F934E01F934E0000 /* boost_thread-mt-static */,
				1F941701F941701F94170000 /* boost_thread-mt-static-debug */,
				1F94F401F94F401F94F40000 /* regex-modularize */,
				1F95A701F95A701F95A70000 /* boost_regex */,
				1F966201F966201F96620000 /* boost_regex-mt-static */,
				1F97C201F97C201F97C20000 /* boost_regex-mt-static-debug */,
				1F994601F994601F99460000 /* algorithm-modularize */,
				1F9A3501F9A3501F9A350000 /* range-modularize */,
				1F9B0301F9B0301F9B030000 /* foreach-modularize */,
				1F9C0401F9C0401F9C040000 /* array-modularize */,
				1F9CD201F9CD201F9CD20000 /* functional-modularize */,
				1F9DC101F9DC101F9DC10000 /* unordered-modularize */,
				1F9EC301F9EC301F9EC30000 /* pool-modularize */,
				1F9FA601F9FA601F9FA60000 /* spirit-modularize */,
				1FA07501FA07501FA0750000 /* variant-modularize */,
				1FA17101FA17101FA1710000 /* serialization-modularize */,
				1FA23801FA23801FA2380000 /* boost_serialization */,
				1FA2FC01FA2FC01FA2FC0000 /* boost_serialization-mt-static */,
				1FA4D701FA4D701FA4D70000 /* boost_serialization-mt-static-debug */,
				1FA5A501FA5A501FA5A50000 /* boost_wserialization */,
				1FA76501FA76501FA7650000 /* boost_wserialization-mt-static */,
				1FA87601FA87601FA8760000 /* boost_wserialization-mt-static-debug */,
				1FA9AC01FA9AC01FA9AC0000 /* format-modularize */,
				1FAA8E01FAA8E01FAA8E0000 /* math-modularize */,
				1FAB5C01FAB5C01FAB5C0000 /* multi_index-modularize */,
				1FAC5F01FAC5F01FAC5F0000 /* any-modularize */,
				1FAD4201FAD4201FAD420000 /* random-modularize */,
				1FAE2501FAE2501FAE250000 /* graph-modularize */,
				1FAED801FAED801FAED80000 /* boost_graph */,
				1FAF8E01FAF8E01FAF8E0000 /* boost_graph-mt-static */,
				1FB03001FB03001FB0300000 /* boost_graph-mt-static-debug */,
				1FB0F701FB0F701FB0F70000 /* Python-modularize */,
				1FB1AB01FB1AB01FB1AB0000 /* boost_python */,
				1FB26901FB26901FB2690000 /* boost_python-mt-static */,
				1FB44A01FB44A01FB44A0000 /* boost_python-mt-static-debug */,
				1FB63B01FB63B01FB63B0000 /* parameter-modularize */,
				1FB73E01FB73E01FB73E0000 /* accumulators-modularize */,
				1FB80501FB80501FB8050000 /* accumulators-accumulators_example */,
				1FB8DD01FB8DD01FB8DD0000 /* system-modularize */,
				1FB99101FB99101FB9910000 /* boost_system */,
				1FBA4701FBA4701FBA470000 /* boost_system-mt-static */,
				1FBAEA01FBAEA01FBAEA0000 /* boost_system-mt-static-debug */,
				1FBBBC01FBBBC01FBBBC0000 /* asio-modularize */,
				1FBCAB01FBCAB01FBCAB0000 /* circular_buffer-modularize */,
				1FBD9A01FBD9A01FBD9A0000 /* ptr_container-modularize */,
				1FBE8401FBE8401FBE840000 /* assign-modularize */,
				1FBF6701FBF6701FBF670000 /* bimap-modularize */,
				1FC04401FC04401FC0440000 /* compatibility-modularize */,
				1FC16901FC16901FC1690000 /* crc-modularize */,
				1FC24B01FC24B01FC24B0000 /* timer-modularize */,
				1FC32D01FC32D01FC32D0000 /* test-modularize */,
				1FC3E001FC3E001FC3E00000 /* boost_prg_exec_monitor */,
				1FC49E01FC49E01FC49E0000 /* boost_prg_exec_monitor-mt-static */,
				1FC55F01FC55F01FC55F0000 /* boost_prg_exec_monitor-mt-static-debug */,
				1FC62601FC62601FC6260000 /* boost_test_exec_monitor */,
				1FC6E001FC6E001FC6E00000 /* boost_test_exec_monitor-mt-static */,
				1FC85201FC85201FC8520000 /* boost_test_exec_monitor-mt-static-debug */,
				1FC8EA01FC8EA01FC8EA0000 /* boost_unit_test_framework */,
				1FCA8A01FCA8A01FCA8A0000 /* boost_unit_test_framework-mt-static */,
				1FCC1101FCC1101FCC110000 /* boost_unit_test_framework-mt-static-debug */,
				1FCE1401FCE1401FCE140000 /* dynamic_bitset-modularize */,
				1FCEEB01FCEEB01FCEEB0000 /* filesystem-modularize */,
				1FCFBF01FCFBF01FCFBF0000 /* boost_filesystem */,
				1FD07D01FD07D01FD07D0000 /* boost_filesystem-mt-static */,
				1FD12301FD12301FD1230000 /* boost_filesystem-mt-static-debug */,
				1FD23A01FD23A01FD23A0000 /* interprocess-modularize */,
				1FD31701FD31701FD3170000 /* flyweight-modularize */,
				1FD41901FD41901FD4190000 /* gil-modularize */,
				1FD4FB01FD4FB01FD4FB0000 /* mpi-modularize */,
				1FD5AE01FD5AE01FD5AE0000 /* boost_mpi */,
				1FD66C01FD66C01FD66C0000 /* boost_mpi-mt-static */,
				1FD7C601FD7C601FD7C60000 /* boost_mpi-mt-static-debug */,
				1FD95701FD95701FD9570000 /* boost_graph_parallel */,
				1FDA1101FDA1101FDA110000 /* boost_graph_parallel-mt-static */,
				1FDAA601FDAA601FDAA60000 /* boost_graph_parallel-mt-static-debug */,
				1FDB8B01FDB8B01FDB8B0000 /* iostreams-modularize */,
				1FDC6401FDC6401FDC640000 /* boost_iostreams */,
				1FDD2001FDD2001FDD200000 /* boost_iostreams-mt-static */,
				1FDDDA01FDDDA01FDDDA0000 /* boost_iostreams-mt-static-debug */,
				1FDEDB01FDEDB01FDEDB0000 /* lambda-modularize */,
				1FDFAA01FDFAA01FDFAA0000 /* multi_array-modularize */,
				1FE0BA01FE0BA01FE0BA0000 /* program_options-modularize */,
				1FE17801FE17801FE1780000 /* boost_program_options */,
				1FE23501FE23501FE2350000 /* boost_program_options-mt-static */,
				1FE35001FE35001FE3500000 /* boost_program_options-mt-static-debug */,
				1FE4A001FE4A001FE4A00000 /* rational-modularize */,
				1FE57101FE57101FE5710000 /* signals-modularize */,
				1FE64501FE64501FE6450000 /* boost_signals */,
				1FE6F901FE6F901FE6F90000 /* boost_signals-mt-static */,
				1FE7CB01FE7CB01FE7CB0000 /* boost_signals-mt-static-debug */,
				1FE8CC01FE8CC01FE8CC0000 /* signals2-modularize */,
				1FE99B01FE99B01FE99B0000 /* statechart-modularize */,
				1FEA9E01FEA9E01FEA9E0000 /* tr1-modularize */,
				1FEB8001FEB8001FEB800000 /* units-modularize */,
				1FEC6201FEC6201FEC620000 /* wave-modularize */,
				1FED1501FED1501FED150000 /* boost_wave */,
				1FEDCE01FEDCE01FEDCE0000 /* boost_wave-mt-static */,
				1FEEE601FEEE601FEEE60000 /* boost_wave-mt-static-debug */,
				1FF03501FF03501FF0350000 /* bcp */,
				1FF15A01FF15A01FF15A0000 /* inspect */,
			);
			name = Sources;
			sourceTree = "<group>";
		};
		1F741301F741301F74130000 /* Resources */ = {
			isa = PBXGroup;
			children = (
			);
			name = Resources;
			sourceTree = "<group>";
		};
		1F746B01F746B01F746B0000 /* ALL_BUILD */ = {
			isa = PBXGroup;
			children = (
				1F74D401F74D401F74D40000 /* CMake Rules */,
				1FFB4C01FFB4C01FFB4C0000 /* CMakeLists.txt */,
			);
			name = ALL_BUILD;
			sourceTree = "<group>";
		};
		1F74D401F74D401F74D40000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		1F752701F752701F75270000 /* modularize */ = {
			isa = PBXGroup;
			children = (
				1F759501F759501F75950000 /* CMake Rules */,
				1FFB4C01FFB4C01FFB4C0000 /* CMakeLists.txt */,
			);
			name = modularize;
			sourceTree = "<group>";
		};
		1F759501F759501F75950000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		1F760101F760101F76010000 /* preprocessor-modularize */ = {
			isa = PBXGroup;
			children = (
				1F768201F768201F76820000 /* CMake Rules */,
				201E2B0201E2B0201E2B0000 /* CMakeLists.txt */,
			);
			name = "preprocessor-modularize";
			sourceTree = "<group>";
		};
		1F768201F768201F76820000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		1F76F401F76F401F76F40000 /* concept_check-modularize */ = {
			isa = PBXGroup;
			children = (
				1F777501F777501F77750000 /* CMake Rules */,
				202692020269202026920000 /* CMakeLists.txt */,
			);
			name = "concept_check-modularize";
			sourceTree = "<group>";
		};
		1F777501F777501F77750000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		1F77E501F77E501F77E50000 /* property_map-modularize */ = {
			isa = PBXGroup;
			children = (
				1F785901F785901F78590000 /* CMake Rules */,
				202F160202F160202F160000 /* CMakeLists.txt */,
			);
			name = "property_map-modularize";
			sourceTree = "<group>";
		};
		1F785901F785901F78590000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		1F78CF01F78CF01F78CF0000 /* config-modularize */ = {
			isa = PBXGroup;
			children = (
				1F793001F793001F79300000 /* CMake Rules */,
				203759020375902037590000 /* CMakeLists.txt */,
			);
			name = "config-modularize";
			sourceTree = "<group>";
		};
		1F793001F793001F79300000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		1F79B201F79B201F79B20000 /* mpl-modularize */ = {
			isa = PBXGroup;
			children = (
				1F7A0201F7A0201F7A020000 /* CMake Rules */,
				203F650203F650203F650000 /* CMakeLists.txt */,
			);
			name = "mpl-modularize";
			sourceTree = "<group>";
		};
		1F7A0201F7A0201F7A020000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		1F7A8001F7A8001F7A800000 /* type_traits-modularize */ = {
			isa = PBXGroup;
			children = (
				1F7AEC01F7AEC01F7AEC0000 /* CMake Rules */,
				20477D020477D020477D0000 /* CMakeLists.txt */,
			);
			name = "type_traits-modularize";
			sourceTree = "<group>";
		};
		1F7AEC01F7AEC01F7AEC0000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		1F7B6F01F7B6F01F7B6F0000 /* function-modularize */ = {
			isa = PBXGroup;
			children = (
				1F7BDA01F7BDA01F7BDA0000 /* CMake Rules */,
				204F8D0204F8D0204F8D0000 /* CMakeLists.txt */,
			);
			name = "function-modularize";
			sourceTree = "<group>";
		};
		1F7BDA01F7BDA01F7BDA0000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		1F7C5D01F7C5D01F7C5D0000 /* iterator-modularize */ = {
			isa = PBXGroup;
			children = (
				1F7CE501F7CE501F7CE50000 /* CMake Rules */,
				20579C020579C020579C0000 /* CMakeLists.txt */,
			);
			name = "iterator-modularize";
			sourceTree = "<group>";
		};
		1F7CE501F7CE501F7CE50000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		1F7D4A01F7D4A01F7D4A0000 /* smart_ptr-modularize */ = {
			isa = PBXGroup;
			children = (
				1F7DB501F7DB501F7DB50000 /* CMake Rules */,
				205FA90205FA90205FA90000 /* CMakeLists.txt */,
			);
			name = "smart_ptr-modularize";
			sourceTree = "<group>";
		};
		1F7DB501F7DB501F7DB50000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		1F7E3801F7E3801F7E380000 /* exception-modularize */ = {
			isa = PBXGroup;
			children = (
				1F7EA301F7EA301F7EA30000 /* CMake Rules */,
				2067BB02067BB02067BB0000 /* CMakeLists.txt */,
			);
			name = "exception-modularize";
			sourceTree = "<group>";
		};
		1F7EA301F7EA301F7EA30000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		1F7F2601F7F2601F7F260000 /* utility-modularize */ = {
			isa = PBXGroup;
			children = (
				1F7F9F01F7F9F01F7F9F0000 /* CMake Rules */,
				206FB70206FB70206FB70000 /* CMakeLists.txt */,
			);
			name = "utility-modularize";
			sourceTree = "<group>";
		};
		1F7F9F01F7F9F01F7F9F0000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		1F801301F801301F80130000 /* integer-modularize */ = {
			isa = PBXGroup;
			children = (
				1F808C01F808C01F808C0000 /* CMake Rules */,
				2077CB02077CB02077CB0000 /* CMakeLists.txt */,
			);
			name = "integer-modularize";
			sourceTree = "<group>";
		};
		1F808C01F808C01F808C0000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		1F811501F811501F81150000 /* detail-modularize */ = {
			isa = PBXGroup;
			children = (
				1F817601F817601F81760000 /* CMake Rules */,
				207FD30207FD30207FD30000 /* CMakeLists.txt */,
			);
			name = "detail-modularize";
			sourceTree = "<group>";
		};
		1F817601F817601F81760000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		1F81F301F81F301F81F30000 /* static_assert-modularize */ = {
			isa = PBXGroup;
			children = (
				1F827401F827401F82740000 /* CMake Rules */,
				2087EB02087EB02087EB0000 /* CMakeLists.txt */,
			);
			name = "static_assert-modularize";
			sourceTree = "<group>";
		};
		1F827401F827401F82740000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		1F82E901F82E901F82E90000 /* tuple-modularize */ = {
			isa = PBXGroup;
			children = (
				1F834F01F834F01F834F0000 /* CMake Rules */,
				208FF60208FF60208FF60000 /* CMakeLists.txt */,
			);
			name = "tuple-modularize";
			sourceTree = "<group>";
		};
		1F832801F832801F83280000 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				210547021054702105470000 /* greg_month.cpp */,
				2105FC02105FC02105FC0000 /* greg_weekday.cpp */,
				2106B902106B902106B90000 /* date_generators.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		1F834F01F834F01F834F0000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		1F83CC01F83CC01F83CC0000 /* function_types-modularize */ = {
			isa = PBXGroup;
			children = (
				1F844F01F844F01F844F0000 /* CMake Rules */,
				20980D020980D020980D0000 /* CMakeLists.txt */,
			);
			name = "function_types-modularize";
			sourceTree = "<group>";
		};
		1F844F01F844F01F844F0000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		1F84C501F84C501F84C50000 /* fusion-modularize */ = {
			isa = PBXGroup;
			children = (
				1F852601F852601F85260000 /* CMake Rules */,
				20A005020A005020A0050000 /* CMakeLists.txt */,
			);
			name = "fusion-modularize";
			sourceTree = "<group>";
		};
		1F852601F852601F85260000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		1F85A901F85A901F85A90000 /* typeof-modularize */ = {
			isa = PBXGroup;
			children = (
				1F860A01F860A01F860A0000 /* CMake Rules */,
				20A819020A819020A8190000 /* CMakeLists.txt */,
			);
			name = "typeof-modularize";
			sourceTree = "<group>";
		};
		1F860A01F860A01F860A0000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		1F868C01F868C01F868C0000 /* proto-modularize */ = {
			isa = PBXGroup;
			children = (
				1F86ED01F86ED01F86ED0000 /* CMake Rules */,
				20B01A020B01A020B01A0000 /* CMakeLists.txt */,
			);
			name = "proto-modularize";
			sourceTree = "<group>";
		};
		1F86ED01F86ED01F86ED0000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		1F875A01F875A01F875A0000 /* intrusive-modularize */ = {
			isa = PBXGroup;
			children = (
				1F87C501F87C501F87C50000 /* CMake Rules */,
				20B82F020B82F020B82F0000 /* CMakeLists.txt */,
			);
			name = "intrusive-modularize";
			sourceTree = "<group>";
		};
		1F87C501F87C501F87C50000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		1F885C01F885C01F885C0000 /* logic-modularize */ = {
			isa = PBXGroup;
			children = (
				1F88BD01F88BD01F88BD0000 /* CMake Rules */,
				20C034020C034020C0340000 /* CMakeLists.txt */,
			);
			name = "logic-modularize";
			sourceTree = "<group>";
		};
		1F88BD01F88BD01F88BD0000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		1F892A01F892A01F892A0000 /* numeric-modularize */ = {
			isa = PBXGroup;
			children = (
				1F89A301F89A301F89A30000 /* CMake Rules */,
				20C82B020C82B020C82B0000 /* CMakeLists.txt */,
			);
			name = "numeric-modularize";
			sourceTree = "<group>";
		};
		1F89A301F89A301F89A30000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		1F8A1701F8A1701F8A170000 /* xpressive-modularize */ = {
			isa = PBXGroup;
			children = (
				1F8A8201F8A8201F8A820000 /* CMake Rules */,
				20D005020D005020D0050000 /* CMakeLists.txt */,
			);
			name = "xpressive-modularize";
			sourceTree = "<group>";
		};
		1F8A8201F8A8201F8A820000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		1F8B0501F8B0501F8B050000 /* optional-modularize */ = {
			isa = PBXGroup;
			children = (
				1F8B8D01F8B8D01F8B8D0000 /* CMake Rules */,
				20D847020D847020D8470000 /* CMakeLists.txt */,
			);
			name = "optional-modularize";
			sourceTree = "<group>";
		};
		1F8B8D01F8B8D01F8B8D0000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		1F8BF201F8BF201F8BF20000 /* tokenizer-modularize */ = {
			isa = PBXGroup;
			children = (
				1F8C5D01F8C5D01F8C5D0000 /* CMake Rules */,
				20E065020E065020E0650000 /* CMakeLists.txt */,
			);
			name = "tokenizer-modularize";
			sourceTree = "<group>";
		};
		1F8C5D01F8C5D01F8C5D0000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		1F8CF401F8CF401F8CF40000 /* io-modularize */ = {
			isa = PBXGroup;
			children = (
				1F8D4301F8D4301F8D430000 /* CMake Rules */,
				20E86C020E86C020E86C0000 /* CMakeLists.txt */,
			);
			name = "io-modularize";
			sourceTree = "<group>";
		};
		1F8D4301F8D4301F8D430000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		1F8DD501F8DD501F8DD50000 /* bind-modularize */ = {
			isa = PBXGroup;
			children = (
				1F8E3601F8E3601F8E360000 /* CMake Rules */,
				20F07F020F07F020F07F0000 /* CMakeLists.txt */,
			);
			name = "bind-modularize";
			sourceTree = "<group>";
		};
		1F8E3601F8E3601F8E360000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		1F8EA301F8EA301F8EA30000 /* date_time-modularize */ = {
			isa = PBXGroup;
			children = (
				1F8F0E01F8F0E01F8F0E0000 /* CMake Rules */,
				20F887020F887020F8870000 /* CMakeLists.txt */,
			);
			name = "date_time-modularize";
			sourceTree = "<group>";
		};
		1F8F0E01F8F0E01F8F0E0000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		1F8F7601F8F7601F8F760000 /* boost_date_time */ = {
			isa = PBXGroup;
			children = (
				1F8FDC01F8FDC01F8FDC0000 /* CMake Rules */,
				210475021047502104750000 /* CMakeLists.txt */,
			);
			name = boost_date_time;
			sourceTree = "<group>";
		};
		1F8FDC01F8FDC01F8FDC0000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		1F903201F903201F90320000 /* boost_date_time-mt-static */ = {
			isa = PBXGroup;
			children = (
				1F907E01F907E01F907E0000 /* Source Files */,
				210475021047502104750000 /* CMakeLists.txt */,
			);
			name = "boost_date_time-mt-static";
			sourceTree = "<group>";
		};
		1F907E01F907E01F907E0000 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				210547021054702105470000 /* greg_month.cpp */,
				2105FC02105FC02105FC0000 /* greg_weekday.cpp */,
				2106B902106B902106B90000 /* date_generators.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		1F90D901F90D901F90D90000 /* boost_date_time-mt-static-debug */ = {
			isa = PBXGroup;
			children = (
				1F832801F832801F83280000 /* Source Files */,
				210475021047502104750000 /* CMakeLists.txt */,
			);
			name = "boost_date_time-mt-static-debug";
			sourceTree = "<group>";
		};
		1F913801F913801F91380000 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				226FC90226FC90226FC90000 /* read_graphviz_spirit.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		1F918801F918801F91880000 /* Products */ = {
			isa = PBXGroup;
			children = (
				211142021114202111420000 /* libboost_date_time-mt.a */,
				211D290211D290211D290000 /* libboost_date_time-mt-d.a */,
				2139A902139A902139A90000 /* libboost_thread-mt.a */,
				214579021457902145790000 /* libboost_thread-mt-d.a */,
				216C330216C330216C330000 /* libboost_regex-mt.a */,
				217F460217F460217F460000 /* libboost_regex-mt-d.a */,
				21F467021F467021F4670000 /* libboost_serialization-mt.a */,
				220FA90220FA90220FA90000 /* libboost_serialization-mt-d.a */,
				222866022286602228660000 /* libboost_wserialization-mt.a */,
				22376E022376E022376E0000 /* libboost_wserialization-mt-d.a */,
				227A840227A840227A840000 /* libboost_graph-mt.a */,
				228559022855902285590000 /* libboost_graph-mt-d.a */,
				22B488022B488022B4880000 /* libboost_python-mt.a */,
				22CD8A022CD8A022CD8A0000 /* libboost_python-mt-d.a */,
				22E91B022E91B022E91B0000 /* accumulators-accumulators_example */,
				23083D023083D023083D0000 /* libboost_system-mt.a */,
				231313023131302313130000 /* libboost_system-mt-d.a */,
				2370A102370A102370A10000 /* libboost_prg_exec_monitor-mt.a */,
				237C850237C850237C850000 /* libboost_prg_exec_monitor-mt-d.a */,
				239ABC0239ABC0239ABC0000 /* libboost_test_exec_monitor-mt.a */,
				23ADE4023ADE4023ADE40000 /* libboost_test_exec_monitor-mt-d.a */,
				23CAA1023CAA1023CAA10000 /* libboost_unit_test_framework-mt.a */,
				23DECF023DECF023DECF0000 /* libboost_unit_test_framework-mt-d.a */,
				2408A102408A102408A10000 /* libboost_filesystem-mt.a */,
				241519024151902415190000 /* libboost_filesystem-mt-d.a */,
				2454B302454B302454B30000 /* libboost_mpi-mt.a */,
				246865024686502468650000 /* libboost_mpi-mt-d.a */,
				247C300247C300247C300000 /* libboost_graph_parallel-mt.a */,
				248794024879402487940000 /* libboost_graph_parallel-mt-d.a */,
				24A55A024A55A024A55A0000 /* libboost_iostreams-mt.a */,
				24B1BF024B1BF024B1BF0000 /* libboost_iostreams-mt-d.a */,
				24E370024E370024E3700000 /* libboost_program_options-mt.a */,
				24F2F8024F2F8024F2F80000 /* libboost_program_options-mt-d.a */,
				251D830251D830251D830000 /* libboost_signals-mt.a */,
				252A6C0252A6C0252A6C0000 /* libboost_signals-mt-d.a */,
				256D330256D330256D330000 /* libboost_wave-mt.a */,
				257D2D0257D2D0257D2D0000 /* libboost_wave-mt-d.a */,
				258ECE0258ECE0258ECE0000 /* bcp */,
				25A1A4025A1A4025A1A40000 /* inspect */,
			);
			name = Products;
			sourceTree = "<group>";
		};
		1F91E401F91E401F91E40000 /* thread-modularize */ = {
			isa = PBXGroup;
			children = (
				1F924501F924501F92450000 /* CMake Rules */,
				2124EF02124EF02124EF0000 /* CMakeLists.txt */,
			);
			name = "thread-modularize";
			sourceTree = "<group>";
		};
		1F924501F924501F92450000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		1F929801F929801F92980000 /* boost_thread */ = {
			isa = PBXGroup;
			children = (
				1F92EA01F92EA01F92EA0000 /* CMake Rules */,
				212CEE0212CEE0212CEE0000 /* CMakeLists.txt */,
			);
			name = boost_thread;
			sourceTree = "<group>";
		};
		1F92EA01F92EA01F92EA0000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		1F934E01F934E01F934E0000 /* boost_thread-mt-static */ = {
			isa = PBXGroup;
			children = (
				1F939D01F939D01F939D0000 /* Source Files */,
				212CEE0212CEE0212CEE0000 /* CMakeLists.txt */,
			);
			name = "boost_thread-mt-static";
			sourceTree = "<group>";
		};
		1F939D01F939D01F939D0000 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				212D780212D780212D780000 /* thread.cpp */,
				212E650212E650212E650000 /* exceptions.cpp */,
				212F200212F200212F200000 /* once.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		1F941701F941701F94170000 /* boost_thread-mt-static-debug */ = {
			isa = PBXGroup;
			children = (
				1F945401F945401F94540000 /* Source Files */,
				212CEE0212CEE0212CEE0000 /* CMakeLists.txt */,
			);
			name = "boost_thread-mt-static-debug";
			sourceTree = "<group>";
		};
		1F945401F945401F94540000 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				212D780212D780212D780000 /* thread.cpp */,
				212E650212E650212E650000 /* exceptions.cpp */,
				212F200212F200212F200000 /* once.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		1F94F401F94F401F94F40000 /* regex-modularize */ = {
			isa = PBXGroup;
			children = (
				1F955501F955501F95550000 /* CMake Rules */,
				214D3D0214D3D0214D3D0000 /* CMakeLists.txt */,
			);
			name = "regex-modularize";
			sourceTree = "<group>";
		};
		1F955501F955501F95550000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		1F95A701F95A701F95A70000 /* boost_regex */ = {
			isa = PBXGroup;
			children = (
				1F960801F960801F96080000 /* CMake Rules */,
				21553E021553E021553E0000 /* CMakeLists.txt */,
			);
			name = boost_regex;
			sourceTree = "<group>";
		};
		1F960801F960801F96080000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		1F966201F966201F96620000 /* boost_regex-mt-static */ = {
			isa = PBXGroup;
			children = (
				1F96AE01F96AE01F96AE0000 /* Source Files */,
				21553E021553E021553E0000 /* CMakeLists.txt */,
			);
			name = "boost_regex-mt-static";
			sourceTree = "<group>";
		};
		1F96AE01F96AE01F96AE0000 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				2155DA02155DA02155DA0000 /* c_regex_traits.cpp */,
				2156B302156B302156B30000 /* cpp_regex_traits.cpp */,
				215771021577102157710000 /* cregex.cpp */,
				21582A021582A021582A0000 /* fileiter.cpp */,
				2158E002158E002158E00000 /* icu.cpp */,
				21599F021599F021599F0000 /* instances.cpp */,
				215A550215A550215A550000 /* posix_api.cpp */,
				215B0C0215B0C0215B0C0000 /* regex.cpp */,
				215BC50215BC50215BC50000 /* regex_debug.cpp */,
				215C7D0215C7D0215C7D0000 /* regex_raw_buffer.cpp */,
				215D3D0215D3D0215D3D0000 /* regex_traits_defaults.cpp */,
				215DF60215DF60215DF60000 /* static_mutex.cpp */,
				215EAE0215EAE0215EAE0000 /* w32_regex_traits.cpp */,
				215F6C0215F6C0215F6C0000 /* wc_regex_traits.cpp */,
				216023021602302160230000 /* wide_posix_api.cpp */,
				2160DC02160DC02160DC0000 /* winstances.cpp */,
				216193021619302161930000 /* usinstances.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		1F97C201F97C201F97C20000 /* boost_regex-mt-static-debug */ = {
			isa = PBXGroup;
			children = (
				1F980E01F980E01F980E0000 /* Source Files */,
				21553E021553E021553E0000 /* CMakeLists.txt */,
			);
			name = "boost_regex-mt-static-debug";
			sourceTree = "<group>";
		};
		1F980E01F980E01F980E0000 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				2155DA02155DA02155DA0000 /* c_regex_traits.cpp */,
				2156B302156B302156B30000 /* cpp_regex_traits.cpp */,
				215771021577102157710000 /* cregex.cpp */,
				21582A021582A021582A0000 /* fileiter.cpp */,
				2158E002158E002158E00000 /* icu.cpp */,
				21599F021599F021599F0000 /* instances.cpp */,
				215A550215A550215A550000 /* posix_api.cpp */,
				215B0C0215B0C0215B0C0000 /* regex.cpp */,
				215BC50215BC50215BC50000 /* regex_debug.cpp */,
				215C7D0215C7D0215C7D0000 /* regex_raw_buffer.cpp */,
				215D3D0215D3D0215D3D0000 /* regex_traits_defaults.cpp */,
				215DF60215DF60215DF60000 /* static_mutex.cpp */,
				215EAE0215EAE0215EAE0000 /* w32_regex_traits.cpp */,
				215F6C0215F6C0215F6C0000 /* wc_regex_traits.cpp */,
				216023021602302160230000 /* wide_posix_api.cpp */,
				2160DC02160DC02160DC0000 /* winstances.cpp */,
				216193021619302161930000 /* usinstances.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		1F994601F994601F99460000 /* algorithm-modularize */ = {
			isa = PBXGroup;
			children = (
				1F999E01F999E01F999E0000 /* CMake Rules */,
				218711021871102187110000 /* CMakeLists.txt */,
			);
			name = "algorithm-modularize";
			sourceTree = "<group>";
		};
		1F999E01F999E01F999E0000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		1F9A3501F9A3501F9A350000 /* range-modularize */ = {
			isa = PBXGroup;
			children = (
				1F9A9601F9A9601F9A960000 /* CMake Rules */,
				218F0A0218F0A0218F0A0000 /* CMakeLists.txt */,
			);
			name = "range-modularize";
			sourceTree = "<group>";
		};
		1F9A9601F9A9601F9A960000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		1F9B0301F9B0301F9B030000 /* foreach-modularize */ = {
			isa = PBXGroup;
			children = (
				1F9B7C01F9B7C01F9B7C0000 /* CMake Rules */,
				219708021970802197080000 /* CMakeLists.txt */,
			);
			name = "foreach-modularize";
			sourceTree = "<group>";
		};
		1F9B7C01F9B7C01F9B7C0000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		1F9C0401F9C0401F9C040000 /* array-modularize */ = {
			isa = PBXGroup;
			children = (
				1F9C6501F9C6501F9C650000 /* CMake Rules */,
				219F1B0219F1B0219F1B0000 /* CMakeLists.txt */,
			);
			name = "array-modularize";
			sourceTree = "<group>";
		};
		1F9C6501F9C6501F9C650000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		1F9CD201F9CD201F9CD20000 /* functional-modularize */ = {
			isa = PBXGroup;
			children = (
				1F9D3E01F9D3E01F9D3E0000 /* CMake Rules */,
				21A731021A731021A7310000 /* CMakeLists.txt */,
			);
			name = "functional-modularize";
			sourceTree = "<group>";
		};
		1F9D3E01F9D3E01F9D3E0000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		1F9DC101F9DC101F9DC10000 /* unordered-modularize */ = {
			isa = PBXGroup;
			children = (
				1F9E2C01F9E2C01F9E2C0000 /* CMake Rules */,
				21AF36021AF36021AF360000 /* CMakeLists.txt */,
			);
			name = "unordered-modularize";
			sourceTree = "<group>";
		};
		1F9E2C01F9E2C01F9E2C0000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		1F9EC301F9EC301F9EC30000 /* pool-modularize */ = {
			isa = PBXGroup;
			children = (
				1F9F2401F9F2401F9F240000 /* CMake Rules */,
				21B745021B745021B7450000 /* CMakeLists.txt */,
			);
			name = "pool-modularize";
			sourceTree = "<group>";
		};
		1F9F2401F9F2401F9F240000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		1F9FA601F9FA601F9FA60000 /* spirit-modularize */ = {
			isa = PBXGroup;
			children = (
				1FA00701FA00701FA0070000 /* CMake Rules */,
				21BF3F021BF3F021BF3F0000 /* CMakeLists.txt */,
			);
			name = "spirit-modularize";
			sourceTree = "<group>";
		};
		1FA00701FA00701FA0070000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		1FA07501FA07501FA0750000 /* variant-modularize */ = {
			isa = PBXGroup;
			children = (
				1FA0EE01FA0EE01FA0EE0000 /* CMake Rules */,
				21C74E021C74E021C74E0000 /* CMakeLists.txt */,
			);
			name = "variant-modularize";
			sourceTree = "<group>";
		};
		1FA0EE01FA0EE01FA0EE0000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		1FA17101FA17101FA1710000 /* serialization-modularize */ = {
			isa = PBXGroup;
			children = (
				1FA1F201FA1F201FA1F20000 /* CMake Rules */,
				21CF65021CF65021CF650000 /* CMakeLists.txt */,
			);
			name = "serialization-modularize";
			sourceTree = "<group>";
		};
		1FA1F201FA1F201FA1F20000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		1FA23801FA23801FA2380000 /* boost_serialization */ = {
			isa = PBXGroup;
			children = (
				1FA2A001FA2A001FA2A00000 /* CMake Rules */,
				21D778021D778021D7780000 /* CMakeLists.txt */,
			);
			name = boost_serialization;
			sourceTree = "<group>";
		};
		1FA2A001FA2A001FA2A00000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		1FA2FC01FA2FC01FA2FC0000 /* boost_serialization-mt-static */ = {
			isa = PBXGroup;
			children = (
				1FA34C01FA34C01FA34C0000 /* Source Files */,
				21D778021D778021D7780000 /* CMakeLists.txt */,
			);
			name = "boost_serialization-mt-static";
			sourceTree = "<group>";
		};
		1FA34C01FA34C01FA34C0000 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				21D81F021D81F021D81F0000 /* basic_archive.cpp */,
				21D8EF021D8EF021D8EF0000 /* basic_iarchive.cpp */,
				21D9AA021D9AA021D9AA0000 /* basic_iserializer.cpp */,
				21DA6B021DA6B021DA6B0000 /* basic_oarchive.cpp */,
				21DB24021DB24021DB240000 /* basic_oserializer.cpp */,
				21DBDF021DBDF021DBDF0000 /* basic_pointer_iserializer.cpp */,
				21DCA3021DCA3021DCA30000 /* basic_pointer_oserializer.cpp */,
				21DD5D021DD5D021DD5D0000 /* basic_serializer_map.cpp */,
				21DE1D021DE1D021DE1D0000 /* basic_text_iprimitive.cpp */,
				21DEDD021DEDD021DEDD0000 /* basic_text_oprimitive.cpp */,
				21DF9C021DF9C021DF9C0000 /* basic_xml_archive.cpp */,
				21E052021E052021E0520000 /* binary_iarchive.cpp */,
				21E10D021E10D021E10D0000 /* binary_oarchive.cpp */,
				21E1C8021E1C8021E1C80000 /* extended_type_info.cpp */,
				21E28A021E28A021E28A0000 /* extended_type_info_typeid.cpp */,
				21E345021E345021E3450000 /* extended_type_info_no_rtti.cpp */,
				21E3F8021E3F8021E3F80000 /* polymorphic_iarchive.cpp */,
				21E4C6021E4C6021E4C60000 /* polymorphic_oarchive.cpp */,
				21E587021E587021E5870000 /* stl_port.cpp */,
				21E63E021E63E021E63E0000 /* text_iarchive.cpp */,
				21E6F6021E6F6021E6F60000 /* text_oarchive.cpp */,
				21E7B1021E7B1021E7B10000 /* void_cast.cpp */,
				21E869021E869021E8690000 /* xml_grammar.cpp */,
				21E921021E921021E9210000 /* xml_iarchive.cpp */,
				21E9D9021E9D9021E9D90000 /* xml_oarchive.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		1FA4D701FA4D701FA4D70000 /* boost_serialization-mt-static-debug */ = {
			isa = PBXGroup;
			children = (
				1FA52201FA52201FA5220000 /* Source Files */,
				21D778021D778021D7780000 /* CMakeLists.txt */,
			);
			name = "boost_serialization-mt-static-debug";
			sourceTree = "<group>";
		};
		1FA52201FA52201FA5220000 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				21D81F021D81F021D81F0000 /* basic_archive.cpp */,
				21D8EF021D8EF021D8EF0000 /* basic_iarchive.cpp */,
				21D9AA021D9AA021D9AA0000 /* basic_iserializer.cpp */,
				21DA6B021DA6B021DA6B0000 /* basic_oarchive.cpp */,
				21DB24021DB24021DB240000 /* basic_oserializer.cpp */,
				21DBDF021DBDF021DBDF0000 /* basic_pointer_iserializer.cpp */,
				21DCA3021DCA3021DCA30000 /* basic_pointer_oserializer.cpp */,
				21DD5D021DD5D021DD5D0000 /* basic_serializer_map.cpp */,
				21DE1D021DE1D021DE1D0000 /* basic_text_iprimitive.cpp */,
				21DEDD021DEDD021DEDD0000 /* basic_text_oprimitive.cpp */,
				21DF9C021DF9C021DF9C0000 /* basic_xml_archive.cpp */,
				21E052021E052021E0520000 /* binary_iarchive.cpp */,
				21E10D021E10D021E10D0000 /* binary_oarchive.cpp */,
				21E1C8021E1C8021E1C80000 /* extended_type_info.cpp */,
				21E28A021E28A021E28A0000 /* extended_type_info_typeid.cpp */,
				21E345021E345021E3450000 /* extended_type_info_no_rtti.cpp */,
				21E3F8021E3F8021E3F80000 /* polymorphic_iarchive.cpp */,
				21E4C6021E4C6021E4C60000 /* polymorphic_oarchive.cpp */,
				21E587021E587021E5870000 /* stl_port.cpp */,
				21E63E021E63E021E63E0000 /* text_iarchive.cpp */,
				21E6F6021E6F6021E6F60000 /* text_oarchive.cpp */,
				21E7B1021E7B1021E7B10000 /* void_cast.cpp */,
				21E869021E869021E8690000 /* xml_grammar.cpp */,
				21E921021E921021E9210000 /* xml_iarchive.cpp */,
				21E9D9021E9D9021E9D90000 /* xml_oarchive.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		1FA5A501FA5A501FA5A50000 /* boost_wserialization */ = {
			isa = PBXGroup;
			children = (
				1FA6F801FA6F801FA6F80000 /* CMake Rules */,
				21D778021D778021D7780000 /* CMakeLists.txt */,
			);
			name = boost_wserialization;
			sourceTree = "<group>";
		};
		1FA6F801FA6F801FA6F80000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		1FA76501FA76501FA7650000 /* boost_wserialization-mt-static */ = {
			isa = PBXGroup;
			children = (
				1FA7B301FA7B301FA7B30000 /* Source Files */,
				21D778021D778021D7780000 /* CMakeLists.txt */,
			);
			name = "boost_wserialization-mt-static";
			sourceTree = "<group>";
		};
		1FA7B301FA7B301FA7B30000 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				2217C402217C402217C40000 /* basic_text_wiprimitive.cpp */,
				2218B502218B502218B50000 /* basic_text_woprimitive.cpp */,
				22197A022197A022197A0000 /* text_wiarchive.cpp */,
				221A300221A300221A300000 /* text_woarchive.cpp */,
				221AE80221AE80221AE80000 /* utf8_codecvt_facet.cpp */,
				221BA50221BA50221BA50000 /* xml_wgrammar.cpp */,
				221C600221C600221C600000 /* xml_wiarchive.cpp */,
				221D1B0221D1B0221D1B0000 /* xml_woarchive.cpp */,
				221DD60221DD60221DD60000 /* codecvt_null.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		1FA87601FA87601FA8760000 /* boost_wserialization-mt-static-debug */ = {
			isa = PBXGroup;
			children = (
				1FA8BB01FA8BB01FA8BB0000 /* Source Files */,
				21D778021D778021D7780000 /* CMakeLists.txt */,
			);
			name = "boost_wserialization-mt-static-debug";
			sourceTree = "<group>";
		};
		1FA8BB01FA8BB01FA8BB0000 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				2217C402217C402217C40000 /* basic_text_wiprimitive.cpp */,
				2218B502218B502218B50000 /* basic_text_woprimitive.cpp */,
				22197A022197A022197A0000 /* text_wiarchive.cpp */,
				221A300221A300221A300000 /* text_woarchive.cpp */,
				221AE80221AE80221AE80000 /* utf8_codecvt_facet.cpp */,
				221BA50221BA50221BA50000 /* xml_wgrammar.cpp */,
				221C600221C600221C600000 /* xml_wiarchive.cpp */,
				221D1B0221D1B0221D1B0000 /* xml_woarchive.cpp */,
				221DD60221DD60221DD60000 /* codecvt_null.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		1FA9AC01FA9AC01FA9AC0000 /* format-modularize */ = {
			isa = PBXGroup;
			children = (
				1FAA0C01FAA0C01FAA0C0000 /* CMake Rules */,
				223F3C0223F3C0223F3C0000 /* CMakeLists.txt */,
			);
			name = "format-modularize";
			sourceTree = "<group>";
		};
		1FAA0C01FAA0C01FAA0C0000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		1FAA8E01FAA8E01FAA8E0000 /* math-modularize */ = {
			isa = PBXGroup;
			children = (
				1FAAEF01FAAEF01FAAEF0000 /* CMake Rules */,
				22474D022474D022474D0000 /* CMakeLists.txt */,
			);
			name = "math-modularize";
			sourceTree = "<group>";
		};
		1FAAEF01FAAEF01FAAEF0000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		1FAB5C01FAB5C01FAB5C0000 /* multi_index-modularize */ = {
			isa = PBXGroup;
			children = (
				1FABC801FABC801FABC80000 /* CMake Rules */,
				224F720224F720224F720000 /* CMakeLists.txt */,
			);
			name = "multi_index-modularize";
			sourceTree = "<group>";
		};
		1FABC801FABC801FABC80000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		1FAC5F01FAC5F01FAC5F0000 /* any-modularize */ = {
			isa = PBXGroup;
			children = (
				1FACAF01FACAF01FACAF0000 /* CMake Rules */,
				22577E022577E022577E0000 /* CMakeLists.txt */,
			);
			name = "any-modularize";
			sourceTree = "<group>";
		};
		1FACAF01FACAF01FACAF0000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		1FAD4201FAD4201FAD420000 /* random-modularize */ = {
			isa = PBXGroup;
			children = (
				1FADA301FADA301FADA30000 /* CMake Rules */,
				225F970225F970225F970000 /* CMakeLists.txt */,
			);
			name = "random-modularize";
			sourceTree = "<group>";
		};
		1FADA301FADA301FADA30000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		1FAE2501FAE2501FAE250000 /* graph-modularize */ = {
			isa = PBXGroup;
			children = (
				1FAE8601FAE8601FAE860000 /* CMake Rules */,
				226727022672702267270000 /* CMakeLists.txt */,
			);
			name = "graph-modularize";
			sourceTree = "<group>";
		};
		1FAE8601FAE8601FAE860000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		1FAED801FAED801FAED80000 /* boost_graph */ = {
			isa = PBXGroup;
			children = (
				1FAF3901FAF3901FAF390000 /* CMake Rules */,
				226F2D0226F2D0226F2D0000 /* CMakeLists.txt */,
			);
			name = boost_graph;
			sourceTree = "<group>";
		};
		1FAF3901FAF3901FAF390000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		1FAF8E01FAF8E01FAF8E0000 /* boost_graph-mt-static */ = {
			isa = PBXGroup;
			children = (
				1F913801F913801F91380000 /* Source Files */,
				226F2D0226F2D0226F2D0000 /* CMakeLists.txt */,
			);
			name = "boost_graph-mt-static";
			sourceTree = "<group>";
		};
		1FB03001FB03001FB0300000 /* boost_graph-mt-static-debug */ = {
			isa = PBXGroup;
			children = (
				1FB06A01FB06A01FB06A0000 /* Source Files */,
				226F2D0226F2D0226F2D0000 /* CMakeLists.txt */,
			);
			name = "boost_graph-mt-static-debug";
			sourceTree = "<group>";
		};
		1FB06A01FB06A01FB06A0000 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				226FC90226FC90226FC90000 /* read_graphviz_spirit.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		1FB0F701FB0F701FB0F70000 /* Python-modularize */ = {
			isa = PBXGroup;
			children = (
				1FB15801FB15801FB1580000 /* CMake Rules */,
				228DBA0228DBA0228DBA0000 /* CMakeLists.txt */,
			);
			name = "Python-modularize";
			sourceTree = "<group>";
		};
		1FB15801FB15801FB1580000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		1FB1AB01FB1AB01FB1AB0000 /* boost_python */ = {
			isa = PBXGroup;
			children = (
				1FB1FD01FB1FD01FB1FD0000 /* CMake Rules */,
				2295BD02295BD02295BD0000 /* CMakeLists.txt */,
			);
			name = boost_python;
			sourceTree = "<group>";
		};
		1FB1FD01FB1FD01FB1FD0000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		1FB26901FB26901FB2690000 /* boost_python-mt-static */ = {
			isa = PBXGroup;
			children = (
				1FB2B401FB2B401FB2B40000 /* Source Files */,
				2295BD02295BD02295BD0000 /* CMakeLists.txt */,
			);
			name = "boost_python-mt-static";
			sourceTree = "<group>";
		};
		1FB2B401FB2B401FB2B40000 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				229659022965902296590000 /* numeric.cpp */,
				229738022973802297380000 /* list.cpp */,
				2297F402297F402297F40000 /* long.cpp */,
				2298B002298B002298B00000 /* dict.cpp */,
				22996C022996C022996C0000 /* tuple.cpp */,
				229A2F0229A2F0229A2F0000 /* str.cpp */,
				229AE70229AE70229AE70000 /* slice.cpp */,
				229BA30229BA30229BA30000 /* from_python.cpp */,
				229C640229C640229C640000 /* registry.cpp */,
				229D260229D260229D260000 /* type_id.cpp */,
				229DDD0229DDD0229DDD0000 /* enum.cpp */,
				229E9A0229E9A0229E9A0000 /* class.cpp */,
				229F5A0229F5A0229F5A0000 /* function.cpp */,
				229F4B0229F4B0229F4B0000 /* inheritance.cpp */,
				22A0D7022A0D7022A0D70000 /* life_support.cpp */,
				22A197022A197022A1970000 /* pickle_support.cpp */,
				22A250022A250022A2500000 /* errors.cpp */,
				22A31A022A31A022A31A0000 /* module.cpp */,
				22A3D3022A3D3022A3D30000 /* builtin_converters.cpp */,
				22A493022A493022A4930000 /* arg_to_python_base.cpp */,
				22A552022A552022A5520000 /* iterator.cpp */,
				22A612022A612022A6120000 /* stl_iterator.cpp */,
				22A603022A603022A6030000 /* object_protocol.cpp */,
				22A78F022A78F022A78F0000 /* object_operators.cpp */,
				22A84C022A84C022A84C0000 /* wrapper.cpp */,
				22A907022A907022A9070000 /* import.cpp */,
				22A9C2022A9C2022A9C20000 /* exec.cpp */,
				22AA80022AA80022AA800000 /* function_doc_signature.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		1FB44A01FB44A01FB44A0000 /* boost_python-mt-static-debug */ = {
			isa = PBXGroup;
			children = (
				1FB49101FB49101FB4910000 /* Source Files */,
				2295BD02295BD02295BD0000 /* CMakeLists.txt */,
			);
			name = "boost_python-mt-static-debug";
			sourceTree = "<group>";
		};
		1FB49101FB49101FB4910000 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				229659022965902296590000 /* numeric.cpp */,
				229738022973802297380000 /* list.cpp */,
				2297F402297F402297F40000 /* long.cpp */,
				2298B002298B002298B00000 /* dict.cpp */,
				22996C022996C022996C0000 /* tuple.cpp */,
				229A2F0229A2F0229A2F0000 /* str.cpp */,
				229AE70229AE70229AE70000 /* slice.cpp */,
				229BA30229BA30229BA30000 /* from_python.cpp */,
				229C640229C640229C640000 /* registry.cpp */,
				229D260229D260229D260000 /* type_id.cpp */,
				229DDD0229DDD0229DDD0000 /* enum.cpp */,
				229E9A0229E9A0229E9A0000 /* class.cpp */,
				229F5A0229F5A0229F5A0000 /* function.cpp */,
				229F4B0229F4B0229F4B0000 /* inheritance.cpp */,
				22A0D7022A0D7022A0D70000 /* life_support.cpp */,
				22A197022A197022A1970000 /* pickle_support.cpp */,
				22A250022A250022A2500000 /* errors.cpp */,
				22A31A022A31A022A31A0000 /* module.cpp */,
				22A3D3022A3D3022A3D30000 /* builtin_converters.cpp */,
				22A493022A493022A4930000 /* arg_to_python_base.cpp */,
				22A552022A552022A5520000 /* iterator.cpp */,
				22A612022A612022A6120000 /* stl_iterator.cpp */,
				22A603022A603022A6030000 /* object_protocol.cpp */,
				22A78F022A78F022A78F0000 /* object_operators.cpp */,
				22A84C022A84C022A84C0000 /* wrapper.cpp */,
				22A907022A907022A9070000 /* import.cpp */,
				22A9C2022A9C2022A9C20000 /* exec.cpp */,
				22AA80022AA80022AA800000 /* function_doc_signature.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		1FB63B01FB63B01FB63B0000 /* parameter-modularize */ = {
			isa = PBXGroup;
			children = (
				1FB6AC01FB6AC01FB6AC0000 /* CMake Rules */,
				22D554022D554022D5540000 /* CMakeLists.txt */,
			);
			name = "parameter-modularize";
			sourceTree = "<group>";
		};
		1FB6AC01FB6AC01FB6AC0000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		1FB73E01FB73E01FB73E0000 /* accumulators-modularize */ = {
			isa = PBXGroup;
			children = (
				1FB7BF01FB7BF01FB7BF0000 /* CMake Rules */,
				22DDE6022DDE6022DDE60000 /* CMakeLists.txt */,
			);
			name = "accumulators-modularize";
			sourceTree = "<group>";
		};
		1FB7BF01FB7BF01FB7BF0000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		1FB80501FB80501FB8050000 /* accumulators-accumulators_example */ = {
			isa = PBXGroup;
			children = (
				1FB85301FB85301FB8530000 /* Source Files */,
				22DF53022DF53022DF530000 /* CMakeLists.txt */,
			);
			name = "accumulators-accumulators_example";
			sourceTree = "<group>";
		};
		1FB85301FB85301FB8530000 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				22DDFE022DDFE022DDFE0000 /* main.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		1FB8DD01FB8DD01FB8DD0000 /* system-modularize */ = {
			isa = PBXGroup;
			children = (
				1FB93E01FB93E01FB93E0000 /* CMake Rules */,
				22F0F1022F0F1022F0F10000 /* CMakeLists.txt */,
			);
			name = "system-modularize";
			sourceTree = "<group>";
		};
		1FB93E01FB93E01FB93E0000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		1FB99101FB99101FB9910000 /* boost_system */ = {
			isa = PBXGroup;
			children = (
				1FB9E301FB9E301FB9E30000 /* CMake Rules */,
				22F8FB022F8FB022F8FB0000 /* CMakeLists.txt */,
			);
			name = boost_system;
			sourceTree = "<group>";
		};
		1FB9E301FB9E301FB9E30000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		1FBA4701FBA4701FBA470000 /* boost_system-mt-static */ = {
			isa = PBXGroup;
			children = (
				1FBA9201FBA9201FBA920000 /* Source Files */,
				22F8FB022F8FB022F8FB0000 /* CMakeLists.txt */,
			);
			name = "boost_system-mt-static";
			sourceTree = "<group>";
		};
		1FBA9201FBA9201FBA920000 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				22F9BE022F9BE022F9BE0000 /* error_code.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		1FBAEA01FBAEA01FBAEA0000 /* boost_system-mt-static-debug */ = {
			isa = PBXGroup;
			children = (
				1FBB3101FBB3101FBB310000 /* Source Files */,
				22F8FB022F8FB022F8FB0000 /* CMakeLists.txt */,
			);
			name = "boost_system-mt-static-debug";
			sourceTree = "<group>";
		};
		1FBB3101FBB3101FBB310000 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				22F9BE022F9BE022F9BE0000 /* error_code.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		1FBBBC01FBBBC01FBBBC0000 /* asio-modularize */ = {
			isa = PBXGroup;
			children = (
				1FBC1D01FBC1D01FBC1D0000 /* CMake Rules */,
				231ACC0231ACC0231ACC0000 /* CMakeLists.txt */,
			);
			name = "asio-modularize";
			sourceTree = "<group>";
		};
		1FBC1D01FBC1D01FBC1D0000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		1FBCAB01FBCAB01FBCAB0000 /* circular_buffer-modularize */ = {
			isa = PBXGroup;
			children = (
				1FBCEA01FBCEA01FBCEA0000 /* CMake Rules */,
				2322E902322E902322E90000 /* CMakeLists.txt */,
			);
			name = "circular_buffer-modularize";
			sourceTree = "<group>";
		};
		1FBCEA01FBCEA01FBCEA0000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		1FBD9A01FBD9A01FBD9A0000 /* ptr_container-modularize */ = {
			isa = PBXGroup;
			children = (
				1FBE0E01FBE0E01FBE0E0000 /* CMake Rules */,
				232B0A0232B0A0232B0A0000 /* CMakeLists.txt */,
			);
			name = "ptr_container-modularize";
			sourceTree = "<group>";
		};
		1FBE0E01FBE0E01FBE0E0000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		1FBE8401FBE8401FBE840000 /* assign-modularize */ = {
			isa = PBXGroup;
			children = (
				1FBEE501FBEE501FBEE50000 /* CMake Rules */,
				233319023331902333190000 /* CMakeLists.txt */,
			);
			name = "assign-modularize";
			sourceTree = "<group>";
		};
		1FBEE501FBEE501FBEE50000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		1FBF6701FBF6701FBF670000 /* bimap-modularize */ = {
			isa = PBXGroup;
			children = (
				1FBFC801FBFC801FBFC80000 /* CMake Rules */,
				233B550233B550233B550000 /* CMakeLists.txt */,
			);
			name = "bimap-modularize";
			sourceTree = "<group>";
		};
		1FBFC801FBFC801FBFC80000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		1FC04401FC04401FC0440000 /* compatibility-modularize */ = {
			isa = PBXGroup;
			children = (
				1FC0C501FC0C501FC0C50000 /* CMake Rules */,
				23437B023437B023437B0000 /* CMakeLists.txt */,
			);
			name = "compatibility-modularize";
			sourceTree = "<group>";
		};
		1FC0C501FC0C501FC0C50000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		1FC16901FC16901FC1690000 /* crc-modularize */ = {
			isa = PBXGroup;
			children = (
				1FC1B901FC1B901FC1B90000 /* CMake Rules */,
				234B9B0234B9B0234B9B0000 /* CMakeLists.txt */,
			);
			name = "crc-modularize";
			sourceTree = "<group>";
		};
		1FC1B901FC1B901FC1B90000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		1FC24B01FC24B01FC24B0000 /* timer-modularize */ = {
			isa = PBXGroup;
			children = (
				1FC2AC01FC2AC01FC2AC0000 /* CMake Rules */,
				2353FB02353FB02353FB0000 /* CMakeLists.txt */,
			);
			name = "timer-modularize";
			sourceTree = "<group>";
		};
		1FC2AC01FC2AC01FC2AC0000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		1FC32D01FC32D01FC32D0000 /* test-modularize */ = {
			isa = PBXGroup;
			children = (
				1FC38E01FC38E01FC38E0000 /* CMake Rules */,
				235BBD0235BBD0235BBD0000 /* CMakeLists.txt */,
			);
			name = "test-modularize";
			sourceTree = "<group>";
		};
		1FC38E01FC38E01FC38E0000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		1FC3E001FC3E001FC3E00000 /* boost_prg_exec_monitor */ = {
			isa = PBXGroup;
			children = (
				1FC43601FC43601FC4360000 /* CMake Rules */,
				236464023646402364640000 /* CMakeLists.txt */,
			);
			name = boost_prg_exec_monitor;
			sourceTree = "<group>";
		};
		1FC43601FC43601FC4360000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		1FC49E01FC49E01FC49E0000 /* boost_prg_exec_monitor-mt-static */ = {
			isa = PBXGroup;
			children = (
				1FC4EE01FC4EE01FC4EE0000 /* Source Files */,
				236464023646402364640000 /* CMakeLists.txt */,
			);
			name = "boost_prg_exec_monitor-mt-static";
			sourceTree = "<group>";
		};
		1FC4EE01FC4EE01FC4EE0000 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				23635D023635D023635D0000 /* execution_monitor.cpp */,
				23659E023659E023659E0000 /* cpp_main.cpp */,
				236654023665402366540000 /* debug.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		1FC55F01FC55F01FC55F0000 /* boost_prg_exec_monitor-mt-static-debug */ = {
			isa = PBXGroup;
			children = (
				1FC5AC01FC5AC01FC5AC0000 /* Source Files */,
				236464023646402364640000 /* CMakeLists.txt */,
			);
			name = "boost_prg_exec_monitor-mt-static-debug";
			sourceTree = "<group>";
		};
		1FC5AC01FC5AC01FC5AC0000 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				23635D023635D023635D0000 /* execution_monitor.cpp */,
				23659E023659E023659E0000 /* cpp_main.cpp */,
				236654023665402366540000 /* debug.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		1FC62601FC62601FC6260000 /* boost_test_exec_monitor */ = {
			isa = PBXGroup;
			children = (
				1FC67501FC67501FC6750000 /* CMake Rules */,
				236464023646402364640000 /* CMakeLists.txt */,
			);
			name = boost_test_exec_monitor;
			sourceTree = "<group>";
		};
		1FC67501FC67501FC6750000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		1FC6E001FC6E001FC6E00000 /* boost_test_exec_monitor-mt-static */ = {
			isa = PBXGroup;
			children = (
				1FC72E01FC72E01FC72E0000 /* Source Files */,
				236464023646402364640000 /* CMakeLists.txt */,
			);
			name = "boost_test_exec_monitor-mt-static";
			sourceTree = "<group>";
		};
		1FC72E01FC72E01FC72E0000 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				2383B602383B602383B60000 /* compiler_log_formatter.cpp */,
				236654023665402366540000 /* debug.cpp */,
				23635D023635D023635D0000 /* execution_monitor.cpp */,
				2386FF02386FF02386FF0000 /* framework.cpp */,
				2387B502387B502387B50000 /* plain_report_formatter.cpp */,
				23886E023886E023886E0000 /* progress_monitor.cpp */,
				23892D023892D023892D0000 /* results_collector.cpp */,
				2389EA02389EA02389EA0000 /* results_reporter.cpp */,
				238AA60238AA60238AA60000 /* test_main.cpp */,
				238B5F0238B5F0238B5F0000 /* test_tools.cpp */,
				238C190238C190238C190000 /* unit_test_log.cpp */,
				238CD20238CD20238CD20000 /* unit_test_main.cpp */,
				238D8D0238D8D0238D8D0000 /* unit_test_monitor.cpp */,
				238E490238E490238E490000 /* unit_test_parameters.cpp */,
				238EFE0238EFE0238EFE0000 /* unit_test_suite.cpp */,
				238FBB0238FBB0238FBB0000 /* xml_log_formatter.cpp */,
				239077023907702390770000 /* xml_report_formatter.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		1FC85201FC85201FC8520000 /* boost_test_exec_monitor-mt-static-debug */ = {
			isa = PBXGroup;
			children = (
				1FC89E01FC89E01FC89E0000 /* Source Files */,
				236464023646402364640000 /* CMakeLists.txt */,
			);
			name = "boost_test_exec_monitor-mt-static-debug";
			sourceTree = "<group>";
		};
		1FC89E01FC89E01FC89E0000 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				2383B602383B602383B60000 /* compiler_log_formatter.cpp */,
				236654023665402366540000 /* debug.cpp */,
				23635D023635D023635D0000 /* execution_monitor.cpp */,
				2386FF02386FF02386FF0000 /* framework.cpp */,
				2387B502387B502387B50000 /* plain_report_formatter.cpp */,
				23886E023886E023886E0000 /* progress_monitor.cpp */,
				23892D023892D023892D0000 /* results_collector.cpp */,
				2389EA02389EA02389EA0000 /* results_reporter.cpp */,
				238AA60238AA60238AA60000 /* test_main.cpp */,
				238B5F0238B5F0238B5F0000 /* test_tools.cpp */,
				238C190238C190238C190000 /* unit_test_log.cpp */,
				238CD20238CD20238CD20000 /* unit_test_main.cpp */,
				238D8D0238D8D0238D8D0000 /* unit_test_monitor.cpp */,
				238E490238E490238E490000 /* unit_test_parameters.cpp */,
				238EFE0238EFE0238EFE0000 /* unit_test_suite.cpp */,
				238FBB0238FBB0238FBB0000 /* xml_log_formatter.cpp */,
				239077023907702390770000 /* xml_report_formatter.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		1FC8EA01FC8EA01FC8EA0000 /* boost_unit_test_framework */ = {
			isa = PBXGroup;
			children = (
				1FCA1B01FCA1B01FCA1B0000 /* CMake Rules */,
				236464023646402364640000 /* CMakeLists.txt */,
			);
			name = boost_unit_test_framework;
			sourceTree = "<group>";
		};
		1FCA1B01FCA1B01FCA1B0000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		1FCA8A01FCA8A01FCA8A0000 /* boost_unit_test_framework-mt-static */ = {
			isa = PBXGroup;
			children = (
				1FCAD901FCAD901FCAD90000 /* Source Files */,
				236464023646402364640000 /* CMakeLists.txt */,
			);
			name = "boost_unit_test_framework-mt-static";
			sourceTree = "<group>";
		};
		1FCAD901FCAD901FCAD90000 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				2383B602383B602383B60000 /* compiler_log_formatter.cpp */,
				236654023665402366540000 /* debug.cpp */,
				23B78A023B78A023B78A0000 /* exception_safety.cpp */,
				23635D023635D023635D0000 /* execution_monitor.cpp */,
				2386FF02386FF02386FF0000 /* framework.cpp */,
				23B957023B957023B9570000 /* interaction_based.cpp */,
				23BA13023BA13023BA130000 /* logged_expectations.cpp */,
				2387B502387B502387B50000 /* plain_report_formatter.cpp */,
				23886E023886E023886E0000 /* progress_monitor.cpp */,
				23892D023892D023892D0000 /* results_collector.cpp */,
				2389EA02389EA02389EA0000 /* results_reporter.cpp */,
				238B5F0238B5F0238B5F0000 /* test_tools.cpp */,
				238C190238C190238C190000 /* unit_test_log.cpp */,
				238CD20238CD20238CD20000 /* unit_test_main.cpp */,
				238D8D0238D8D0238D8D0000 /* unit_test_monitor.cpp */,
				238E490238E490238E490000 /* unit_test_parameters.cpp */,
				238EFE0238EFE0238EFE0000 /* unit_test_suite.cpp */,
				238FBB0238FBB0238FBB0000 /* xml_log_formatter.cpp */,
				239077023907702390770000 /* xml_report_formatter.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		1FCC1101FCC1101FCC110000 /* boost_unit_test_framework-mt-static-debug */ = {
			isa = PBXGroup;
			children = (
				1FCC5A01FCC5A01FCC5A0000 /* Source Files */,
				236464023646402364640000 /* CMakeLists.txt */,
			);
			name = "boost_unit_test_framework-mt-static-debug";
			sourceTree = "<group>";
		};
		1FCC5A01FCC5A01FCC5A0000 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				2383B602383B602383B60000 /* compiler_log_formatter.cpp */,
				236654023665402366540000 /* debug.cpp */,
				23B78A023B78A023B78A0000 /* exception_safety.cpp */,
				23635D023635D023635D0000 /* execution_monitor.cpp */,
				2386FF02386FF02386FF0000 /* framework.cpp */,
				23B957023B957023B9570000 /* interaction_based.cpp */,
				23BA13023BA13023BA130000 /* logged_expectations.cpp */,
				2387B502387B502387B50000 /* plain_report_formatter.cpp */,
				23886E023886E023886E0000 /* progress_monitor.cpp */,
				23892D023892D023892D0000 /* results_collector.cpp */,
				2389EA02389EA02389EA0000 /* results_reporter.cpp */,
				238B5F0238B5F0238B5F0000 /* test_tools.cpp */,
				238C190238C190238C190000 /* unit_test_log.cpp */,
				238CD20238CD20238CD20000 /* unit_test_main.cpp */,
				238D8D0238D8D0238D8D0000 /* unit_test_monitor.cpp */,
				238E490238E490238E490000 /* unit_test_parameters.cpp */,
				238EFE0238EFE0238EFE0000 /* unit_test_suite.cpp */,
				238FBB0238FBB0238FBB0000 /* xml_log_formatter.cpp */,
				239077023907702390770000 /* xml_report_formatter.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		1FCE1401FCE1401FCE140000 /* dynamic_bitset-modularize */ = {
			isa = PBXGroup;
			children = (
				1FCE8A01FCE8A01FCE8A0000 /* CMake Rules */,
				23E6F5023E6F5023E6F50000 /* CMakeLists.txt */,
			);
			name = "dynamic_bitset-modularize";
			sourceTree = "<group>";
		};
		1FCE8A01FCE8A01FCE8A0000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		1FCEEB01FCEEB01FCEEB0000 /* filesystem-modularize */ = {
			isa = PBXGroup;
			children = (
				1FCF5701FCF5701FCF570000 /* CMake Rules */,
				23EF0C023EF0C023EF0C0000 /* CMakeLists.txt */,
			);
			name = "filesystem-modularize";
			sourceTree = "<group>";
		};
		1FCF5701FCF5701FCF570000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		1FCFBF01FCFBF01FCFBF0000 /* boost_filesystem */ = {
			isa = PBXGroup;
			children = (
				1FD02601FD02601FD0260000 /* CMake Rules */,
				23F71E023F71E023F71E0000 /* CMakeLists.txt */,
			);
			name = boost_filesystem;
			sourceTree = "<group>";
		};
		1FD02601FD02601FD0260000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		1FD07D01FD07D01FD07D0000 /* boost_filesystem-mt-static */ = {
			isa = PBXGroup;
			children = (
				1FD0CA01FD0CA01FD0CA0000 /* Source Files */,
				23F71E023F71E023F71E0000 /* CMakeLists.txt */,
			);
			name = "boost_filesystem-mt-static";
			sourceTree = "<group>";
		};
		1FD0CA01FD0CA01FD0CA0000 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				23F743023F743023F7430000 /* operations.cpp */,
				23F89B023F89B023F89B0000 /* path.cpp */,
				23F959023F959023F9590000 /* portability.cpp */,
				23FA11023FA11023FA110000 /* utf8_codecvt_facet.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		1FD12301FD12301FD1230000 /* boost_filesystem-mt-static-debug */ = {
			isa = PBXGroup;
			children = (
				1FD19301FD19301FD1930000 /* Source Files */,
				23F71E023F71E023F71E0000 /* CMakeLists.txt */,
			);
			name = "boost_filesystem-mt-static-debug";
			sourceTree = "<group>";
		};
		1FD19301FD19301FD1930000 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				23F743023F743023F7430000 /* operations.cpp */,
				23F89B023F89B023F89B0000 /* path.cpp */,
				23F959023F959023F9590000 /* portability.cpp */,
				23FA11023FA11023FA110000 /* utf8_codecvt_facet.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		1FD23A01FD23A01FD23A0000 /* interprocess-modularize */ = {
			isa = PBXGroup;
			children = (
				1FD2B601FD2B601FD2B60000 /* CMake Rules */,
				241CF40241CF40241CF40000 /* CMakeLists.txt */,
			);
			name = "interprocess-modularize";
			sourceTree = "<group>";
		};
		1FD2B601FD2B601FD2B60000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		1FD31701FD31701FD3170000 /* flyweight-modularize */ = {
			isa = PBXGroup;
			children = (
				1FD38201FD38201FD3820000 /* CMake Rules */,
				242513024251302425130000 /* CMakeLists.txt */,
			);
			name = "flyweight-modularize";
			sourceTree = "<group>";
		};
		1FD38201FD38201FD3820000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		1FD41901FD41901FD4190000 /* gil-modularize */ = {
			isa = PBXGroup;
			children = (
				1FD46901FD46901FD4690000 /* CMake Rules */,
				242D200242D200242D200000 /* CMakeLists.txt */,
			);
			name = "gil-modularize";
			sourceTree = "<group>";
		};
		1FD46901FD46901FD4690000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		1FD4FB01FD4FB01FD4FB0000 /* mpi-modularize */ = {
			isa = PBXGroup;
			children = (
				1FD54B01FD54B01FD54B0000 /* CMake Rules */,
				243530024353002435300000 /* CMakeLists.txt */,
			);
			name = "mpi-modularize";
			sourceTree = "<group>";
		};
		1FD54B01FD54B01FD54B0000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		1FD5AE01FD5AE01FD5AE0000 /* boost_mpi */ = {
			isa = PBXGroup;
			children = (
				1FD60E01FD60E01FD60E0000 /* CMake Rules */,
				243D460243D460243D460000 /* CMakeLists.txt */,
			);
			name = boost_mpi;
			sourceTree = "<group>";
		};
		1FD60E01FD60E01FD60E0000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		1FD66C01FD66C01FD66C0000 /* boost_mpi-mt-static */ = {
			isa = PBXGroup;
			children = (
				1FD6B401FD6B401FD6B40000 /* Source Files */,
				243D460243D460243D460000 /* CMakeLists.txt */,
			);
			name = "boost_mpi-mt-static";
			sourceTree = "<group>";
		};
		1FD6B401FD6B401FD6B40000 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				243DE10243DE10243DE10000 /* broadcast.cpp */,
				243EBA0243EBA0243EBA0000 /* communicator.cpp */,
				243F760243F760243F760000 /* computation_tree.cpp */,
				244034024403402440340000 /* content_oarchive.cpp */,
				2440ED02440ED02440ED0000 /* environment.cpp */,
				2441AA02441AA02441AA0000 /* exception.cpp */,
				244264024426402442640000 /* graph_communicator.cpp */,
				24431D024431D024431D0000 /* group.cpp */,
				2443D702443D702443D70000 /* intercommunicator.cpp */,
				244496024449602444960000 /* mpi_datatype_cache.cpp */,
				244556024455602445560000 /* mpi_datatype_oarchive.cpp */,
				24460E024460E024460E0000 /* packed_iarchive.cpp */,
				2446C802446C802446C80000 /* packed_oarchive.cpp */,
				244782024478202447820000 /* packed_skeleton_iarchive.cpp */,
				244840024484002448400000 /* packed_skeleton_oarchive.cpp */,
				2448F902448F902448F90000 /* point_to_point.cpp */,
				2449B002449B002449B00000 /* request.cpp */,
				244A6F0244A6F0244A6F0000 /* text_skeleton_oarchive.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		1FD7C601FD7C601FD7C60000 /* boost_mpi-mt-static-debug */ = {
			isa = PBXGroup;
			children = (
				1FD81001FD81001FD8100000 /* Source Files */,
				243D460243D460243D460000 /* CMakeLists.txt */,
			);
			name = "boost_mpi-mt-static-debug";
			sourceTree = "<group>";
		};
		1FD81001FD81001FD8100000 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				243DE10243DE10243DE10000 /* broadcast.cpp */,
				243EBA0243EBA0243EBA0000 /* communicator.cpp */,
				243F760243F760243F760000 /* computation_tree.cpp */,
				244034024403402440340000 /* content_oarchive.cpp */,
				2440ED02440ED02440ED0000 /* environment.cpp */,
				2441AA02441AA02441AA0000 /* exception.cpp */,
				244264024426402442640000 /* graph_communicator.cpp */,
				24431D024431D024431D0000 /* group.cpp */,
				2443D702443D702443D70000 /* intercommunicator.cpp */,
				244496024449602444960000 /* mpi_datatype_cache.cpp */,
				244556024455602445560000 /* mpi_datatype_oarchive.cpp */,
				24460E024460E024460E0000 /* packed_iarchive.cpp */,
				2446C802446C802446C80000 /* packed_oarchive.cpp */,
				244782024478202447820000 /* packed_skeleton_iarchive.cpp */,
				244840024484002448400000 /* packed_skeleton_oarchive.cpp */,
				2448F902448F902448F90000 /* point_to_point.cpp */,
				2449B002449B002449B00000 /* request.cpp */,
				244A6F0244A6F0244A6F0000 /* text_skeleton_oarchive.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		1FD95701FD95701FD9570000 /* boost_graph_parallel */ = {
			isa = PBXGroup;
			children = (
				1FD9A601FD9A601FD9A60000 /* CMake Rules */,
				247006024700602470060000 /* CMakeLists.txt */,
			);
			name = boost_graph_parallel;
			sourceTree = "<group>";
		};
		1FD9A601FD9A601FD9A60000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		1FDA1101FDA1101FDA110000 /* boost_graph_parallel-mt-static */ = {
			isa = PBXGroup;
			children = (
				1FDA5C01FDA5C01FDA5C0000 /* Source Files */,
				247006024700602470060000 /* CMakeLists.txt */,
			);
			name = "boost_graph_parallel-mt-static";
			sourceTree = "<group>";
		};
		1FDA5C01FDA5C01FDA5C0000 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				24701E024701E024701E0000 /* mpi_process_group.cpp */,
				2471FB02471FB02471FB0000 /* tag_allocator.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		1FDAA601FDAA601FDAA60000 /* boost_graph_parallel-mt-static-debug */ = {
			isa = PBXGroup;
			children = (
				1FDB0C01FDB0C01FDB0C0000 /* Source Files */,
				247006024700602470060000 /* CMakeLists.txt */,
			);
			name = "boost_graph_parallel-mt-static-debug";
			sourceTree = "<group>";
		};
		1FDB0C01FDB0C01FDB0C0000 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				24701E024701E024701E0000 /* mpi_process_group.cpp */,
				2471FB02471FB02471FB0000 /* tag_allocator.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		1FDB8B01FDB8B01FDB8B0000 /* iostreams-modularize */ = {
			isa = PBXGroup;
			children = (
				1FDBFC01FDBFC01FDBFC0000 /* CMake Rules */,
				248FD60248FD60248FD60000 /* CMakeLists.txt */,
			);
			name = "iostreams-modularize";
			sourceTree = "<group>";
		};
		1FDBFC01FDBFC01FDBFC0000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		1FDC6401FDC6401FDC640000 /* boost_iostreams */ = {
			isa = PBXGroup;
			children = (
				1FDCCA01FDCCA01FDCCA0000 /* CMake Rules */,
				2497E402497E402497E40000 /* CMakeLists.txt */,
			);
			name = boost_iostreams;
			sourceTree = "<group>";
		};
		1FDCCA01FDCCA01FDCCA0000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		1FDD2001FDD2001FDD200000 /* boost_iostreams-mt-static */ = {
			isa = PBXGroup;
			children = (
				1FDD6C01FDD6C01FDD6C0000 /* Source Files */,
				2497E402497E402497E40000 /* CMakeLists.txt */,
			);
			name = "boost_iostreams-mt-static";
			sourceTree = "<group>";
		};
		1FDD6C01FDD6C01FDD6C0000 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				249809024980902498090000 /* file_descriptor.cpp */,
				24995A024995A024995A0000 /* mapped_file.cpp */,
				249A190249A190249A190000 /* zlib.cpp */,
				249AD40249AD40249AD40000 /* bzip2.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		1FDDDA01FDDDA01FDDDA0000 /* boost_iostreams-mt-static-debug */ = {
			isa = PBXGroup;
			children = (
				1FDE3201FDE3201FDE320000 /* Source Files */,
				2497E402497E402497E40000 /* CMakeLists.txt */,
			);
			name = "boost_iostreams-mt-static-debug";
			sourceTree = "<group>";
		};
		1FDE3201FDE3201FDE320000 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				249809024980902498090000 /* file_descriptor.cpp */,
				24995A024995A024995A0000 /* mapped_file.cpp */,
				249A190249A190249A190000 /* zlib.cpp */,
				249AD40249AD40249AD40000 /* bzip2.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		1FDEDB01FDEDB01FDEDB0000 /* lambda-modularize */ = {
			isa = PBXGroup;
			children = (
				1FDF3C01FDF3C01FDF3C0000 /* CMake Rules */,
				24B994024B994024B9940000 /* CMakeLists.txt */,
			);
			name = "lambda-modularize";
			sourceTree = "<group>";
		};
		1FDF3C01FDF3C01FDF3C0000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		1FDFAA01FDFAA01FDFAA0000 /* multi_array-modularize */ = {
			isa = PBXGroup;
			children = (
				1FE01601FE01601FE0160000 /* CMake Rules */,
				24C1BA024C1BA024C1BA0000 /* CMakeLists.txt */,
			);
			name = "multi_array-modularize";
			sourceTree = "<group>";
		};
		1FE01601FE01601FE0160000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		1FE0BA01FE0BA01FE0BA0000 /* program_options-modularize */ = {
			isa = PBXGroup;
			children = (
				1FE0F901FE0F901FE0F90000 /* CMake Rules */,
				24C9A6024C9A6024C9A60000 /* CMakeLists.txt */,
			);
			name = "program_options-modularize";
			sourceTree = "<group>";
		};
		1FE0F901FE0F901FE0F90000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		1FE17801FE17801FE1780000 /* boost_program_options */ = {
			isa = PBXGroup;
			children = (
				1FE1CA01FE1CA01FE1CA0000 /* CMake Rules */,
				24D1C8024D1C8024D1C80000 /* CMakeLists.txt */,
			);
			name = boost_program_options;
			sourceTree = "<group>";
		};
		1FE1CA01FE1CA01FE1CA0000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		1FE23501FE23501FE2350000 /* boost_program_options-mt-static */ = {
			isa = PBXGroup;
			children = (
				1FE28101FE28101FE2810000 /* Source Files */,
				24D1C8024D1C8024D1C80000 /* CMakeLists.txt */,
			);
			name = "boost_program_options-mt-static";
			sourceTree = "<group>";
		};
		1FE28101FE28101FE2810000 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				24CDD7024CDD7024CDD70000 /* cmdline.cpp */,
				24D366024D366024D3660000 /* config_file.cpp */,
				24D41F024D41F024D41F0000 /* options_description.cpp */,
				24D4E4024D4E4024D4E40000 /* parsers.cpp */,
				24D59D024D59D024D59D0000 /* variables_map.cpp */,
				24D65A024D65A024D65A0000 /* value_semantic.cpp */,
				24D712024D712024D7120000 /* positional_options.cpp */,
				24D7D0024D7D0024D7D00000 /* utf8_codecvt_facet.cpp */,
				24D886024D886024D8860000 /* convert.cpp */,
				24D944024D944024D9440000 /* winmain.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		1FE35001FE35001FE3500000 /* boost_program_options-mt-static-debug */ = {
			isa = PBXGroup;
			children = (
				1FE39A01FE39A01FE39A0000 /* Source Files */,
				24D1C8024D1C8024D1C80000 /* CMakeLists.txt */,
			);
			name = "boost_program_options-mt-static-debug";
			sourceTree = "<group>";
		};
		1FE39A01FE39A01FE39A0000 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				24CDD7024CDD7024CDD70000 /* cmdline.cpp */,
				24D366024D366024D3660000 /* config_file.cpp */,
				24D41F024D41F024D41F0000 /* options_description.cpp */,
				24D4E4024D4E4024D4E40000 /* parsers.cpp */,
				24D59D024D59D024D59D0000 /* variables_map.cpp */,
				24D65A024D65A024D65A0000 /* value_semantic.cpp */,
				24D712024D712024D7120000 /* positional_options.cpp */,
				24D7D0024D7D0024D7D00000 /* utf8_codecvt_facet.cpp */,
				24D886024D886024D8860000 /* convert.cpp */,
				24D944024D944024D9440000 /* winmain.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		1FE4A001FE4A001FE4A00000 /* rational-modularize */ = {
			isa = PBXGroup;
			children = (
				1FE50C01FE50C01FE50C0000 /* CMake Rules */,
				24FB2E024FB2E024FB2E0000 /* CMakeLists.txt */,
			);
			name = "rational-modularize";
			sourceTree = "<group>";
		};
		1FE50C01FE50C01FE50C0000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		1FE57101FE57101FE5710000 /* signals-modularize */ = {
			isa = PBXGroup;
			children = (
				1FE5EA01FE5EA01FE5EA0000 /* CMake Rules */,
				250738025073802507380000 /* CMakeLists.txt */,
			);
			name = "signals-modularize";
			sourceTree = "<group>";
		};
		1FE5EA01FE5EA01FE5EA0000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		1FE64501FE64501FE6450000 /* boost_signals */ = {
			isa = PBXGroup;
			children = (
				1FE69501FE69501FE6950000 /* CMake Rules */,
				250F530250F530250F530000 /* CMakeLists.txt */,
			);
			name = boost_signals;
			sourceTree = "<group>";
		};
		1FE69501FE69501FE6950000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		1FE6F901FE6F901FE6F90000 /* boost_signals-mt-static */ = {
			isa = PBXGroup;
			children = (
				1FE74701FE74701FE7470000 /* Source Files */,
				250F530250F530250F530000 /* CMakeLists.txt */,
			);
			name = "boost_signals-mt-static";
			sourceTree = "<group>";
		};
		1FE74701FE74701FE7470000 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				250F710250F710250F710000 /* trackable.cpp */,
				2510BF02510BF02510BF0000 /* connection.cpp */,
				25117B025117B025117B0000 /* named_slot_map.cpp */,
				251235025123502512350000 /* signal_base.cpp */,
				2512EE02512EE02512EE0000 /* slot.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		1FE7CB01FE7CB01FE7CB0000 /* boost_signals-mt-static-debug */ = {
			isa = PBXGroup;
			children = (
				1FE81201FE81201FE8120000 /* Source Files */,
				250F530250F530250F530000 /* CMakeLists.txt */,
			);
			name = "boost_signals-mt-static-debug";
			sourceTree = "<group>";
		};
		1FE81201FE81201FE8120000 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				250F710250F710250F710000 /* trackable.cpp */,
				2510BF02510BF02510BF0000 /* connection.cpp */,
				25117B025117B025117B0000 /* named_slot_map.cpp */,
				251235025123502512350000 /* signal_base.cpp */,
				2512EE02512EE02512EE0000 /* slot.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		1FE8CC01FE8CC01FE8CC0000 /* signals2-modularize */ = {
			isa = PBXGroup;
			children = (
				1FE92C01FE92C01FE92C0000 /* CMake Rules */,
				253232025323202532320000 /* CMakeLists.txt */,
			);
			name = "signals2-modularize";
			sourceTree = "<group>";
		};
		1FE92C01FE92C01FE92C0000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		1FE99B01FE99B01FE99B0000 /* statechart-modularize */ = {
			isa = PBXGroup;
			children = (
				1FEA0701FEA0701FEA070000 /* CMake Rules */,
				253A0B0253A0B0253A0B0000 /* CMakeLists.txt */,
			);
			name = "statechart-modularize";
			sourceTree = "<group>";
		};
		1FEA0701FEA0701FEA070000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		1FEA9E01FEA9E01FEA9E0000 /* tr1-modularize */ = {
			isa = PBXGroup;
			children = (
				1FEAEE01FEAEE01FEAEE0000 /* CMake Rules */,
				25425A025425A025425A0000 /* CMakeLists.txt */,
			);
			name = "tr1-modularize";
			sourceTree = "<group>";
		};
		1FEAEE01FEAEE01FEAEE0000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		1FEB8001FEB8001FEB800000 /* units-modularize */ = {
			isa = PBXGroup;
			children = (
				1FEBE101FEBE101FEBE10000 /* CMake Rules */,
				254A120254A120254A120000 /* CMakeLists.txt */,
			);
			name = "units-modularize";
			sourceTree = "<group>";
		};
		1FEBE101FEBE101FEBE10000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		1FEC6201FEC6201FEC620000 /* wave-modularize */ = {
			isa = PBXGroup;
			children = (
				1FECC301FECC301FECC30000 /* CMake Rules */,
				25527F025527F025527F0000 /* CMakeLists.txt */,
			);
			name = "wave-modularize";
			sourceTree = "<group>";
		};
		1FECC301FECC301FECC30000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		1FED1501FED1501FED150000 /* boost_wave */ = {
			isa = PBXGroup;
			children = (
				1FED7501FED7501FED750000 /* CMake Rules */,
				255A920255A920255A920000 /* CMakeLists.txt */,
			);
			name = boost_wave;
			sourceTree = "<group>";
		};
		1FED7501FED7501FED750000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		1FEDCE01FEDCE01FEDCE0000 /* boost_wave-mt-static */ = {
			isa = PBXGroup;
			children = (
				1FEE1A01FEE1A01FEE1A0000 /* Source Files */,
				255A920255A920255A920000 /* CMakeLists.txt */,
			);
			name = "boost_wave-mt-static";
			sourceTree = "<group>";
		};
		1FEE1A01FEE1A01FEE1A0000 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				255B2E0255B2E0255B2E0000 /* instantiate_cpp_exprgrammar.cpp */,
				255C0C0255C0C0255C0C0000 /* instantiate_cpp_grammar.cpp */,
				255CCB0255CCB0255CCB0000 /* instantiate_cpp_literalgrs.cpp */,
				255D870255D870255D870000 /* instantiate_defined_grammar.cpp */,
				255E430255E430255E430000 /* instantiate_predef_macros.cpp */,
				255F040255F040255F040000 /* instantiate_re2c_lexer.cpp */,
				255FBE0255FBE0255FBE0000 /* instantiate_re2c_lexer_str.cpp */,
				256075025607502560750000 /* token_ids.cpp */,
				256130025613002561300000 /* wave_config_constant.cpp */,
				2561EC02561EC02561EC0000 /* aq.cpp */,
				2562A602562A602562A60000 /* cpp_re.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		1FEEE601FEEE601FEEE60000 /* boost_wave-mt-static-debug */ = {
			isa = PBXGroup;
			children = (
				1FEF3201FEF3201FEF320000 /* Source Files */,
				255A920255A920255A920000 /* CMakeLists.txt */,
			);
			name = "boost_wave-mt-static-debug";
			sourceTree = "<group>";
		};
		1FEF3201FEF3201FEF320000 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				255B2E0255B2E0255B2E0000 /* instantiate_cpp_exprgrammar.cpp */,
				255C0C0255C0C0255C0C0000 /* instantiate_cpp_grammar.cpp */,
				255CCB0255CCB0255CCB0000 /* instantiate_cpp_literalgrs.cpp */,
				255D870255D870255D870000 /* instantiate_defined_grammar.cpp */,
				255E430255E430255E430000 /* instantiate_predef_macros.cpp */,
				255F040255F040255F040000 /* instantiate_re2c_lexer.cpp */,
				255FBE0255FBE0255FBE0000 /* instantiate_re2c_lexer_str.cpp */,
				256075025607502560750000 /* token_ids.cpp */,
				256130025613002561300000 /* wave_config_constant.cpp */,
				2561EC02561EC02561EC0000 /* aq.cpp */,
				2562A602562A602562A60000 /* cpp_re.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		1FF03501FF03501FF0350000 /* bcp */ = {
			isa = PBXGroup;
			children = (
				1FF07401FF07401FF0740000 /* Source Files */,
				25858E025858E025858E0000 /* CMakeLists.txt */,
			);
			name = bcp;
			sourceTree = "<group>";
		};
		1FF07401FF07401FF0740000 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				257DAE0257DAE0257DAE0000 /* add_path.cpp */,
				257E5B0257E5B0257E5B0000 /* bcp_imp.cpp */,
				257F120257F120257F120000 /* copy_path.cpp */,
				257FC90257FC90257FC90000 /* file_types.cpp */,
				258080025808002580800000 /* fileview.cpp */,
				25813A025813A025813A0000 /* main.cpp */,
				2581F402581F402581F40000 /* path_operations.cpp */,
				2582AC02582AC02582AC0000 /* scan_cvs_path.cpp */,
				258363025836302583630000 /* licence_info.cpp */,
				258420025842002584200000 /* scan_licence.cpp */,
				2584D302584D302584D30000 /* output_licence_info.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		1FF15A01FF15A01FF15A0000 /* inspect */ = {
			isa = PBXGroup;
			children = (
				1FF19A01FF19A01FF19A0000 /* Source Files */,
				25979C025979C025979C0000 /* CMakeLists.txt */,
			);
			name = inspect;
			sourceTree = "<group>";
		};
		1FF19A01FF19A01FF19A0000 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				258F3E0258F3E0258F3E0000 /* inspect.cpp */,
				25905F025905F025905F0000 /* license_check.cpp */,
				259117025911702591170000 /* link_check.cpp */,
				2591D002591D002591D00000 /* path_name_check.cpp */,
				259286025928602592860000 /* tab_check.cpp */,
				259343025934302593430000 /* crlf_check.cpp */,
				2593FE02593FE02593FE0000 /* end_check.cpp */,
				2594B702594B702594B70000 /* unnamed_namespace_check.cpp */,
				259574025957402595740000 /* ascii_check.cpp */,
				25962F025962F025962F0000 /* copyright_check.cpp */,
				2596E402596E402596E40000 /* minmax_check.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
/* End PBXGroup section */

/* Begin PBXNativeTarget section */
		21098F021098F021098F0000 /* libboost_date_time-mt.a */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 2109E602109E602109E60000 /* Build configuration list for PBXNativeTarget "libboost_date_time-mt.a" */;
			buildPhases = (
				2108BD02108BD02108BD0000 /* CMake ReRun */,
				210877021087702108770000 /* Sources */,
				210939021093902109390000 /* CMake PostBuild Rules */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = "libboost_date_time-mt.a";
			productName = "libboost_date_time-mt.a";
			productReference = 211142021114202111420000 /* libboost_date_time-mt.a */;
			productType = "com.apple.product-type.library.static";
		};
		21156A021156A021156A0000 /* libboost_date_time-mt-d.a */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 2115C002115C002115C00000 /* Build configuration list for PBXNativeTarget "libboost_date_time-mt-d.a" */;
			buildPhases = (
				21149A021149A021149A0000 /* CMake ReRun */,
				21145A021145A021145A0000 /* Sources */,
				21151A021151A021151A0000 /* CMake PostBuild Rules */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = "libboost_date_time-mt-d.a";
			productName = "libboost_date_time-mt-d.a";
			productReference = 211D290211D290211D290000 /* libboost_date_time-mt-d.a */;
			productType = "com.apple.product-type.library.static";
		};
		2131FC02131FC02131FC0000 /* libboost_thread-mt.a */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 213248021324802132480000 /* Build configuration list for PBXNativeTarget "libboost_thread-mt.a" */;
			buildPhases = (
				213121021312102131210000 /* CMake ReRun */,
				2130DF02130DF02130DF0000 /* Sources */,
				21319D021319D021319D0000 /* CMake PostBuild Rules */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = "libboost_thread-mt.a";
			productName = "libboost_thread-mt.a";
			productReference = 2139A902139A902139A90000 /* libboost_thread-mt.a */;
			productType = "com.apple.product-type.library.static";
		};
		213DD70213DD70213DD70000 /* libboost_thread-mt-d.a */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 213E220213E220213E220000 /* Build configuration list for PBXNativeTarget "libboost_thread-mt-d.a" */;
			buildPhases = (
				213CFC0213CFC0213CFC0000 /* CMake ReRun */,
				213CBC0213CBC0213CBC0000 /* Sources */,
				213D7C0213D7C0213D7C0000 /* CMake PostBuild Rules */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = "libboost_thread-mt-d.a";
			productName = "libboost_thread-mt-d.a";
			productReference = 214579021457902145790000 /* libboost_thread-mt-d.a */;
			productType = "com.apple.product-type.library.static";
		};
		21647E021647E021647E0000 /* libboost_regex-mt.a */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 2164C902164C902164C90000 /* Build configuration list for PBXNativeTarget "libboost_regex-mt.a" */;
			buildPhases = (
				2163A402163A402163A40000 /* CMake ReRun */,
				216355021635502163550000 /* Sources */,
				216423021642302164230000 /* CMake PostBuild Rules */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = "libboost_regex-mt.a";
			productName = "libboost_regex-mt.a";
			productReference = 216C330216C330216C330000 /* libboost_regex-mt.a */;
			productType = "com.apple.product-type.library.static";
		};
		21778E021778E021778E0000 /* libboost_regex-mt-d.a */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 2177DA02177DA02177DA0000 /* Build configuration list for PBXNativeTarget "libboost_regex-mt-d.a" */;
			buildPhases = (
				2176B302176B302176B30000 /* CMake ReRun */,
				21766A021766A021766A0000 /* Sources */,
				21772F021772F021772F0000 /* CMake PostBuild Rules */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = "libboost_regex-mt-d.a";
			productName = "libboost_regex-mt-d.a";
			productReference = 217F460217F460217F460000 /* libboost_regex-mt-d.a */;
			productType = "com.apple.product-type.library.static";
		};
		21ECAF021ECAF021ECAF0000 /* libboost_serialization-mt.a */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 21ED06021ED06021ED060000 /* Build configuration list for PBXNativeTarget "libboost_serialization-mt.a" */;
			buildPhases = (
				21EBE0021EBE0021EBE00000 /* CMake ReRun */,
				21EB94021EB94021EB940000 /* Sources */,
				21EC5F021EC5F021EC5F0000 /* CMake PostBuild Rules */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = "libboost_serialization-mt.a";
			productName = "libboost_serialization-mt.a";
			productReference = 21F467021F467021F4670000 /* libboost_serialization-mt.a */;
			productType = "com.apple.product-type.library.static";
		};
		2207F002207F002207F00000 /* libboost_serialization-mt-d.a */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 220846022084602208460000 /* Build configuration list for PBXNativeTarget "libboost_serialization-mt-d.a" */;
			buildPhases = (
				22071E022071E022071E0000 /* CMake ReRun */,
				2206D202206D202206D20000 /* Sources */,
				22079A022079A022079A0000 /* CMake PostBuild Rules */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = "libboost_serialization-mt-d.a";
			productName = "libboost_serialization-mt-d.a";
			productReference = 220FA90220FA90220FA90000 /* libboost_serialization-mt-d.a */;
			productType = "com.apple.product-type.library.static";
		};
		2220B002220B002220B00000 /* libboost_wserialization-mt.a */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 222105022210502221050000 /* Build configuration list for PBXNativeTarget "libboost_wserialization-mt.a" */;
			buildPhases = (
				221FDE0221FDE0221FDE0000 /* CMake ReRun */,
				221F980221F980221F980000 /* Sources */,
				22205A022205A022205A0000 /* CMake PostBuild Rules */,
			);
			buildRules = (
			);
			dependencies = (
				25A521025A521025A5210000 /* PBXTargetDependency */,
			);
			name = "libboost_wserialization-mt.a";
			productName = "libboost_wserialization-mt.a";
			productReference = 222866022286602228660000 /* libboost_wserialization-mt.a */;
			productType = "com.apple.product-type.library.static";
		};
		222FB50222FB50222FB50000 /* libboost_wserialization-mt-d.a */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 22300B022300B022300B0000 /* Build configuration list for PBXNativeTarget "libboost_wserialization-mt-d.a" */;
			buildPhases = (
				222EE30222EE30222EE30000 /* CMake ReRun */,
				222E9C0222E9C0222E9C0000 /* Sources */,
				222F5F0222F5F0222F5F0000 /* CMake PostBuild Rules */,
			);
			buildRules = (
			);
			dependencies = (
				25A59B025A59B025A59B0000 /* PBXTargetDependency */,
			);
			name = "libboost_wserialization-mt-d.a";
			productName = "libboost_wserialization-mt-d.a";
			productReference = 22376E022376E022376E0000 /* libboost_wserialization-mt-d.a */;
			productType = "com.apple.product-type.library.static";
		};
		227338022733802273380000 /* libboost_graph-mt.a */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 227383022738302273830000 /* Build configuration list for PBXNativeTarget "libboost_graph-mt.a" */;
			buildPhases = (
				22725D022725D022725D0000 /* CMake ReRun */,
				22721C022721C022721C0000 /* Sources */,
				2272DD02272DD02272DD0000 /* CMake PostBuild Rules */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = "libboost_graph-mt.a";
			productName = "libboost_graph-mt.a";
			productReference = 227A840227A840227A840000 /* libboost_graph-mt.a */;
			productType = "com.apple.product-type.library.static";
		};
		227E170227E170227E170000 /* libboost_graph-mt-d.a */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 227E630227E630227E630000 /* Build configuration list for PBXNativeTarget "libboost_graph-mt-d.a" */;
			buildPhases = (
				227D390227D390227D390000 /* CMake ReRun */,
				227CFC0227CFC0227CFC0000 /* Sources */,
				227DB80227DB80227DB80000 /* CMake PostBuild Rules */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = "libboost_graph-mt-d.a";
			productName = "libboost_graph-mt-d.a";
			productReference = 228559022855902285590000 /* libboost_graph-mt-d.a */;
			productType = "com.apple.product-type.library.static";
		};
		22AD65022AD65022AD650000 /* libboost_python-mt.a */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 22ADB1022ADB1022ADB10000 /* Build configuration list for PBXNativeTarget "libboost_python-mt.a" */;
			buildPhases = (
				22AC8A022AC8A022AC8A0000 /* CMake ReRun */,
				22AC3F022AC3F022AC3F0000 /* Sources */,
				22AD06022AD06022AD060000 /* CMake PostBuild Rules */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = "libboost_python-mt.a";
			productName = "libboost_python-mt.a";
			productReference = 22B488022B488022B4880000 /* libboost_python-mt.a */;
			productType = "com.apple.product-type.library.static";
		};
		22C670022C670022C6700000 /* libboost_python-mt-d.a */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 22C6BB022C6BB022C6BB0000 /* Build configuration list for PBXNativeTarget "libboost_python-mt-d.a" */;
			buildPhases = (
				22C596022C596022C5960000 /* CMake ReRun */,
				22C54A022C54A022C54A0000 /* Sources */,
				22C615022C615022C6150000 /* CMake PostBuild Rules */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = "libboost_python-mt-d.a";
			productName = "libboost_python-mt-d.a";
			productReference = 22CD8A022CD8A022CD8A0000 /* libboost_python-mt-d.a */;
			productType = "com.apple.product-type.library.static";
		};
		22E19E022E19E022E19E0000 /* accumulators-accumulators_example */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 22E1F5022E1F5022E1F50000 /* Build configuration list for PBXNativeTarget "accumulators-accumulators_example" */;
			buildPhases = (
				22E0CC022E0CC022E0CC0000 /* CMake ReRun */,
				22E08D022E08D022E08D0000 /* Sources */,
				22E148022E148022E1480000 /* CMake PostBuild Rules */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = "accumulators-accumulators_example";
			productName = "accumulators-accumulators_example";
			productReference = 22E91B022E91B022E91B0000 /* accumulators-accumulators_example */;
			productType = "com.apple.product-type.tool";
		};
		2300AE02300AE02300AE0000 /* libboost_system-mt.a */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 2300CC02300CC02300CC0000 /* Build configuration list for PBXNativeTarget "libboost_system-mt.a" */;
			buildPhases = (
				22FBAD022FBAD022FBAD0000 /* CMake ReRun */,
				22FB6C022FB6C022FB6C0000 /* Sources */,
				23001E023001E023001E0000 /* CMake PostBuild Rules */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = "libboost_system-mt.a";
			productName = "libboost_system-mt.a";
			productReference = 23083D023083D023083D0000 /* libboost_system-mt.a */;
			productType = "com.apple.product-type.library.static";
		};
		230B560230B560230B560000 /* libboost_system-mt-d.a */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 230BA20230BA20230BA20000 /* Build configuration list for PBXNativeTarget "libboost_system-mt-d.a" */;
			buildPhases = (
				230A780230A780230A780000 /* CMake ReRun */,
				230A3C0230A3C0230A3C0000 /* Sources */,
				230AF70230AF70230AF70000 /* CMake PostBuild Rules */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = "libboost_system-mt-d.a";
			productName = "libboost_system-mt-d.a";
			productReference = 231313023131302313130000 /* libboost_system-mt-d.a */;
			productType = "com.apple.product-type.library.static";
		};
		236926023692602369260000 /* libboost_prg_exec_monitor-mt.a */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 236973023697302369730000 /* Build configuration list for PBXNativeTarget "libboost_prg_exec_monitor-mt.a" */;
			buildPhases = (
				23684B023684B023684B0000 /* CMake ReRun */,
				236809023680902368090000 /* Sources */,
				2368C702368C702368C70000 /* CMake PostBuild Rules */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = "libboost_prg_exec_monitor-mt.a";
			productName = "libboost_prg_exec_monitor-mt.a";
			productReference = 2370A102370A102370A10000 /* libboost_prg_exec_monitor-mt.a */;
			productType = "com.apple.product-type.library.static";
		};
		23750E023750E023750E0000 /* libboost_prg_exec_monitor-mt-d.a */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 23755C023755C023755C0000 /* Build configuration list for PBXNativeTarget "libboost_prg_exec_monitor-mt-d.a" */;
			buildPhases = (
				237433023743302374330000 /* CMake ReRun */,
				2373F002373F002373F00000 /* Sources */,
				2374AF02374AF02374AF0000 /* CMake PostBuild Rules */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = "libboost_prg_exec_monitor-mt-d.a";
			productName = "libboost_prg_exec_monitor-mt-d.a";
			productReference = 237C850237C850237C850000 /* libboost_prg_exec_monitor-mt-d.a */;
			productType = "com.apple.product-type.library.static";
		};
		239359023935902393590000 /* libboost_test_exec_monitor-mt.a */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 2393A302393A302393A30000 /* Build configuration list for PBXNativeTarget "libboost_test_exec_monitor-mt.a" */;
			buildPhases = (
				23927F023927F023927F0000 /* CMake ReRun */,
				239233023923302392330000 /* Sources */,
				2392FE02392FE02392FE0000 /* CMake PostBuild Rules */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = "libboost_test_exec_monitor-mt.a";
			productName = "libboost_test_exec_monitor-mt.a";
			productReference = 239ABC0239ABC0239ABC0000 /* libboost_test_exec_monitor-mt.a */;
			productType = "com.apple.product-type.library.static";
		};
		23A67D023A67D023A67D0000 /* libboost_test_exec_monitor-mt-d.a */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 23A6CB023A6CB023A6CB0000 /* Build configuration list for PBXNativeTarget "libboost_test_exec_monitor-mt-d.a" */;
			buildPhases = (
				23A5A2023A5A2023A5A20000 /* CMake ReRun */,
				23A556023A556023A5560000 /* Sources */,
				23A61E023A61E023A61E0000 /* CMake PostBuild Rules */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = "libboost_test_exec_monitor-mt-d.a";
			productName = "libboost_test_exec_monitor-mt-d.a";
			productReference = 23ADE4023ADE4023ADE40000 /* libboost_test_exec_monitor-mt-d.a */;
			productType = "com.apple.product-type.library.static";
		};
		23C33D023C33D023C33D0000 /* libboost_unit_test_framework-mt.a */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 23C388023C388023C3880000 /* Build configuration list for PBXNativeTarget "libboost_unit_test_framework-mt.a" */;
			buildPhases = (
				23C263023C263023C2630000 /* CMake ReRun */,
				23C212023C212023C2120000 /* Sources */,
				23C2E2023C2E2023C2E20000 /* CMake PostBuild Rules */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = "libboost_unit_test_framework-mt.a";
			productName = "libboost_unit_test_framework-mt.a";
			productReference = 23CAA1023CAA1023CAA10000 /* libboost_unit_test_framework-mt.a */;
			productType = "com.apple.product-type.library.static";
		};
		23D769023D769023D7690000 /* libboost_unit_test_framework-mt-d.a */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 23D7B7023D7B7023D7B70000 /* Build configuration list for PBXNativeTarget "libboost_unit_test_framework-mt-d.a" */;
			buildPhases = (
				23D68E023D68E023D68E0000 /* CMake ReRun */,
				23D643023D643023D6430000 /* Sources */,
				23D70A023D70A023D70A0000 /* CMake PostBuild Rules */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = "libboost_unit_test_framework-mt-d.a";
			productName = "libboost_unit_test_framework-mt-d.a";
			productReference = 23DECF023DECF023DECF0000 /* libboost_unit_test_framework-mt-d.a */;
			productType = "com.apple.product-type.library.static";
		};
		2400DF02400DF02400DF0000 /* libboost_filesystem-mt.a */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 240136024013602401360000 /* Build configuration list for PBXNativeTarget "libboost_filesystem-mt.a" */;
			buildPhases = (
				24000D024000D024000D0000 /* CMake ReRun */,
				23FBD1023FBD1023FBD10000 /* Sources */,
				240089024008902400890000 /* CMake PostBuild Rules */,
			);
			buildRules = (
			);
			dependencies = (
				25A95F025A95F025A95F0000 /* PBXTargetDependency */,
			);
			name = "libboost_filesystem-mt.a";
			productName = "libboost_filesystem-mt.a";
			productReference = 2408A102408A102408A10000 /* libboost_filesystem-mt.a */;
			productType = "com.apple.product-type.library.static";
		};
		240D4E0240D4E0240D4E0000 /* libboost_filesystem-mt-d.a */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 240DA40240DA40240DA40000 /* Build configuration list for PBXNativeTarget "libboost_filesystem-mt-d.a" */;
			buildPhases = (
				240C7E0240C7E0240C7E0000 /* CMake ReRun */,
				240C3E0240C3E0240C3E0000 /* Sources */,
				240CFE0240CFE0240CFE0000 /* CMake PostBuild Rules */,
			);
			buildRules = (
			);
			dependencies = (
				25A9D7025A9D7025A9D70000 /* PBXTargetDependency */,
			);
			name = "libboost_filesystem-mt-d.a";
			productName = "libboost_filesystem-mt-d.a";
			productReference = 241519024151902415190000 /* libboost_filesystem-mt-d.a */;
			productType = "com.apple.product-type.library.static";
		};
		244D500244D500244D500000 /* libboost_mpi-mt.a */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 244D9C0244D9C0244D9C0000 /* Build configuration list for PBXNativeTarget "libboost_mpi-mt.a" */;
			buildPhases = (
				244C750244C750244C750000 /* CMake ReRun */,
				244C260244C260244C260000 /* Sources */,
				244CF10244CF10244CF10000 /* CMake PostBuild Rules */,
			);
			buildRules = (
			);
			dependencies = (
				25A521025A521025A5210000 /* PBXTargetDependency */,
			);
			name = "libboost_mpi-mt.a";
			productName = "libboost_mpi-mt.a";
			productReference = 2454B302454B302454B30000 /* libboost_mpi-mt.a */;
			productType = "com.apple.product-type.library.static";
		};
		246103024610302461030000 /* libboost_mpi-mt-d.a */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 24614D024614D024614D0000 /* Build configuration list for PBXNativeTarget "libboost_mpi-mt-d.a" */;
			buildPhases = (
				246029024602902460290000 /* CMake ReRun */,
				245FDD0245FDD0245FDD0000 /* Sources */,
				2460A802460A802460A80000 /* CMake PostBuild Rules */,
			);
			buildRules = (
			);
			dependencies = (
				25A59B025A59B025A59B0000 /* PBXTargetDependency */,
			);
			name = "libboost_mpi-mt-d.a";
			productName = "libboost_mpi-mt-d.a";
			productReference = 246865024686502468650000 /* libboost_mpi-mt-d.a */;
			productType = "com.apple.product-type.library.static";
		};
		2474CD02474CD02474CD0000 /* libboost_graph_parallel-mt.a */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 247523024752302475230000 /* Build configuration list for PBXNativeTarget "libboost_graph_parallel-mt.a" */;
			buildPhases = (
				2473FB02473FB02473FB0000 /* CMake ReRun */,
				2473B402473B402473B40000 /* Sources */,
				247477024747702474770000 /* CMake PostBuild Rules */,
			);
			buildRules = (
			);
			dependencies = (
				25AE1F025AE1F025AE1F0000 /* PBXTargetDependency */,
			);
			name = "libboost_graph_parallel-mt.a";
			productName = "libboost_graph_parallel-mt.a";
			productReference = 247C300247C300247C300000 /* libboost_graph_parallel-mt.a */;
			productType = "com.apple.product-type.library.static";
		};
		248024024802402480240000 /* libboost_graph_parallel-mt-d.a */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 24807A024807A024807A0000 /* Build configuration list for PBXNativeTarget "libboost_graph_parallel-mt-d.a" */;
			buildPhases = (
				247F520247F520247F520000 /* CMake ReRun */,
				247F0B0247F0B0247F0B0000 /* Sources */,
				247FCE0247FCE0247FCE0000 /* CMake PostBuild Rules */,
			);
			buildRules = (
			);
			dependencies = (
				25AE8E025AE8E025AE8E0000 /* PBXTargetDependency */,
			);
			name = "libboost_graph_parallel-mt-d.a";
			productName = "libboost_graph_parallel-mt-d.a";
			productReference = 248794024879402487940000 /* libboost_graph_parallel-mt-d.a */;
			productType = "com.apple.product-type.library.static";
		};
		249DA50249DA50249DA50000 /* libboost_iostreams-mt.a */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 249DFC0249DFC0249DFC0000 /* Build configuration list for PBXNativeTarget "libboost_iostreams-mt.a" */;
			buildPhases = (
				249CD30249CD30249CD30000 /* CMake ReRun */,
				249C900249C900249C900000 /* Sources */,
				249D4F0249D4F0249D4F0000 /* CMake PostBuild Rules */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = "libboost_iostreams-mt.a";
			productName = "libboost_iostreams-mt.a";
			productReference = 24A55A024A55A024A55A0000 /* libboost_iostreams-mt.a */;
			productType = "com.apple.product-type.library.static";
		};
		24A9F5024A9F5024A9F50000 /* libboost_iostreams-mt-d.a */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 24AA4B024AA4B024AA4B0000 /* Build configuration list for PBXNativeTarget "libboost_iostreams-mt-d.a" */;
			buildPhases = (
				24A925024A925024A9250000 /* CMake ReRun */,
				24A8E4024A8E4024A8E40000 /* Sources */,
				24A9A5024A9A5024A9A50000 /* CMake PostBuild Rules */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = "libboost_iostreams-mt-d.a";
			productName = "libboost_iostreams-mt-d.a";
			productReference = 24B1BF024B1BF024B1BF0000 /* libboost_iostreams-mt-d.a */;
			productType = "com.apple.product-type.library.static";
		};
		24DC17024DC17024DC170000 /* libboost_program_options-mt.a */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 24DC6E024DC6E024DC6E0000 /* Build configuration list for PBXNativeTarget "libboost_program_options-mt.a" */;
			buildPhases = (
				24DB45024DB45024DB450000 /* CMake ReRun */,
				24DAFA024DAFA024DAFA0000 /* Sources */,
				24DBC1024DBC1024DBC10000 /* CMake PostBuild Rules */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = "libboost_program_options-mt.a";
			productName = "libboost_program_options-mt.a";
			productReference = 24E370024E370024E3700000 /* libboost_program_options-mt.a */;
			productType = "com.apple.product-type.library.static";
		};
		24EB9C024EB9C024EB9C0000 /* libboost_program_options-mt-d.a */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 24EBF3024EBF3024EBF30000 /* Build configuration list for PBXNativeTarget "libboost_program_options-mt-d.a" */;
			buildPhases = (
				24EACA024EACA024EACA0000 /* CMake ReRun */,
				24EA83024EA83024EA830000 /* Sources */,
				24EB46024EB46024EB460000 /* CMake PostBuild Rules */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = "libboost_program_options-mt-d.a";
			productName = "libboost_program_options-mt-d.a";
			productReference = 24F2F8024F2F8024F2F80000 /* libboost_program_options-mt-d.a */;
			productType = "com.apple.product-type.library.static";
		};
		2515C202515C202515C20000 /* libboost_signals-mt.a */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 251618025161802516180000 /* Build configuration list for PBXNativeTarget "libboost_signals-mt.a" */;
			buildPhases = (
				2514F002514F002514F00000 /* CMake ReRun */,
				2514AC02514AC02514AC0000 /* Sources */,
				25156C025156C025156C0000 /* CMake PostBuild Rules */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = "libboost_signals-mt.a";
			productName = "libboost_signals-mt.a";
			productReference = 251D830251D830251D830000 /* libboost_signals-mt.a */;
			productType = "com.apple.product-type.library.static";
		};
		2522A702522A702522A70000 /* libboost_signals-mt-d.a */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 2522FE02522FE02522FE0000 /* Build configuration list for PBXNativeTarget "libboost_signals-mt-d.a" */;
			buildPhases = (
				2521D702521D702521D70000 /* CMake ReRun */,
				252194025219402521940000 /* Sources */,
				252257025225702522570000 /* CMake PostBuild Rules */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = "libboost_signals-mt-d.a";
			productName = "libboost_signals-mt-d.a";
			productReference = 252A6C0252A6C0252A6C0000 /* libboost_signals-mt-d.a */;
			productType = "com.apple.product-type.library.static";
		};
		256585025658502565850000 /* libboost_wave-mt.a */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 2565D202565D202565D20000 /* Build configuration list for PBXNativeTarget "libboost_wave-mt.a" */;
			buildPhases = (
				2564AA02564AA02564AA0000 /* CMake ReRun */,
				256461025646102564610000 /* Sources */,
				256526025652602565260000 /* CMake PostBuild Rules */,
			);
			buildRules = (
			);
			dependencies = (
				25A247025A247025A2470000 /* PBXTargetDependency */,
				25A339025A339025A3390000 /* PBXTargetDependency */,
				25AD27025AD27025AD270000 /* PBXTargetDependency */,
			);
			name = "libboost_wave-mt.a";
			productName = "libboost_wave-mt.a";
			productReference = 256D330256D330256D330000 /* libboost_wave-mt.a */;
			productType = "com.apple.product-type.library.static";
		};
		257582025758202575820000 /* libboost_wave-mt-d.a */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 2575CF02575CF02575CF0000 /* Build configuration list for PBXNativeTarget "libboost_wave-mt-d.a" */;
			buildPhases = (
				2574A702574A702574A70000 /* CMake ReRun */,
				257462025746202574620000 /* Sources */,
				257523025752302575230000 /* CMake PostBuild Rules */,
			);
			buildRules = (
			);
			dependencies = (
				25A2C0025A2C0025A2C00000 /* PBXTargetDependency */,
				25A3AE025A3AE025A3AE0000 /* PBXTargetDependency */,
				25AD9F025AD9F025AD9F0000 /* PBXTargetDependency */,
			);
			name = "libboost_wave-mt-d.a";
			productName = "libboost_wave-mt-d.a";
			productReference = 257D2D0257D2D0257D2D0000 /* libboost_wave-mt-d.a */;
			productType = "com.apple.product-type.library.static";
		};
		2587E102587E102587E10000 /* bcp */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 25882C025882C025882C0000 /* Build configuration list for PBXNativeTarget "bcp" */;
			buildPhases = (
				258706025870602587060000 /* CMake ReRun */,
				2586BC02586BC02586BC0000 /* Sources */,
				258782025878202587820000 /* CMake PostBuild Rules */,
			);
			buildRules = (
			);
			dependencies = (
				25A42B025A42B025A42B0000 /* PBXTargetDependency */,
				25A4A7025A4A7025A4A70000 /* PBXTargetDependency */,
				25A95F025A95F025A95F0000 /* PBXTargetDependency */,
				25A9D7025A9D7025A9D70000 /* PBXTargetDependency */,
				25AA54025AA54025AA540000 /* PBXTargetDependency */,
				25AAD4025AAD4025AAD40000 /* PBXTargetDependency */,
				25AD27025AD27025AD270000 /* PBXTargetDependency */,
				25AD9F025AD9F025AD9F0000 /* PBXTargetDependency */,
			);
			name = bcp;
			productName = bcp;
			productReference = 258ECE0258ECE0258ECE0000 /* bcp */;
			productType = "com.apple.product-type.tool";
		};
		2599F302599F302599F30000 /* inspect */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 259A3F0259A3F0259A3F0000 /* Build configuration list for PBXNativeTarget "inspect" */;
			buildPhases = (
				259918025991802599180000 /* CMake ReRun */,
				2598CD02598CD02598CD0000 /* Sources */,
				259994025999402599940000 /* CMake PostBuild Rules */,
			);
			buildRules = (
			);
			dependencies = (
				25A42B025A42B025A42B0000 /* PBXTargetDependency */,
				25A4A7025A4A7025A4A70000 /* PBXTargetDependency */,
				25AD27025AD27025AD270000 /* PBXTargetDependency */,
				25AD9F025AD9F025AD9F0000 /* PBXTargetDependency */,
			);
			name = inspect;
			productName = inspect;
			productReference = 25A1A4025A1A4025A1A40000 /* inspect */;
			productType = "com.apple.product-type.tool";
		};
/* End PBXNativeTarget section */

/* Begin PBXProject section */
		1FF26C01FF26C01FF26C0000 /* Project object */ = {
			isa = PBXProject;
			buildConfigurationList = 1FF2C601FF2C601FF2C60000 /* Build configuration list for PBXProject "Boost" */;
			compatibilityVersion = "Xcode 2.4";
			hasScannedForEncodings = 0;
			mainGroup = 1F73B101F73B101F73B10000;
			projectDirPath = "";
			projectRoot = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0;
			targets = (
				1FF44201FF44201FF4420000 /* ALL_BUILD */,
				200065020006502000650000 /* install */,
				2007D002007D002007D00000 /* modularize */,
				200F8D0200F8D0200F8D0000 /* package */,
				201701020170102017010000 /* preprocessor-modularize */,
				201F4B0201F4B0201F4B0000 /* concept_check-modularize */,
				2027AF02027AF02027AF0000 /* property_map-modularize */,
				203032020303202030320000 /* config-modularize */,
				203877020387702038770000 /* mpl-modularize */,
				204085020408502040850000 /* type_traits-modularize */,
				204899020489902048990000 /* function-modularize */,
				2050A802050A802050A80000 /* iterator-modularize */,
				2058B702058B702058B70000 /* smart_ptr-modularize */,
				2060C302060C302060C30000 /* exception-modularize */,
				2068D502068D502068D50000 /* utility-modularize */,
				2070DD02070DD02070DD0000 /* integer-modularize */,
				2078E802078E802078E80000 /* detail-modularize */,
				2080F302080F302080F30000 /* static_assert-modularize */,
				208907020890702089070000 /* tuple-modularize */,
				209111020911102091110000 /* function_types-modularize */,
				209929020992902099290000 /* fusion-modularize */,
				20A12A020A12A020A12A0000 /* typeof-modularize */,
				20A934020A934020A9340000 /* proto-modularize */,
				20B135020B135020B1350000 /* intrusive-modularize */,
				20B949020B949020B9490000 /* logic-modularize */,
				20C14F020C14F020C14F0000 /* numeric-modularize */,
				20C951020C951020C9510000 /* xpressive-modularize */,
				20D15A020D15A020D15A0000 /* optional-modularize */,
				20D96B020D96B020D96B0000 /* tokenizer-modularize */,
				20E17D020E17D020E17D0000 /* io-modularize */,
				20E992020E992020E9920000 /* bind-modularize */,
				20F19A020F19A020F19A0000 /* date_time-modularize */,
				20F9A0020F9A0020F9A00000 /* boost_date_time */,
				21098F021098F021098F0000 /* libboost_date_time-mt.a */,
				21156A021156A021156A0000 /* libboost_date_time-mt-d.a */,
				211E100211E100211E100000 /* thread-modularize */,
				212611021261102126110000 /* boost_thread */,
				2131FC02131FC02131FC0000 /* libboost_thread-mt.a */,
				213DD70213DD70213DD70000 /* libboost_thread-mt-d.a */,
				214660021466002146600000 /* regex-modularize */,
				214E5F0214E5F0214E5F0000 /* boost_regex */,
				21647E021647E021647E0000 /* libboost_regex-mt.a */,
				21778E021778E021778E0000 /* libboost_regex-mt-d.a */,
				218025021802502180250000 /* algorithm-modularize */,
				21882A021882A021882A0000 /* range-modularize */,
				21902C021902C021902C0000 /* foreach-modularize */,
				21982E021982E021982E0000 /* array-modularize */,
				21A036021A036021A0360000 /* functional-modularize */,
				21A84B021A84B021A84B0000 /* unordered-modularize */,
				21B059021B059021B0590000 /* pool-modularize */,
				21B860021B860021B8600000 /* spirit-modularize */,
				21C061021C061021C0610000 /* variant-modularize */,
				21C874021C874021C8740000 /* serialization-modularize */,
				21D084021D084021D0840000 /* boost_serialization */,
				21ECAF021ECAF021ECAF0000 /* libboost_serialization-mt.a */,
				2207F002207F002207F00000 /* libboost_serialization-mt-d.a */,
				221089022108902210890000 /* boost_wserialization */,
				2220B002220B002220B00000 /* libboost_wserialization-mt.a */,
				222FB50222FB50222FB50000 /* libboost_wserialization-mt-d.a */,
				223851022385102238510000 /* format-modularize */,
				224061022406102240610000 /* math-modularize */,
				224872022487202248720000 /* multi_index-modularize */,
				22508B022508B022508B0000 /* any-modularize */,
				2258A402258A402258A40000 /* random-modularize */,
				2260B202260B202260B20000 /* graph-modularize */,
				2268B502268B502268B50000 /* boost_graph */,
				227338022733802273380000 /* libboost_graph-mt.a */,
				227E170227E170227E170000 /* libboost_graph-mt-d.a */,
				2286BC02286BC02286BC0000 /* Python-modularize */,
				228ECD0228ECD0228ECD0000 /* boost_python */,
				22AD65022AD65022AD650000 /* libboost_python-mt.a */,
				22C670022C670022C6700000 /* libboost_python-mt-d.a */,
				22CE63022CE63022CE630000 /* parameter-modularize */,
				22D6F9022D6F9022D6F90000 /* accumulators-modularize */,
				22E19E022E19E022E19E0000 /* accumulators-accumulators_example */,
				22EA01022EA01022EA010000 /* system-modularize */,
				22F20C022F20C022F20C0000 /* boost_system */,
				2300AE02300AE02300AE0000 /* libboost_system-mt.a */,
				230B560230B560230B560000 /* libboost_system-mt-d.a */,
				2313F302313F302313F30000 /* asio-modularize */,
				231BF00231BF00231BF00000 /* circular_buffer-modularize */,
				232409023240902324090000 /* ptr_container-modularize */,
				232C260232C260232C260000 /* assign-modularize */,
				23343D023343D023343D0000 /* bimap-modularize */,
				233C500233C500233C500000 /* compatibility-modularize */,
				2344A502344A502344A50000 /* crc-modularize */,
				234CB90234CB90234CB90000 /* timer-modularize */,
				23551D023551D023551D0000 /* test-modularize */,
				235D2E0235D2E0235D2E0000 /* boost_prg_exec_monitor */,
				236926023692602369260000 /* libboost_prg_exec_monitor-mt.a */,
				23750E023750E023750E0000 /* libboost_prg_exec_monitor-mt-d.a */,
				237DB80237DB80237DB80000 /* boost_test_exec_monitor */,
				239359023935902393590000 /* libboost_test_exec_monitor-mt.a */,
				23A67D023A67D023A67D0000 /* libboost_test_exec_monitor-mt-d.a */,
				23AF12023AF12023AF120000 /* boost_unit_test_framework */,
				23C33D023C33D023C33D0000 /* libboost_unit_test_framework-mt.a */,
				23D769023D769023D7690000 /* libboost_unit_test_framework-mt-d.a */,
				23DFFB023DFFB023DFFB0000 /* dynamic_bitset-modularize */,
				23E811023E811023E8110000 /* filesystem-modularize */,
				23F02F023F02F023F02F0000 /* boost_filesystem */,
				2400DF02400DF02400DF0000 /* libboost_filesystem-mt.a */,
				240D4E0240D4E0240D4E0000 /* libboost_filesystem-mt-d.a */,
				2415F702415F702415F70000 /* interprocess-modularize */,
				241E130241E130241E130000 /* flyweight-modularize */,
				24262A024262A024262A0000 /* gil-modularize */,
				242E450242E450242E450000 /* mpi-modularize */,
				243653024365302436530000 /* boost_mpi */,
				244D500244D500244D500000 /* libboost_mpi-mt.a */,
				246103024610302461030000 /* libboost_mpi-mt-d.a */,
				246997024699702469970000 /* boost_graph_parallel */,
				2474CD02474CD02474CD0000 /* libboost_graph_parallel-mt.a */,
				248024024802402480240000 /* libboost_graph_parallel-mt-d.a */,
				2488D702488D702488D70000 /* iostreams-modularize */,
				2490F102490F102490F10000 /* boost_iostreams */,
				249DA50249DA50249DA50000 /* libboost_iostreams-mt.a */,
				24A9F5024A9F5024A9F50000 /* libboost_iostreams-mt-d.a */,
				24B2A7024B2A7024B2A70000 /* lambda-modularize */,
				24BAB9024BAB9024BAB90000 /* multi_array-modularize */,
				24C2D7024C2D7024C2D70000 /* program_options-modularize */,
				24CAF5024CAF5024CAF50000 /* boost_program_options */,
				24DC17024DC17024DC170000 /* libboost_program_options-mt.a */,
				24EB9C024EB9C024EB9C0000 /* libboost_program_options-mt-d.a */,
				24F43B024F43B024F43B0000 /* rational-modularize */,
				250044025004402500440000 /* signals-modularize */,
				250859025085902508590000 /* boost_signals */,
				2515C202515C202515C20000 /* libboost_signals-mt.a */,
				2522A702522A702522A70000 /* libboost_signals-mt-d.a */,
				252B500252B500252B500000 /* signals2-modularize */,
				253354025335402533540000 /* statechart-modularize */,
				253B680253B680253B680000 /* tr1-modularize */,
				254380025438002543800000 /* units-modularize */,
				254B930254B930254B930000 /* wave-modularize */,
				2553A202553A202553A20000 /* boost_wave */,
				256585025658502565850000 /* libboost_wave-mt.a */,
				257582025758202575820000 /* libboost_wave-mt-d.a */,
				2587E102587E102587E10000 /* bcp */,
				2599F302599F302599F30000 /* inspect */,
			);
		};
/* End PBXProject section */

/* Begin PBXShellScriptBuildPhase section */
		1FF46301FF46301FF4630000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		1FF4E301FF4E301FF4E30000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ALL_BUILD_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		200082020008202000820000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		2000FE02000FE02000FE0000 /* CMake PostBuild Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake PostBuild Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/install_postBuildPhase.make$CONFIGURATION all";
		};
		2007F102007F102007F10000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		200871020087102008710000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		200FAA0200FAA0200FAA0000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		201026020102602010260000 /* CMake PostBuild Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake PostBuild Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/package_postBuildPhase.make$CONFIGURATION all";
		};
		20172C020172C020172C0000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		2017A802017A802017A80000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/CMakeScripts/preprocessor-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		201F780201F780201F780000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		201FF40201FF40201FF40000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/CMakeScripts/concept_check-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		2027D802027D802027D80000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		202850020285002028500000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/CMakeScripts/property_map-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		20305D020305D020305D0000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		2030D902030D902030D90000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/CMakeScripts/config-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		2038A002038A002038A00000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		203918020391802039180000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/CMakeScripts/mpl-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		2040B002040B002040B00000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		20412C020412C020412C0000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/CMakeScripts/type_traits-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		2048C402048C402048C40000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		204940020494002049400000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/CMakeScripts/function-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		2050D302050D302050D30000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		20514F020514F020514F0000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/CMakeScripts/iterator-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		2058F202058F202058F20000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		20596E020596E020596E0000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/CMakeScripts/smart_ptr-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		2060F002060F002060F00000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		20616C020616C020616C0000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/CMakeScripts/exception-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		206917020691702069170000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		206993020699302069930000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/CMakeScripts/utility-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		20710E020710E020710E0000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		20718A020718A020718A0000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/CMakeScripts/integer-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		207911020791102079110000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		207989020798902079890000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/CMakeScripts/detail-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		20811C020811C020811C0000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		208194020819402081940000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/CMakeScripts/static_assert-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		208930020893002089300000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		2089A802089A802089A80000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/CMakeScripts/tuple-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		20913A020913A020913A0000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		2091B202091B202091B20000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/CMakeScripts/function_types-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		209952020995202099520000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		2099CA02099CA02099CA0000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/CMakeScripts/fusion-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		20A153020A153020A1530000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		20A1CB020A1CB020A1CB0000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/CMakeScripts/typeof-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		20A95D020A95D020A95D0000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		20A9D5020A9D5020A9D50000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/CMakeScripts/proto-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		20B160020B160020B1600000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		20B1DC020B1DC020B1DC0000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/CMakeScripts/intrusive-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		20B972020B972020B9720000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		20B9EA020B9EA020B9EA0000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/CMakeScripts/logic-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		20C178020C178020C1780000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		20C1F0020C1F0020C1F00000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/CMakeScripts/numeric-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		20C97A020C97A020C97A0000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		20C9F2020C9F2020C9F20000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/CMakeScripts/xpressive-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		20D185020D185020D1850000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		20D201020D201020D2010000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/CMakeScripts/optional-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		20D994020D994020D9940000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		20DA0C020DA0C020DA0C0000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/CMakeScripts/tokenizer-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		20E1A8020E1A8020E1A80000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		20E224020E224020E2240000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/CMakeScripts/io-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		20E9BD020E9BD020E9BD0000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		20EA39020EA39020EA390000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/CMakeScripts/bind-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		20F1C5020F1C5020F1C50000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		20F241020F241020F2410000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/CMakeScripts/date_time-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		20F9C1020F9C1020F9C10000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		20FA41020FA41020FA410000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/src -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/src/CMakeScripts/boost_date_time_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		2108BD02108BD02108BD0000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		210939021093902109390000 /* CMake PostBuild Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake PostBuild Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/src -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/src/CMakeScripts/boost_date_time-mt-static_postBuildPhase.make$CONFIGURATION all";
		};
		21149A021149A021149A0000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		21151A021151A021151A0000 /* CMake PostBuild Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake PostBuild Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/src -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/src/CMakeScripts/boost_date_time-mt-static-debug_postBuildPhase.make$CONFIGURATION all";
		};
		211E3B0211E3B0211E3B0000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		211EB70211EB70211EB70000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/CMakeScripts/thread-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		212632021263202126320000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		2126B202126B202126B20000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/src -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/src/CMakeScripts/boost_thread_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		213121021312102131210000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		21319D021319D021319D0000 /* CMake PostBuild Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake PostBuild Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/src -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/src/CMakeScripts/boost_thread-mt-static_postBuildPhase.make$CONFIGURATION all";
		};
		213CFC0213CFC0213CFC0000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		213D7C0213D7C0213D7C0000 /* CMake PostBuild Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake PostBuild Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/src -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/src/CMakeScripts/boost_thread-mt-static-debug_postBuildPhase.make$CONFIGURATION all";
		};
		214694021469402146940000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		214710021471002147100000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/CMakeScripts/regex-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		214E800214E800214E800000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		214F000214F000214F000000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/src -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/src/CMakeScripts/boost_regex_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		2163A402163A402163A40000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		216423021642302164230000 /* CMake PostBuild Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake PostBuild Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/src -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/src/CMakeScripts/boost_regex-mt-static_postBuildPhase.make$CONFIGURATION all";
		};
		2176B302176B302176B30000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		21772F021772F021772F0000 /* CMake PostBuild Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake PostBuild Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/src -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/src/CMakeScripts/boost_regex-mt-static-debug_postBuildPhase.make$CONFIGURATION all";
		};
		21804E021804E021804E0000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		2180C602180C602180C60000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/CMakeScripts/algorithm-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		218855021885502188550000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		2188D102188D102188D10000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/CMakeScripts/range-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		219055021905502190550000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		2190CD02190CD02190CD0000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/CMakeScripts/foreach-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		219857021985702198570000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		2198CF02198CF02198CF0000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/CMakeScripts/array-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		21A061021A061021A0610000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		21A0DD021A0DD021A0DD0000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/CMakeScripts/functional-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		21A878021A878021A8780000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		21A8F4021A8F4021A8F40000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/CMakeScripts/unordered-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		21B082021B082021B0820000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		21B0FA021B0FA021B0FA0000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/CMakeScripts/pool-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		21B88B021B88B021B88B0000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		21B907021B907021B9070000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/CMakeScripts/spirit-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		21C08C021C08C021C08C0000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		21C108021C108021C1080000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/CMakeScripts/variant-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		21C89F021C89F021C89F0000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		21C91B021C91B021C91B0000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/CMakeScripts/serialization-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		21D0A5021D0A5021D0A50000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		21D125021D125021D1250000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/src -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/src/CMakeScripts/boost_serialization_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		21EBE0021EBE0021EBE00000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		21EC5F021EC5F021EC5F0000 /* CMake PostBuild Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake PostBuild Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/src -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/src/CMakeScripts/boost_serialization-mt-static_postBuildPhase.make$CONFIGURATION all";
		};
		22071E022071E022071E0000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		22079A022079A022079A0000 /* CMake PostBuild Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake PostBuild Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/src -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/src/CMakeScripts/boost_serialization-mt-static-debug_postBuildPhase.make$CONFIGURATION all";
		};
		2210AA02210AA02210AA0000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		22112A022112A022112A0000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/src -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/src/CMakeScripts/boost_wserialization_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		221FDE0221FDE0221FDE0000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		22205A022205A022205A0000 /* CMake PostBuild Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake PostBuild Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/src -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/src/CMakeScripts/boost_wserialization-mt-static_postBuildPhase.make$CONFIGURATION all";
		};
		222EE30222EE30222EE30000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		222F5F0222F5F0222F5F0000 /* CMake PostBuild Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake PostBuild Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/src -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/src/CMakeScripts/boost_wserialization-mt-static-debug_postBuildPhase.make$CONFIGURATION all";
		};
		22387C022387C022387C0000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		2238F802238F802238F80000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/CMakeScripts/format-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		22408C022408C022408C0000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		224108022410802241080000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/CMakeScripts/math-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		22489F022489F022489F0000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		22491B022491B022491B0000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/CMakeScripts/multi_index-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		2250B402250B402250B40000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		225134022513402251340000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/CMakeScripts/any-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		2258CF02258CF02258CF0000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		22594B022594B022594B0000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/CMakeScripts/random-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		2260DB02260DB02260DB0000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		226153022615302261530000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/CMakeScripts/graph-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		2268D602268D602268D60000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		226956022695602269560000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/src -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/src/CMakeScripts/boost_graph_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		22725D022725D022725D0000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		2272DD02272DD02272DD0000 /* CMake PostBuild Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake PostBuild Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/src -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/src/CMakeScripts/boost_graph-mt-static_postBuildPhase.make$CONFIGURATION all";
		};
		227D390227D390227D390000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		227DB80227DB80227DB80000 /* CMake PostBuild Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake PostBuild Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/src -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/src/CMakeScripts/boost_graph-mt-static-debug_postBuildPhase.make$CONFIGURATION all";
		};
		2286E702286E702286E70000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		228763022876302287630000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/CMakeScripts/Python-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		228EEE0228EEE0228EEE0000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		228F6E0228F6E0228F6E0000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/src -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/src/CMakeScripts/boost_python_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		22AC8A022AC8A022AC8A0000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		22AD06022AD06022AD060000 /* CMake PostBuild Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake PostBuild Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/src -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/src/CMakeScripts/boost_python-mt-static_postBuildPhase.make$CONFIGURATION all";
		};
		22C596022C596022C5960000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		22C615022C615022C6150000 /* CMake PostBuild Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake PostBuild Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/src -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/src/CMakeScripts/boost_python-mt-static-debug_postBuildPhase.make$CONFIGURATION all";
		};
		22CF1B022CF1B022CF1B0000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		22CF97022CF97022CF970000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/parameter -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/parameter/CMakeScripts/parameter-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		22D722022D722022D7220000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		22D79A022D79A022D79A0000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/accumulators -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/accumulators/CMakeScripts/accumulators-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		22E0CC022E0CC022E0CC0000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		22E148022E148022E1480000 /* CMake PostBuild Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake PostBuild Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/accumulators/example -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/accumulators/example/CMakeScripts/accumulators-accumulators_example_postBuildPhase.make$CONFIGURATION all";
		};
		22EA2B022EA2B022EA2B0000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		22EAA3022EAA3022EAA30000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/CMakeScripts/system-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		22F22D022F22D022F22D0000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		22F2AD022F2AD022F2AD0000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/src -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/src/CMakeScripts/boost_system_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		22FBAD022FBAD022FBAD0000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		23001E023001E023001E0000 /* CMake PostBuild Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake PostBuild Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/src -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/src/CMakeScripts/boost_system-mt-static_postBuildPhase.make$CONFIGURATION all";
		};
		230A780230A780230A780000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		230AF70230AF70230AF70000 /* CMake PostBuild Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake PostBuild Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/src -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/src/CMakeScripts/boost_system-mt-static-debug_postBuildPhase.make$CONFIGURATION all";
		};
		23141E023141E023141E0000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		23149A023149A023149A0000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/asio -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/asio/CMakeScripts/asio-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		231C1D0231C1D0231C1D0000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		231C990231C990231C990000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/circular_buffer -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/circular_buffer/CMakeScripts/circular_buffer-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		232432023243202324320000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		2324AA02324AA02324AA0000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/ptr_container -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/ptr_container/CMakeScripts/ptr_container-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		232C530232C530232C530000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		232CCF0232CCF0232CCF0000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/assign -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/assign/CMakeScripts/assign-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		233468023346802334680000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		2334E402334E402334E40000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bimap -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bimap/CMakeScripts/bimap-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		233C790233C790233C790000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		233CF10233CF10233CF10000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/compatibility -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/compatibility/CMakeScripts/compatibility-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		2344CE02344CE02344CE0000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		234546023454602345460000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/crc -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/crc/CMakeScripts/crc-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		234CE20234CE20234CE20000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		234D5A0234D5A0234D5A0000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/CMakeScripts/timer-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		235546023554602355460000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		2355BE02355BE02355BE0000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/CMakeScripts/test-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		235D4F0235D4F0235D4F0000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		235DCF0235DCF0235DCF0000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/src -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/src/CMakeScripts/boost_prg_exec_monitor_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		23684B023684B023684B0000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		2368C702368C702368C70000 /* CMake PostBuild Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake PostBuild Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/src -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/src/CMakeScripts/boost_prg_exec_monitor-mt-static_postBuildPhase.make$CONFIGURATION all";
		};
		237433023743302374330000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		2374AF02374AF02374AF0000 /* CMake PostBuild Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake PostBuild Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/src -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/src/CMakeScripts/boost_prg_exec_monitor-mt-static-debug_postBuildPhase.make$CONFIGURATION all";
		};
		237DD90237DD90237DD90000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		237E590237E590237E590000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/src -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/src/CMakeScripts/boost_test_exec_monitor_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		23927F023927F023927F0000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		2392FE02392FE02392FE0000 /* CMake PostBuild Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake PostBuild Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/src -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/src/CMakeScripts/boost_test_exec_monitor-mt-static_postBuildPhase.make$CONFIGURATION all";
		};
		23A5A2023A5A2023A5A20000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		23A61E023A61E023A61E0000 /* CMake PostBuild Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake PostBuild Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/src -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/src/CMakeScripts/boost_test_exec_monitor-mt-static-debug_postBuildPhase.make$CONFIGURATION all";
		};
		23AF33023AF33023AF330000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		23AFB3023AFB3023AFB30000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/src -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/src/CMakeScripts/boost_unit_test_framework_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		23C263023C263023C2630000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		23C2E2023C2E2023C2E20000 /* CMake PostBuild Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake PostBuild Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/src -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/src/CMakeScripts/boost_unit_test_framework-mt-static_postBuildPhase.make$CONFIGURATION all";
		};
		23D68E023D68E023D68E0000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		23D70A023D70A023D70A0000 /* CMake PostBuild Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake PostBuild Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/src -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/src/CMakeScripts/boost_unit_test_framework-mt-static-debug_postBuildPhase.make$CONFIGURATION all";
		};
		23E028023E028023E0280000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		23E0A4023E0A4023E0A40000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/dynamic_bitset -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/dynamic_bitset/CMakeScripts/dynamic_bitset-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		23E83C023E83C023E83C0000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		23E8B8023E8B8023E8B80000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/filesystem -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/filesystem/CMakeScripts/filesystem-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		23F050023F050023F0500000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		23F0D0023F0D0023F0D00000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/filesystem/src -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/filesystem/src/CMakeScripts/boost_filesystem_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		24000D024000D024000D0000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		240089024008902400890000 /* CMake PostBuild Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake PostBuild Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/filesystem/src -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/filesystem/src/CMakeScripts/boost_filesystem-mt-static_postBuildPhase.make$CONFIGURATION all";
		};
		240C7E0240C7E0240C7E0000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		240CFE0240CFE0240CFE0000 /* CMake PostBuild Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake PostBuild Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/filesystem/src -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/filesystem/src/CMakeScripts/boost_filesystem-mt-static-debug_postBuildPhase.make$CONFIGURATION all";
		};
		241620024162002416200000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		241698024169802416980000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/interprocess -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/interprocess/CMakeScripts/interprocess-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		241E3E0241E3E0241E3E0000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		241EBA0241EBA0241EBA0000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/flyweight -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/flyweight/CMakeScripts/flyweight-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		242653024265302426530000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		2426CF02426CF02426CF0000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/gil -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/gil/CMakeScripts/gil-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		242E700242E700242E700000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		242EEC0242EEC0242EEC0000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpi -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpi/CMakeScripts/mpi-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		243674024367402436740000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		2436F402436F402436F40000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpi/src -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpi/src/CMakeScripts/boost_mpi_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		244C750244C750244C750000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		244CF10244CF10244CF10000 /* CMake PostBuild Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake PostBuild Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpi/src -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpi/src/CMakeScripts/boost_mpi-mt-static_postBuildPhase.make$CONFIGURATION all";
		};
		246029024602902460290000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		2460A802460A802460A80000 /* CMake PostBuild Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake PostBuild Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpi/src -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpi/src/CMakeScripts/boost_mpi-mt-static-debug_postBuildPhase.make$CONFIGURATION all";
		};
		2469B702469B702469B70000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		246A370246A370246A370000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph_parallel/src -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph_parallel/src/CMakeScripts/boost_graph_parallel_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		2473FB02473FB02473FB0000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		247477024747702474770000 /* CMake PostBuild Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake PostBuild Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph_parallel/src -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph_parallel/src/CMakeScripts/boost_graph_parallel-mt-static_postBuildPhase.make$CONFIGURATION all";
		};
		247F520247F520247F520000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		247FCE0247FCE0247FCE0000 /* CMake PostBuild Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake PostBuild Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph_parallel/src -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph_parallel/src/CMakeScripts/boost_graph_parallel-mt-static-debug_postBuildPhase.make$CONFIGURATION all";
		};
		248900024890002489000000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		248978024897802489780000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iostreams -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iostreams/CMakeScripts/iostreams-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		249112024911202491120000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		24918C024918C024918C0000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iostreams/src -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iostreams/src/CMakeScripts/boost_iostreams_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		249CD30249CD30249CD30000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		249D4F0249D4F0249D4F0000 /* CMake PostBuild Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake PostBuild Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iostreams/src -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iostreams/src/CMakeScripts/boost_iostreams-mt-static_postBuildPhase.make$CONFIGURATION all";
		};
		24A925024A925024A9250000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		24A9A5024A9A5024A9A50000 /* CMake PostBuild Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake PostBuild Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iostreams/src -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iostreams/src/CMakeScripts/boost_iostreams-mt-static-debug_postBuildPhase.make$CONFIGURATION all";
		};
		24B2D0024B2D0024B2D00000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		24B348024B348024B3480000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/lambda -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/lambda/CMakeScripts/lambda-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		24BAE4024BAE4024BAE40000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		24BB60024BB60024BB600000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_array -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_array/CMakeScripts/multi_array-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		24C302024C302024C3020000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		24C37E024C37E024C37E0000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/program_options -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/program_options/CMakeScripts/program_options-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		24CB16024CB16024CB160000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		24CB96024CB96024CB960000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/program_options/src -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/program_options/src/CMakeScripts/boost_program_options_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		24DB45024DB45024DB450000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		24DBC1024DBC1024DBC10000 /* CMake PostBuild Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake PostBuild Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/program_options/src -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/program_options/src/CMakeScripts/boost_program_options-mt-static_postBuildPhase.make$CONFIGURATION all";
		};
		24EACA024EACA024EACA0000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		24EB46024EB46024EB460000 /* CMake PostBuild Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake PostBuild Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/program_options/src -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/program_options/src/CMakeScripts/boost_program_options-mt-static-debug_postBuildPhase.make$CONFIGURATION all";
		};
		24F464024F464024F4640000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		24F4DC024F4DC024F4DC0000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/rational -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/rational/CMakeScripts/rational-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		250072025007202500720000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		2500EE02500EE02500EE0000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/signals -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/signals/CMakeScripts/signals-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		25087A025087A025087A0000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		2508FA02508FA02508FA0000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/signals/src -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/signals/src/CMakeScripts/boost_signals_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		2514F002514F002514F00000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		25156C025156C025156C0000 /* CMake PostBuild Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake PostBuild Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/signals/src -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/signals/src/CMakeScripts/boost_signals-mt-static_postBuildPhase.make$CONFIGURATION all";
		};
		2521D702521D702521D70000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		252257025225702522570000 /* CMake PostBuild Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake PostBuild Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/signals/src -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/signals/src/CMakeScripts/boost_signals-mt-static-debug_postBuildPhase.make$CONFIGURATION all";
		};
		252B7B0252B7B0252B7B0000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		252BF70252BF70252BF70000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/signals2 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/signals2/CMakeScripts/signals2-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		25337D025337D025337D0000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		2533F502533F502533F50000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/statechart -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/statechart/CMakeScripts/statechart-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		253B910253B910253B910000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		253C0B0253C0B0253C0B0000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tr1 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tr1/CMakeScripts/tr1-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		2543A902543A902543A90000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		254421025442102544210000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/units -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/units/CMakeScripts/units-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		254BBE0254BBE0254BBE0000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		254C3A0254C3A0254C3A0000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/wave -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/wave/CMakeScripts/wave-modularize_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		2553C302553C302553C30000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		255443025544302554430000 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/wave/src -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/wave/src/CMakeScripts/boost_wave_cmakeRulesBuildPhase.make$CONFIGURATION all";
		};
		2564AA02564AA02564AA0000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		256526025652602565260000 /* CMake PostBuild Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake PostBuild Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/wave/src -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/wave/src/CMakeScripts/boost_wave-mt-static_postBuildPhase.make$CONFIGURATION all";
		};
		2574A702574A702574A70000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		257523025752302575230000 /* CMake PostBuild Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake PostBuild Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/wave/src -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/wave/src/CMakeScripts/boost_wave-mt-static-debug_postBuildPhase.make$CONFIGURATION all";
		};
		258706025870602587060000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		258782025878202587820000 /* CMake PostBuild Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake PostBuild Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/tools/bcp -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/tools/bcp/CMakeScripts/bcp_postBuildPhase.make$CONFIGURATION all";
		};
		259918025991802599180000 /* CMake ReRun */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake ReRun";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0 -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/CMakeScripts/ReRunCMake.make";
		};
		259994025999402599940000 /* CMake PostBuild Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake PostBuild Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/tools/inspect -f /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/tools/inspect/CMakeScripts/inspect_postBuildPhase.make$CONFIGURATION all";
		};
/* End PBXShellScriptBuildPhase section */

/* Begin PBXSourcesBuildPhase section */
		210877021087702108770000 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				21057F021057F021057F0000 /* greg_month.cpp in Sources */,
				210652021065202106520000 /* greg_weekday.cpp in Sources */,
				210710021071002107100000 /* date_generators.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		21145A021145A021145A0000 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				2111E002111E002111E00000 /* greg_month.cpp in Sources */,
				21129E021129E021129E0000 /* greg_weekday.cpp in Sources */,
				211301021130102113010000 /* date_generators.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		2130DF02130DF02130DF0000 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				212E000212E000212E000000 /* thread.cpp in Sources */,
				212EBA0212EBA0212EBA0000 /* exceptions.cpp in Sources */,
				212F750212F750212F750000 /* once.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		213CBC0213CBC0213CBC0000 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				213A560213A560213A560000 /* thread.cpp in Sources */,
				213B070213B070213B070000 /* exceptions.cpp in Sources */,
				213B8D0213B8D0213B8D0000 /* once.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		216355021635502163550000 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				215646021564602156460000 /* c_regex_traits.cpp in Sources */,
				215705021570502157050000 /* cpp_regex_traits.cpp in Sources */,
				2157AF02157AF02157AF0000 /* cregex.cpp in Sources */,
				215866021586602158660000 /* fileiter.cpp in Sources */,
				215923021592302159230000 /* icu.cpp in Sources */,
				2159DC02159DC02159DC0000 /* instances.cpp in Sources */,
				215A940215A940215A940000 /* posix_api.cpp in Sources */,
				215B4A0215B4A0215B4A0000 /* regex.cpp in Sources */,
				215C030215C030215C030000 /* regex_debug.cpp in Sources */,
				215CBE0215CBE0215CBE0000 /* regex_raw_buffer.cpp in Sources */,
				215D7A0215D7A0215D7A0000 /* regex_traits_defaults.cpp in Sources */,
				215E350215E350215E350000 /* static_mutex.cpp in Sources */,
				215EED0215EED0215EED0000 /* w32_regex_traits.cpp in Sources */,
				215FA90215FA90215FA90000 /* wc_regex_traits.cpp in Sources */,
				2160AA02160AA02160AA0000 /* wide_posix_api.cpp in Sources */,
				21611B021611B021611B0000 /* winstances.cpp in Sources */,
				2161D502161D502161D50000 /* usinstances.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		21766A021766A021766A0000 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				216CB90216CB90216CB90000 /* c_regex_traits.cpp in Sources */,
				216D3E0216D3E0216D3E0000 /* cpp_regex_traits.cpp in Sources */,
				216DD80216DD80216DD80000 /* cregex.cpp in Sources */,
				216E840216E840216E840000 /* fileiter.cpp in Sources */,
				216F0A0216F0A0216F0A0000 /* icu.cpp in Sources */,
				216F8F0216F8F0216F8F0000 /* instances.cpp in Sources */,
				216FD90216FD90216FD90000 /* posix_api.cpp in Sources */,
				217057021705702170570000 /* regex.cpp in Sources */,
				2170D902170D902170D90000 /* regex_debug.cpp in Sources */,
				21715C021715C021715C0000 /* regex_raw_buffer.cpp in Sources */,
				2171E402171E402171E40000 /* regex_traits_defaults.cpp in Sources */,
				217268021726802172680000 /* static_mutex.cpp in Sources */,
				2172EB02172EB02172EB0000 /* w32_regex_traits.cpp in Sources */,
				2173A802173A802173A80000 /* wc_regex_traits.cpp in Sources */,
				21742A021742A021742A0000 /* wide_posix_api.cpp in Sources */,
				217472021747202174720000 /* winstances.cpp in Sources */,
				217535021753502175350000 /* usinstances.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		21EB94021EB94021EB940000 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				21D88D021D88D021D88D0000 /* basic_archive.cpp in Sources */,
				21D948021D948021D9480000 /* basic_iarchive.cpp in Sources */,
				21D9F3021D9F3021D9F30000 /* basic_iserializer.cpp in Sources */,
				21DAA7021DAA7021DAA70000 /* basic_oarchive.cpp in Sources */,
				21DB64021DB64021DB640000 /* basic_oserializer.cpp in Sources */,
				21DC3B021DC3B021DC3B0000 /* basic_pointer_iserializer.cpp in Sources */,
				21DCF3021DCF3021DCF30000 /* basic_pointer_oserializer.cpp in Sources */,
				21DDA4021DDA4021DDA40000 /* basic_serializer_map.cpp in Sources */,
				21DE75021DE75021DE750000 /* basic_text_iprimitive.cpp in Sources */,
				21DF35021DF35021DF350000 /* basic_text_oprimitive.cpp in Sources */,
				21DFD8021DFD8021DFD80000 /* basic_xml_archive.cpp in Sources */,
				21E0AB021E0AB021E0AB0000 /* binary_iarchive.cpp in Sources */,
				21E166021E166021E1660000 /* binary_oarchive.cpp in Sources */,
				21E211021E211021E2110000 /* extended_type_info.cpp in Sources */,
				21E2DA021E2DA021E2DA0000 /* extended_type_info_typeid.cpp in Sources */,
				21E387021E387021E3870000 /* extended_type_info_no_rtti.cpp in Sources */,
				21E44E021E44E021E44E0000 /* polymorphic_iarchive.cpp in Sources */,
				21E50F021E50F021E50F0000 /* polymorphic_oarchive.cpp in Sources */,
				21E5C1021E5C1021E5C10000 /* stl_port.cpp in Sources */,
				21E68E021E68E021E68E0000 /* text_iarchive.cpp in Sources */,
				21E74F021E74F021E74F0000 /* text_oarchive.cpp in Sources */,
				21E807021E807021E8070000 /* void_cast.cpp in Sources */,
				21E8BF021E8BF021E8BF0000 /* xml_grammar.cpp in Sources */,
				21E977021E977021E9770000 /* xml_iarchive.cpp in Sources */,
				21EA2F021EA2F021EA2F0000 /* xml_oarchive.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		2206D202206D202206D20000 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				21F4F5021F4F5021F4F50000 /* basic_archive.cpp in Sources */,
				21F57D021F57D021F57D0000 /* basic_iarchive.cpp in Sources */,
				21F612021F612021F6120000 /* basic_iserializer.cpp in Sources */,
				21F684021F684021F6840000 /* basic_oarchive.cpp in Sources */,
				21F71C021F71C021F71C0000 /* basic_oserializer.cpp in Sources */,
				21F7A2021F7A2021F7A20000 /* basic_pointer_iserializer.cpp in Sources */,
				21F82A021F82A021F82A0000 /* basic_pointer_oserializer.cpp in Sources */,
				21F89D021F89D021F89D0000 /* basic_serializer_map.cpp in Sources */,
				21F937021F937021F9370000 /* basic_text_iprimitive.cpp in Sources */,
				21F9BD021F9BD021F9BD0000 /* basic_text_oprimitive.cpp in Sources */,
				21FA30021FA30021FA300000 /* basic_xml_archive.cpp in Sources */,
				21FAF0021FAF0021FAF00000 /* binary_iarchive.cpp in Sources */,
				21FB4A021FB4A021FB4A0000 /* binary_oarchive.cpp in Sources */,
				21FBBB021FBBB021FBBB0000 /* extended_type_info.cpp in Sources */,
				220051022005102200510000 /* extended_type_info_typeid.cpp in Sources */,
				2200D402200D402200D40000 /* extended_type_info_no_rtti.cpp in Sources */,
				22015D022015D022015D0000 /* polymorphic_iarchive.cpp in Sources */,
				2201E702201E702201E70000 /* polymorphic_oarchive.cpp in Sources */,
				22026C022026C022026C0000 /* stl_port.cpp in Sources */,
				220318022031802203180000 /* text_iarchive.cpp in Sources */,
				220372022037202203720000 /* text_oarchive.cpp in Sources */,
				2203E202203E202203E20000 /* void_cast.cpp in Sources */,
				220478022047802204780000 /* xml_grammar.cpp in Sources */,
				2204E802204E802204E80000 /* xml_iarchive.cpp in Sources */,
				22057E022057E022057E0000 /* xml_oarchive.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		221F980221F980221F980000 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				22184A022184A022184A0000 /* basic_text_wiprimitive.cpp in Sources */,
				221913022191302219130000 /* basic_text_woprimitive.cpp in Sources */,
				2219CE02219CE02219CE0000 /* text_wiarchive.cpp in Sources */,
				221A860221A860221A860000 /* text_woarchive.cpp in Sources */,
				221B2B0221B2B0221B2B0000 /* utf8_codecvt_facet.cpp in Sources */,
				221BFE0221BFE0221BFE0000 /* xml_wgrammar.cpp in Sources */,
				221CB90221CB90221CB90000 /* xml_wiarchive.cpp in Sources */,
				221D740221D740221D740000 /* xml_woarchive.cpp in Sources */,
				221E1A0221E1A0221E1A0000 /* codecvt_null.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		222E9C0222E9C0222E9C0000 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				2228F902228F902228F90000 /* basic_text_wiprimitive.cpp in Sources */,
				222994022299402229940000 /* basic_text_woprimitive.cpp in Sources */,
				222A040222A040222A040000 /* text_wiarchive.cpp in Sources */,
				222A8D0222A8D0222A8D0000 /* text_woarchive.cpp in Sources */,
				222B260222B260222B260000 /* utf8_codecvt_facet.cpp in Sources */,
				222B990222B990222B990000 /* xml_wgrammar.cpp in Sources */,
				222C220222C220222C220000 /* xml_wiarchive.cpp in Sources */,
				222CA60222CA60222CA60000 /* xml_woarchive.cpp in Sources */,
				222D2C0222D2C0222D2C0000 /* codecvt_null.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		22721C022721C022721C0000 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				2270A702270A702270A70000 /* read_graphviz_spirit.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		227CFC0227CFC0227CFC0000 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				227B4D0227B4D0227B4D0000 /* read_graphviz_spirit.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		22AC3F022AC3F022AC3F0000 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				2296B802296B802296B80000 /* numeric.cpp in Sources */,
				229773022977302297730000 /* list.cpp in Sources */,
				22982F022982F022982F0000 /* long.cpp in Sources */,
				2298E702298E702298E70000 /* dict.cpp in Sources */,
				2299AA02299AA02299AA0000 /* tuple.cpp in Sources */,
				229A660229A660229A660000 /* str.cpp in Sources */,
				229B1F0229B1F0229B1F0000 /* slice.cpp in Sources */,
				229BDE0229BDE0229BDE0000 /* from_python.cpp in Sources */,
				229CB10229CB10229CB10000 /* registry.cpp in Sources */,
				229D6F0229D6F0229D6F0000 /* type_id.cpp in Sources */,
				229E150229E150229E150000 /* enum.cpp in Sources */,
				229ED40229ED40229ED40000 /* class.cpp in Sources */,
				229F940229F940229F940000 /* function.cpp in Sources */,
				22A06D022A06D022A06D0000 /* inheritance.cpp in Sources */,
				22A111022A111022A1110000 /* life_support.cpp in Sources */,
				22A1D2022A1D2022A1D20000 /* pickle_support.cpp in Sources */,
				22A294022A294022A2940000 /* errors.cpp in Sources */,
				22A352022A352022A3520000 /* module.cpp in Sources */,
				22A42A022A42A022A42A0000 /* builtin_converters.cpp in Sources */,
				22A4EA022A4EA022A4EA0000 /* arg_to_python_base.cpp in Sources */,
				22A58C022A58C022A58C0000 /* iterator.cpp in Sources */,
				22A64C022A64C022A64C0000 /* stl_iterator.cpp in Sources */,
				22A757022A757022A7570000 /* object_protocol.cpp in Sources */,
				22A7DB022A7DB022A7DB0000 /* object_operators.cpp in Sources */,
				22A884022A884022A8840000 /* wrapper.cpp in Sources */,
				22A93F022A93F022A93F0000 /* import.cpp in Sources */,
				22A9F9022A9F9022A9F90000 /* exec.cpp in Sources */,
				22AAD7022AAD7022AAD70000 /* function_doc_signature.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		22C54A022C54A022C54A0000 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				22B519022B519022B5190000 /* numeric.cpp in Sources */,
				22B639022B639022B6390000 /* list.cpp in Sources */,
				22B6BD022B6BD022B6BD0000 /* long.cpp in Sources */,
				22B733022B733022B7330000 /* dict.cpp in Sources */,
				22B7C9022B7C9022B7C90000 /* tuple.cpp in Sources */,
				22B83E022B83E022B83E0000 /* str.cpp in Sources */,
				22B8C2022B8C2022B8C20000 /* slice.cpp in Sources */,
				22B986022B986022B9860000 /* from_python.cpp in Sources */,
				22B9D2022B9D2022B9D20000 /* registry.cpp in Sources */,
				22BA9C022BA9C022BA9C0000 /* type_id.cpp in Sources */,
				22BAE7022BAE7022BAE70000 /* enum.cpp in Sources */,
				22BBA7022BBA7022BBA70000 /* class.cpp in Sources */,
				22BBF3022BBF3022BBF30000 /* function.cpp in Sources */,
				22BCB7022BCB7022BCB70000 /* inheritance.cpp in Sources */,
				22BD03022BD03022BD030000 /* life_support.cpp in Sources */,
				22BDC7022BDC7022BDC70000 /* pickle_support.cpp in Sources */,
				22BE4F022BE4F022BE4F0000 /* errors.cpp in Sources */,
				22BE9C022BE9C022BE9C0000 /* module.cpp in Sources */,
				22BF32022BF32022BF320000 /* builtin_converters.cpp in Sources */,
				22BFBE022BFBE022BFBE0000 /* arg_to_python_base.cpp in Sources */,
				22C06E022C06E022C06E0000 /* iterator.cpp in Sources */,
				22C0BA022C0BA022C0BA0000 /* stl_iterator.cpp in Sources */,
				22C17E022C17E022C17E0000 /* object_protocol.cpp in Sources */,
				22C1C7022C1C7022C1C70000 /* object_operators.cpp in Sources */,
				22C24D022C24D022C24D0000 /* wrapper.cpp in Sources */,
				22C2D1022C2D1022C2D10000 /* import.cpp in Sources */,
				22C355022C355022C3550000 /* exec.cpp in Sources */,
				22C3EF022C3EF022C3EF0000 /* function_doc_signature.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		22E08D022E08D022E08D0000 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				22DF24022DF24022DF240000 /* main.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		22FB6C022FB6C022FB6C0000 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				22F9ED022F9ED022F9ED0000 /* error_code.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		230A3C0230A3C0230A3C0000 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				2308C702308C702308C70000 /* error_code.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		236809023680902368090000 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				236532023653202365320000 /* execution_monitor.cpp in Sources */,
				2365DB02365DB02365DB0000 /* cpp_main.cpp in Sources */,
				236692023669202366920000 /* debug.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		2373F002373F002373F00000 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				237198023719802371980000 /* execution_monitor.cpp in Sources */,
				23720B023720B023720B0000 /* cpp_main.cpp in Sources */,
				23729F023729F023729F0000 /* debug.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		239233023923302392330000 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				23857A023857A023857A0000 /* compiler_log_formatter.cpp in Sources */,
				23860F023860F023860F0000 /* debug.cpp in Sources */,
				238691023869102386910000 /* execution_monitor.cpp in Sources */,
				23873C023873C023873C0000 /* framework.cpp in Sources */,
				238804023880402388040000 /* plain_report_formatter.cpp in Sources */,
				2388B102388B102388B10000 /* progress_monitor.cpp in Sources */,
				23896E023896E023896E0000 /* results_collector.cpp in Sources */,
				238A2B0238A2B0238A2B0000 /* results_reporter.cpp in Sources */,
				238AE70238AE70238AE70000 /* test_main.cpp in Sources */,
				238BA00238BA00238BA00000 /* test_tools.cpp in Sources */,
				238C580238C580238C580000 /* unit_test_log.cpp in Sources */,
				238D5B0238D5B0238D5B0000 /* unit_test_main.cpp in Sources */,
				238DCC0238DCC0238DCC0000 /* unit_test_monitor.cpp in Sources */,
				238E940238E940238E940000 /* unit_test_parameters.cpp in Sources */,
				238F890238F890238F890000 /* unit_test_suite.cpp in Sources */,
				238FFA0238FFA0238FFA0000 /* xml_log_formatter.cpp in Sources */,
				2390C602390C602390C60000 /* xml_report_formatter.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		23A556023A556023A5560000 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				239B4E0239B4E0239B4E0000 /* compiler_log_formatter.cpp in Sources */,
				239C160239C160239C160000 /* debug.cpp in Sources */,
				239CDF0239CDF0239CDF0000 /* execution_monitor.cpp in Sources */,
				239D1E0239D1E0239D1E0000 /* framework.cpp in Sources */,
				239DAA0239DAA0239DAA0000 /* plain_report_formatter.cpp in Sources */,
				239E340239E340239E340000 /* progress_monitor.cpp in Sources */,
				239EBA0239EBA0239EBA0000 /* results_collector.cpp in Sources */,
				239F400239F400239F400000 /* results_reporter.cpp in Sources */,
				239FC70239FC70239FC70000 /* test_main.cpp in Sources */,
				23A044023A044023A0440000 /* test_tools.cpp in Sources */,
				23A0CE023A0CE023A0CE0000 /* unit_test_log.cpp in Sources */,
				23A18B023A18B023A18B0000 /* unit_test_main.cpp in Sources */,
				23A20F023A20F023A20F0000 /* unit_test_monitor.cpp in Sources */,
				23A256023A256023A2560000 /* unit_test_parameters.cpp in Sources */,
				23A2F0023A2F0023A2F00000 /* unit_test_suite.cpp in Sources */,
				23A360023A360023A3600000 /* xml_log_formatter.cpp in Sources */,
				23A3E8023A3E8023A3E80000 /* xml_report_formatter.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		23C212023C212023C2120000 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				23B542023B542023B5420000 /* compiler_log_formatter.cpp in Sources */,
				23B759023B759023B7590000 /* debug.cpp in Sources */,
				23B7CE023B7CE023B7CE0000 /* exception_safety.cpp in Sources */,
				23B8A1023B8A1023B8A10000 /* execution_monitor.cpp in Sources */,
				23B8EA023B8EA023B8EA0000 /* framework.cpp in Sources */,
				23B997023B997023B9970000 /* interaction_based.cpp in Sources */,
				23BA53023BA53023BA530000 /* logged_expectations.cpp in Sources */,
				23BB26023BB26023BB260000 /* plain_report_formatter.cpp in Sources */,
				23BB70023BB70023BB700000 /* progress_monitor.cpp in Sources */,
				23BBF6023BBF6023BBF60000 /* results_collector.cpp in Sources */,
				23BC7A023BC7A023BC7A0000 /* results_reporter.cpp in Sources */,
				23BD3E023BD3E023BD3E0000 /* test_tools.cpp in Sources */,
				23BDC0023BDC0023BDC00000 /* unit_test_log.cpp in Sources */,
				23BE06023BE06023BE060000 /* unit_test_main.cpp in Sources */,
				23BE9E023BE9E023BE9E0000 /* unit_test_monitor.cpp in Sources */,
				23BF50023BF50023BF500000 /* unit_test_parameters.cpp in Sources */,
				23BF9C023BF9C023BF9C0000 /* unit_test_suite.cpp in Sources */,
				23C023023C023023C0230000 /* xml_log_formatter.cpp in Sources */,
				23C0A7023C0A7023C0A70000 /* xml_report_formatter.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		23D643023D643023D6430000 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				23CB34023CB34023CB340000 /* compiler_log_formatter.cpp in Sources */,
				23CBFC023CBFC023CBFC0000 /* debug.cpp in Sources */,
				23CC86023CC86023CC860000 /* exception_safety.cpp in Sources */,
				23CD0D023CD0D023CD0D0000 /* execution_monitor.cpp in Sources */,
				23CD90023CD90023CD900000 /* framework.cpp in Sources */,
				23CE11023CE11023CE110000 /* interaction_based.cpp in Sources */,
				23CE97023CE97023CE970000 /* logged_expectations.cpp in Sources */,
				23CF1E023CF1E023CF1E0000 /* plain_report_formatter.cpp in Sources */,
				23CFA4023CFA4023CFA40000 /* progress_monitor.cpp in Sources */,
				23D069023D069023D0690000 /* results_collector.cpp in Sources */,
				23D0B1023D0B1023D0B10000 /* results_reporter.cpp in Sources */,
				23D133023D133023D1330000 /* test_tools.cpp in Sources */,
				23D1B6023D1B6023D1B60000 /* unit_test_log.cpp in Sources */,
				23D233023D233023D2330000 /* unit_test_main.cpp in Sources */,
				23D2FB023D2FB023D2FB0000 /* unit_test_monitor.cpp in Sources */,
				23D341023D341023D3410000 /* unit_test_parameters.cpp in Sources */,
				23D3CA023D3CA023D3CA0000 /* unit_test_suite.cpp in Sources */,
				23D454023D454023D4540000 /* xml_log_formatter.cpp in Sources */,
				23D4D9023D4D9023D4D90000 /* xml_report_formatter.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		23FBD1023FBD1023FBD10000 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				23F82F023F82F023F82F0000 /* operations.cpp in Sources */,
				23F8D5023F8D5023F8D50000 /* path.cpp in Sources */,
				23F9AA023F9AA023F9AA0000 /* portability.cpp in Sources */,
				23FA55023FA55023FA550000 /* utf8_codecvt_facet.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		240C3E0240C3E0240C3E0000 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				240946024094602409460000 /* operations.cpp in Sources */,
				2409BC02409BC02409BC0000 /* path.cpp in Sources */,
				240A7D0240A7D0240A7D0000 /* portability.cpp in Sources */,
				240AC60240AC60240AC60000 /* utf8_codecvt_facet.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		244C260244C260244C260000 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				243E3D0243E3D0243E3D0000 /* broadcast.cpp in Sources */,
				243EFC0243EFC0243EFC0000 /* communicator.cpp in Sources */,
				243FB50243FB50243FB50000 /* computation_tree.cpp in Sources */,
				244071024407102440710000 /* content_oarchive.cpp in Sources */,
				24412E024412E024412E0000 /* environment.cpp in Sources */,
				2441E802441E802441E80000 /* exception.cpp in Sources */,
				2442A102442A102442A10000 /* graph_communicator.cpp in Sources */,
				24435B024435B024435B0000 /* group.cpp in Sources */,
				244417024441702444170000 /* intercommunicator.cpp in Sources */,
				2444D702444D702444D70000 /* mpi_datatype_cache.cpp in Sources */,
				244592024459202445920000 /* mpi_datatype_oarchive.cpp in Sources */,
				244695024469502446950000 /* packed_iarchive.cpp in Sources */,
				24474F024474F024474F0000 /* packed_oarchive.cpp in Sources */,
				2447C102447C102447C10000 /* packed_skeleton_iarchive.cpp in Sources */,
				24487D024487D024487D0000 /* packed_skeleton_oarchive.cpp in Sources */,
				244938024493802449380000 /* point_to_point.cpp in Sources */,
				2449F102449F102449F10000 /* request.cpp in Sources */,
				244AAE0244AAE0244AAE0000 /* text_skeleton_oarchive.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		245FDD0245FDD0245FDD0000 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				245539024553902455390000 /* broadcast.cpp in Sources */,
				245629024562902456290000 /* communicator.cpp in Sources */,
				24569B024569B024569B0000 /* computation_tree.cpp in Sources */,
				245723024572302457230000 /* content_oarchive.cpp in Sources */,
				2457C002457C002457C00000 /* environment.cpp in Sources */,
				245832024583202458320000 /* exception.cpp in Sources */,
				2458B602458B602458B60000 /* graph_communicator.cpp in Sources */,
				24593A024593A024593A0000 /* group.cpp in Sources */,
				2459D202459D202459D20000 /* intercommunicator.cpp in Sources */,
				245A480245A480245A480000 /* mpi_datatype_cache.cpp in Sources */,
				245AD10245AD10245AD10000 /* mpi_datatype_oarchive.cpp in Sources */,
				245B930245B930245B930000 /* packed_iarchive.cpp in Sources */,
				245BDB0245BDB0245BDB0000 /* packed_oarchive.cpp in Sources */,
				245C600245C600245C600000 /* packed_skeleton_iarchive.cpp in Sources */,
				245CF90245CF90245CF90000 /* packed_skeleton_oarchive.cpp in Sources */,
				245DA40245DA40245DA40000 /* point_to_point.cpp in Sources */,
				245DEC0245DEC0245DEC0000 /* request.cpp in Sources */,
				245E750245E750245E750000 /* text_skeleton_oarchive.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		2473B402473B402473B40000 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				247181024718102471810000 /* mpi_process_group.cpp in Sources */,
				247254024725402472540000 /* tag_allocator.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		247F0B0247F0B0247F0B0000 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				247CD60247CD60247CD60000 /* mpi_process_group.cpp in Sources */,
				247DA60247DA60247DA60000 /* tag_allocator.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		249C900249C900249C900000 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				2498F702498F702498F70000 /* file_descriptor.cpp in Sources */,
				24999A024999A024999A0000 /* mapped_file.cpp in Sources */,
				249A610249A610249A610000 /* zlib.cpp in Sources */,
				249B0D0249B0D0249B0D0000 /* bzip2.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		24A8E4024A8E4024A8E40000 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				24A5EF024A5EF024A5EF0000 /* file_descriptor.cpp in Sources */,
				24A676024A676024A6760000 /* mapped_file.cpp in Sources */,
				24A6F5024A6F5024A6F50000 /* zlib.cpp in Sources */,
				24A776024A776024A7760000 /* bzip2.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		24DAFA024DAFA024DAFA0000 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				24D2FC024D2FC024D2FC0000 /* cmdline.cpp in Sources */,
				24D3BC024D3BC024D3BC0000 /* config_file.cpp in Sources */,
				24D47D024D47D024D47D0000 /* options_description.cpp in Sources */,
				24D520024D520024D5200000 /* parsers.cpp in Sources */,
				24D5DD024D5DD024D5DD0000 /* variables_map.cpp in Sources */,
				24D6B0024D6B0024D6B00000 /* value_semantic.cpp in Sources */,
				24D758024D758024D7580000 /* positional_options.cpp in Sources */,
				24D80C024D80C024D80C0000 /* utf8_codecvt_facet.cpp in Sources */,
				24D8DA024D8DA024D8DA0000 /* convert.cpp in Sources */,
				24D99A024D99A024D99A0000 /* winmain.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		24EA83024EA83024EA830000 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				24E403024E403024E4030000 /* cmdline.cpp in Sources */,
				24E4E7024E4E7024E4E70000 /* config_file.cpp in Sources */,
				24E5AB024E5AB024E5AB0000 /* options_description.cpp in Sources */,
				24E5F3024E5F3024E5F30000 /* parsers.cpp in Sources */,
				24E679024E679024E6790000 /* variables_map.cpp in Sources */,
				24E73F024E73F024E73F0000 /* value_semantic.cpp in Sources */,
				24E799024E799024E7990000 /* positional_options.cpp in Sources */,
				24E81E024E81E024E81E0000 /* utf8_codecvt_facet.cpp in Sources */,
				24E8D3024E8D3024E8D30000 /* convert.cpp in Sources */,
				24E958024E958024E9580000 /* winmain.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		2514AC02514AC02514AC0000 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				251056025105602510560000 /* trackable.cpp in Sources */,
				251107025110702511070000 /* connection.cpp in Sources */,
				2511D002511D002511D00000 /* named_slot_map.cpp in Sources */,
				25128A025128A025128A0000 /* signal_base.cpp in Sources */,
				25132F025132F025132F0000 /* slot.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		252194025219402521940000 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				251E1A0251E1A0251E1A0000 /* trackable.cpp in Sources */,
				251E990251E990251E990000 /* connection.cpp in Sources */,
				251F1C0251F1C0251F1C0000 /* named_slot_map.cpp in Sources */,
				251FDE0251FDE0251FDE0000 /* signal_base.cpp in Sources */,
				252025025202502520250000 /* slot.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		256461025646102564610000 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				255B900255B900255B900000 /* instantiate_cpp_exprgrammar.cpp in Sources */,
				255C5E0255C5E0255C5E0000 /* instantiate_cpp_grammar.cpp in Sources */,
				255D0B0255D0B0255D0B0000 /* instantiate_cpp_literalgrs.cpp in Sources */,
				255DC70255DC70255DC70000 /* instantiate_defined_grammar.cpp in Sources */,
				255E850255E850255E850000 /* instantiate_predef_macros.cpp in Sources */,
				255F510255F510255F510000 /* instantiate_re2c_lexer.cpp in Sources */,
				25600C025600C025600C0000 /* instantiate_re2c_lexer_str.cpp in Sources */,
				2560B602560B602560B60000 /* token_ids.cpp in Sources */,
				25617F025617F025617F0000 /* wave_config_constant.cpp in Sources */,
				256241025624102562410000 /* aq.cpp in Sources */,
				2562FB02562FB02562FB0000 /* cpp_re.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		257462025746202574620000 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				256DBF0256DBF0256DBF0000 /* instantiate_cpp_exprgrammar.cpp in Sources */,
				256E470256E470256E470000 /* instantiate_cpp_grammar.cpp in Sources */,
				256ECD0256ECD0256ECD0000 /* instantiate_cpp_literalgrs.cpp in Sources */,
				256F660256F660256F660000 /* instantiate_defined_grammar.cpp in Sources */,
				256FEB0256FEB0256FEB0000 /* instantiate_predef_macros.cpp in Sources */,
				257070025707002570700000 /* instantiate_re2c_lexer.cpp in Sources */,
				2570E202570E202570E20000 /* instantiate_re2c_lexer_str.cpp in Sources */,
				257166025716602571660000 /* token_ids.cpp in Sources */,
				257202025720202572020000 /* wave_config_constant.cpp in Sources */,
				257288025728802572880000 /* aq.cpp in Sources */,
				257336025733602573360000 /* cpp_re.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		2586BC02586BC02586BC0000 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				257DBC0257DBC0257DBC0000 /* add_path.cpp in Sources */,
				257E710257E710257E710000 /* bcp_imp.cpp in Sources */,
				257F280257F280257F280000 /* copy_path.cpp in Sources */,
				257FDF0257FDF0257FDF0000 /* file_types.cpp in Sources */,
				258096025809602580960000 /* fileview.cpp in Sources */,
				258153025815302581530000 /* main.cpp in Sources */,
				258233025823302582330000 /* path_operations.cpp in Sources */,
				2582C202582C202582C20000 /* scan_cvs_path.cpp in Sources */,
				258379025837902583790000 /* licence_info.cpp in Sources */,
				258437025843702584370000 /* scan_licence.cpp in Sources */,
				258513025851302585130000 /* output_licence_info.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		2598CD02598CD02598CD0000 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				258F7A0258F7A0258F7A0000 /* inspect.cpp in Sources */,
				25909E025909E025909E0000 /* license_check.cpp in Sources */,
				259156025915602591560000 /* link_check.cpp in Sources */,
				259258025925802592580000 /* path_name_check.cpp in Sources */,
				2592CA02592CA02592CA0000 /* tab_check.cpp in Sources */,
				259385025938502593850000 /* crlf_check.cpp in Sources */,
				25943D025943D025943D0000 /* end_check.cpp in Sources */,
				2594F802594F802594F80000 /* unnamed_namespace_check.cpp in Sources */,
				2595B002595B002595B00000 /* ascii_check.cpp in Sources */,
				25966B025966B025966B0000 /* copyright_check.cpp in Sources */,
				259723025972302597230000 /* minmax_check.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXSourcesBuildPhase section */

/* Begin PBXTargetDependency section */
		25A247025A247025A2470000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 21098F021098F021098F0000 /* libboost_date_time-mt.a */;
			targetProxy = 25A208025A208025A2080000 /* PBXContainerItemProxy */;
		};
		25A2C0025A2C0025A2C00000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 21156A021156A021156A0000 /* libboost_date_time-mt-d.a */;
			targetProxy = 25A279025A279025A2790000 /* PBXContainerItemProxy */;
		};
		25A339025A339025A3390000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 2131FC02131FC02131FC0000 /* libboost_thread-mt.a */;
			targetProxy = 25A2EF025A2EF025A2EF0000 /* PBXContainerItemProxy */;
		};
		25A3AE025A3AE025A3AE0000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 213DD70213DD70213DD70000 /* libboost_thread-mt-d.a */;
			targetProxy = 25A367025A367025A3670000 /* PBXContainerItemProxy */;
		};
		25A42B025A42B025A42B0000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 21647E021647E021647E0000 /* libboost_regex-mt.a */;
			targetProxy = 25A3E4025A3E4025A3E40000 /* PBXContainerItemProxy */;
		};
		25A4A7025A4A7025A4A70000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 21778E021778E021778E0000 /* libboost_regex-mt-d.a */;
			targetProxy = 25A45C025A45C025A45C0000 /* PBXContainerItemProxy */;
		};
		25A521025A521025A5210000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 21ECAF021ECAF021ECAF0000 /* libboost_serialization-mt.a */;
			targetProxy = 25A4DD025A4DD025A4DD0000 /* PBXContainerItemProxy */;
		};
		25A59B025A59B025A59B0000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 2207F002207F002207F00000 /* libboost_serialization-mt-d.a */;
			targetProxy = 25A557025A557025A5570000 /* PBXContainerItemProxy */;
		};
		25A615025A615025A6150000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 2220B002220B002220B00000 /* libboost_wserialization-mt.a */;
			targetProxy = 25A5D1025A5D1025A5D10000 /* PBXContainerItemProxy */;
		};
		25A695025A695025A6950000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 222FB50222FB50222FB50000 /* libboost_wserialization-mt-d.a */;
			targetProxy = 25A64B025A64B025A64B0000 /* PBXContainerItemProxy */;
		};
		25A707025A707025A7070000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 227338022733802273380000 /* libboost_graph-mt.a */;
			targetProxy = 25A6C0025A6C0025A6C00000 /* PBXContainerItemProxy */;
		};
		25A77F025A77F025A77F0000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 227E170227E170227E170000 /* libboost_graph-mt-d.a */;
			targetProxy = 25A738025A738025A7380000 /* PBXContainerItemProxy */;
		};
		25A7F7025A7F7025A7F70000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 22AD65022AD65022AD650000 /* libboost_python-mt.a */;
			targetProxy = 25A7B0025A7B0025A7B00000 /* PBXContainerItemProxy */;
		};
		25A86F025A86F025A86F0000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 22C670022C670022C6700000 /* libboost_python-mt-d.a */;
			targetProxy = 25A828025A828025A8280000 /* PBXContainerItemProxy */;
		};
		25A8E7025A8E7025A8E70000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 22E19E022E19E022E19E0000 /* accumulators-accumulators_example */;
			targetProxy = 25A8A0025A8A0025A8A00000 /* PBXContainerItemProxy */;
		};
		25A95F025A95F025A95F0000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 2300AE02300AE02300AE0000 /* libboost_system-mt.a */;
			targetProxy = 25A918025A918025A9180000 /* PBXContainerItemProxy */;
		};
		25A9D7025A9D7025A9D70000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 230B560230B560230B560000 /* libboost_system-mt-d.a */;
			targetProxy = 25A990025A990025A9900000 /* PBXContainerItemProxy */;
		};
		25AA54025AA54025AA540000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 236926023692602369260000 /* libboost_prg_exec_monitor-mt.a */;
			targetProxy = 25AA06025AA06025AA060000 /* PBXContainerItemProxy */;
		};
		25AAD4025AAD4025AAD40000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 23750E023750E023750E0000 /* libboost_prg_exec_monitor-mt-d.a */;
			targetProxy = 25AA85025AA85025AA850000 /* PBXContainerItemProxy */;
		};
		25AB45025AB45025AB450000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 239359023935902393590000 /* libboost_test_exec_monitor-mt.a */;
			targetProxy = 25AAFE025AAFE025AAFE0000 /* PBXContainerItemProxy */;
		};
		25ABC5025ABC5025ABC50000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 23A67D023A67D023A67D0000 /* libboost_test_exec_monitor-mt-d.a */;
			targetProxy = 25AB76025AB76025AB760000 /* PBXContainerItemProxy */;
		};
		25AC36025AC36025AC360000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 23C33D023C33D023C33D0000 /* libboost_unit_test_framework-mt.a */;
			targetProxy = 25ABEF025ABEF025ABEF0000 /* PBXContainerItemProxy */;
		};
		25ACB6025ACB6025ACB60000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 23D769023D769023D7690000 /* libboost_unit_test_framework-mt-d.a */;
			targetProxy = 25AC67025AC67025AC670000 /* PBXContainerItemProxy */;
		};
		25AD27025AD27025AD270000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 2400DF02400DF02400DF0000 /* libboost_filesystem-mt.a */;
			targetProxy = 25ACE0025ACE0025ACE00000 /* PBXContainerItemProxy */;
		};
		25AD9F025AD9F025AD9F0000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 240D4E0240D4E0240D4E0000 /* libboost_filesystem-mt-d.a */;
			targetProxy = 25AD58025AD58025AD580000 /* PBXContainerItemProxy */;
		};
		25AE1F025AE1F025AE1F0000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 244D500244D500244D500000 /* libboost_mpi-mt.a */;
			targetProxy = 25ADD0025ADD0025ADD00000 /* PBXContainerItemProxy */;
		};
		25AE8E025AE8E025AE8E0000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 246103024610302461030000 /* libboost_mpi-mt-d.a */;
			targetProxy = 25AE47025AE47025AE470000 /* PBXContainerItemProxy */;
		};
		25AF06025AF06025AF060000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 2474CD02474CD02474CD0000 /* libboost_graph_parallel-mt.a */;
			targetProxy = 25AEBF025AEBF025AEBF0000 /* PBXContainerItemProxy */;
		};
		25AF86025AF86025AF860000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 248024024802402480240000 /* libboost_graph_parallel-mt-d.a */;
			targetProxy = 25AF37025AF37025AF370000 /* PBXContainerItemProxy */;
		};
		25AFF7025AFF7025AFF70000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 249DA50249DA50249DA50000 /* libboost_iostreams-mt.a */;
			targetProxy = 25AFB0025AFB0025AFB00000 /* PBXContainerItemProxy */;
		};
		25B06F025B06F025B06F0000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 24A9F5024A9F5024A9F50000 /* libboost_iostreams-mt-d.a */;
			targetProxy = 25B028025B028025B0280000 /* PBXContainerItemProxy */;
		};
		25B0E7025B0E7025B0E70000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 24DC17024DC17024DC170000 /* libboost_program_options-mt.a */;
			targetProxy = 25B0A0025B0A0025B0A00000 /* PBXContainerItemProxy */;
		};
		25B167025B167025B1670000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 24EB9C024EB9C024EB9C0000 /* libboost_program_options-mt-d.a */;
			targetProxy = 25B118025B118025B1180000 /* PBXContainerItemProxy */;
		};
		25B1E3025B1E3025B1E30000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 2515C202515C202515C20000 /* libboost_signals-mt.a */;
			targetProxy = 25AA0F025AA0F025AA0F0000 /* PBXContainerItemProxy */;
		};
		25B25D025B25D025B25D0000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 2522A702522A702522A70000 /* libboost_signals-mt-d.a */;
			targetProxy = 25B219025B219025B2190000 /* PBXContainerItemProxy */;
		};
		25B2D7025B2D7025B2D70000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 256585025658502565850000 /* libboost_wave-mt.a */;
			targetProxy = 25B293025B293025B2930000 /* PBXContainerItemProxy */;
		};
		25B351025B351025B3510000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 257582025758202575820000 /* libboost_wave-mt-d.a */;
			targetProxy = 25B30D025B30D025B30D0000 /* PBXContainerItemProxy */;
		};
		25B3CB025B3CB025B3CB0000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 2587E102587E102587E10000 /* bcp */;
			targetProxy = 25B387025B387025B3870000 /* PBXContainerItemProxy */;
		};
		25B449025B449025B4490000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 2599F302599F302599F30000 /* inspect */;
			targetProxy = 25B3FA025B3FA025B3FA0000 /* PBXContainerItemProxy */;
		};
		25B4D2025B4D2025B4D20000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 1FF44201FF44201FF4420000 /* ALL_BUILD */;
			targetProxy = 25B473025B473025B4730000 /* PBXContainerItemProxy */;
		};
		25B55D025B55D025B55D0000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 201701020170102017010000 /* preprocessor-modularize */;
			targetProxy = 25B4FE025B4FE025B4FE0000 /* PBXContainerItemProxy */;
		};
		25B5CF025B5CF025B5CF0000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 201F4B0201F4B0201F4B0000 /* concept_check-modularize */;
			targetProxy = 25B588025B588025B5880000 /* PBXContainerItemProxy */;
		};
		25B648025B648025B6480000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 2027AF02027AF02027AF0000 /* property_map-modularize */;
			targetProxy = 25B5FE025B5FE025B5FE0000 /* PBXContainerItemProxy */;
		};
		25B6C8025B6C8025B6C80000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 203032020303202030320000 /* config-modularize */;
			targetProxy = 25B676025B676025B6760000 /* PBXContainerItemProxy */;
		};
		25B73F025B73F025B73F0000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 203877020387702038770000 /* mpl-modularize */;
			targetProxy = 25B6F0025B6F0025B6F00000 /* PBXContainerItemProxy */;
		};
		25B7B2025B7B2025B7B20000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 204085020408502040850000 /* type_traits-modularize */;
			targetProxy = 25B767025B767025B7670000 /* PBXContainerItemProxy */;
		};
		25B82E025B82E025B82E0000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 204899020489902048990000 /* function-modularize */;
			targetProxy = 25B7E8025B7E8025B7E80000 /* PBXContainerItemProxy */;
		};
		25B8AC025B8AC025B8AC0000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 2050A802050A802050A80000 /* iterator-modularize */;
			targetProxy = 25B85D025B85D025B85D0000 /* PBXContainerItemProxy */;
		};
		25B91B025B91B025B91B0000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 2058B702058B702058B70000 /* smart_ptr-modularize */;
			targetProxy = 25B8D4025B8D4025B8D40000 /* PBXContainerItemProxy */;
		};
		25B992025B992025B9920000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 2060C302060C302060C30000 /* exception-modularize */;
			targetProxy = 25B953025B953025B9530000 /* PBXContainerItemProxy */;
		};
		25BA17025BA17025BA170000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 2068D502068D502068D50000 /* utility-modularize */;
			targetProxy = 25B9C8025B9C8025B9C80000 /* PBXContainerItemProxy */;
		};
		25BA8E025BA8E025BA8E0000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 2070DD02070DD02070DD0000 /* integer-modularize */;
			targetProxy = 25BA3F025BA3F025BA3F0000 /* PBXContainerItemProxy */;
		};
		25BB05025BB05025BB050000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 2078E802078E802078E80000 /* detail-modularize */;
			targetProxy = 25BAB6025BAB6025BAB60000 /* PBXContainerItemProxy */;
		};
		25BB74025BB74025BB740000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 2080F302080F302080F30000 /* static_assert-modularize */;
			targetProxy = 25BB2D025BB2D025BB2D0000 /* PBXContainerItemProxy */;
		};
		25BBF4025BBF4025BBF40000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 208907020890702089070000 /* tuple-modularize */;
			targetProxy = 25BBA5025BBA5025BBA50000 /* PBXContainerItemProxy */;
		};
		25BC63025BC63025BC630000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 209111020911102091110000 /* function_types-modularize */;
			targetProxy = 25BC1C025BC1C025BC1C0000 /* PBXContainerItemProxy */;
		};
		25BCE3025BCE3025BCE30000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 209929020992902099290000 /* fusion-modularize */;
			targetProxy = 25BC94025BC94025BC940000 /* PBXContainerItemProxy */;
		};
		25BD5F025BD5F025BD5F0000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 20A12A020A12A020A12A0000 /* typeof-modularize */;
			targetProxy = 25BD09025BD09025BD090000 /* PBXContainerItemProxy */;
		};
		25BDD6025BDD6025BDD60000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 20A934020A934020A9340000 /* proto-modularize */;
			targetProxy = 25BD87025BD87025BD870000 /* PBXContainerItemProxy */;
		};
		25BE45025BE45025BE450000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 20B135020B135020B1350000 /* intrusive-modularize */;
			targetProxy = 25BDFE025BDFE025BDFE0000 /* PBXContainerItemProxy */;
		};
		25BEC5025BEC5025BEC50000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 20B949020B949020B9490000 /* logic-modularize */;
			targetProxy = 25BE76025BE76025BE760000 /* PBXContainerItemProxy */;
		};
		25BF3C025BF3C025BF3C0000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 20C14F020C14F020C14F0000 /* numeric-modularize */;
			targetProxy = 25BEED025BEED025BEED0000 /* PBXContainerItemProxy */;
		};
		25BFAB025BFAB025BFAB0000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 20C951020C951020C9510000 /* xpressive-modularize */;
			targetProxy = 25BF64025BF64025BF640000 /* PBXContainerItemProxy */;
		};
		25C02B025C02B025C02B0000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 20D15A020D15A020D15A0000 /* optional-modularize */;
			targetProxy = 25BFDC025BFDC025BFDC0000 /* PBXContainerItemProxy */;
		};
		25C09A025C09A025C09A0000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 20D96B020D96B020D96B0000 /* tokenizer-modularize */;
			targetProxy = 25C053025C053025C0530000 /* PBXContainerItemProxy */;
		};
		25C11A025C11A025C11A0000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 20E17D020E17D020E17D0000 /* io-modularize */;
			targetProxy = 25C0CB025C0CB025C0CB0000 /* PBXContainerItemProxy */;
		};
		25C191025C191025C1910000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 20E992020E992020E9920000 /* bind-modularize */;
			targetProxy = 25C142025C142025C1420000 /* PBXContainerItemProxy */;
		};
		25C200025C200025C2000000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 20F19A020F19A020F19A0000 /* date_time-modularize */;
			targetProxy = 25C1B9025C1B9025C1B90000 /* PBXContainerItemProxy */;
		};
		25C280025C280025C2800000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 211E100211E100211E100000 /* thread-modularize */;
			targetProxy = 25C231025C231025C2310000 /* PBXContainerItemProxy */;
		};
		25C2F7025C2F7025C2F70000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 214660021466002146600000 /* regex-modularize */;
			targetProxy = 25C2A8025C2A8025C2A80000 /* PBXContainerItemProxy */;
		};
		25C366025C366025C3660000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 218025021802502180250000 /* algorithm-modularize */;
			targetProxy = 25C31F025C31F025C31F0000 /* PBXContainerItemProxy */;
		};
		25C3E6025C3E6025C3E60000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 21882A021882A021882A0000 /* range-modularize */;
			targetProxy = 25C397025C397025C3970000 /* PBXContainerItemProxy */;
		};
		25C45D025C45D025C45D0000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 21902C021902C021902C0000 /* foreach-modularize */;
			targetProxy = 25C40E025C40E025C40E0000 /* PBXContainerItemProxy */;
		};
		25C4D9025C4D9025C4D90000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 21982E021982E021982E0000 /* array-modularize */;
			targetProxy = 25BD12025BD12025BD120000 /* PBXContainerItemProxy */;
		};
		25C54F025C54F025C54F0000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 21A036021A036021A0360000 /* functional-modularize */;
			targetProxy = 25C508025C508025C5080000 /* PBXContainerItemProxy */;
		};
		25C5C7025C5C7025C5C70000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 21A84B021A84B021A84B0000 /* unordered-modularize */;
			targetProxy = 25C580025C580025C5800000 /* PBXContainerItemProxy */;
		};
		25C647025C647025C6470000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 21B059021B059021B0590000 /* pool-modularize */;
			targetProxy = 25C5F8025C5F8025C5F80000 /* PBXContainerItemProxy */;
		};
		25C6BE025C6BE025C6BE0000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 21B860021B860021B8600000 /* spirit-modularize */;
			targetProxy = 25C66F025C66F025C66F0000 /* PBXContainerItemProxy */;
		};
		25C737025C737025C7370000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 21C061021C061021C0610000 /* variant-modularize */;
			targetProxy = 25C6E8025C6E8025C6E80000 /* PBXContainerItemProxy */;
		};
		25C7A9025C7A9025C7A90000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 21C874021C874021C8740000 /* serialization-modularize */;
			targetProxy = 25C761025C761025C7610000 /* PBXContainerItemProxy */;
		};
		25C82A025C82A025C82A0000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 223851022385102238510000 /* format-modularize */;
			targetProxy = 25C7DB025C7DB025C7DB0000 /* PBXContainerItemProxy */;
		};
		25C8A3025C8A3025C8A30000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 224061022406102240610000 /* math-modularize */;
			targetProxy = 25C854025C854025C8540000 /* PBXContainerItemProxy */;
		};
		25C915025C915025C9150000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 224872022487202248720000 /* multi_index-modularize */;
			targetProxy = 25C8CD025C8CD025C8CD0000 /* PBXContainerItemProxy */;
		};
		25C996025C996025C9960000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 22508B022508B022508B0000 /* any-modularize */;
			targetProxy = 25C947025C947025C9470000 /* PBXContainerItemProxy */;
		};
		25CA0F025CA0F025CA0F0000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 2258A402258A402258A40000 /* random-modularize */;
			targetProxy = 25C9C0025C9C0025C9C00000 /* PBXContainerItemProxy */;
		};
		25CA88025CA88025CA880000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 2260B202260B202260B20000 /* graph-modularize */;
			targetProxy = 25CA39025CA39025CA390000 /* PBXContainerItemProxy */;
		};
		25CB01025CB01025CB010000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 2286BC02286BC02286BC0000 /* Python-modularize */;
			targetProxy = 25CAB2025CAB2025CAB20000 /* PBXContainerItemProxy */;
		};
		25CB73025CB73025CB730000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 22CE63022CE63022CE630000 /* parameter-modularize */;
			targetProxy = 25CB2B025CB2B025CB2B0000 /* PBXContainerItemProxy */;
		};
		25CBED025CBED025CBED0000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 22D6F9022D6F9022D6F90000 /* accumulators-modularize */;
			targetProxy = 25CBA5025CBA5025CBA50000 /* PBXContainerItemProxy */;
		};
		25CC6E025CC6E025CC6E0000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 22EA01022EA01022EA010000 /* system-modularize */;
			targetProxy = 25CC1F025CC1F025CC1F0000 /* PBXContainerItemProxy */;
		};
		25CCE7025CCE7025CCE70000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 2313F302313F302313F30000 /* asio-modularize */;
			targetProxy = 25CC98025CC98025CC980000 /* PBXContainerItemProxy */;
		};
		25CD59025CD59025CD590000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 231BF00231BF00231BF00000 /* circular_buffer-modularize */;
			targetProxy = 25CD11025CD11025CD110000 /* PBXContainerItemProxy */;
		};
		25CDD3025CDD3025CDD30000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 232409023240902324090000 /* ptr_container-modularize */;
			targetProxy = 25CD8B025CD8B025CD8B0000 /* PBXContainerItemProxy */;
		};
		25CE54025CE54025CE540000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 232C260232C260232C260000 /* assign-modularize */;
			targetProxy = 25CE05025CE05025CE050000 /* PBXContainerItemProxy */;
		};
		25CECD025CECD025CECD0000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 23343D023343D023343D0000 /* bimap-modularize */;
			targetProxy = 25CE7E025CE7E025CE7E0000 /* PBXContainerItemProxy */;
		};
		25CF3F025CF3F025CF3F0000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 233C500233C500233C500000 /* compatibility-modularize */;
			targetProxy = 25CEF7025CEF7025CEF70000 /* PBXContainerItemProxy */;
		};
		25CFC0025CFC0025CFC00000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 2344A502344A502344A50000 /* crc-modularize */;
			targetProxy = 25CF71025CF71025CF710000 /* PBXContainerItemProxy */;
		};
		25D039025D039025D0390000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 234CB90234CB90234CB90000 /* timer-modularize */;
			targetProxy = 25CFEA025CFEA025CFEA0000 /* PBXContainerItemProxy */;
		};
		25D0B2025D0B2025D0B20000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 23551D023551D023551D0000 /* test-modularize */;
			targetProxy = 25D063025D063025D0630000 /* PBXContainerItemProxy */;
		};
		25D124025D124025D1240000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 23DFFB023DFFB023DFFB0000 /* dynamic_bitset-modularize */;
			targetProxy = 25D0DC025D0DC025D0DC0000 /* PBXContainerItemProxy */;
		};
		25D19E025D19E025D19E0000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 23E811023E811023E8110000 /* filesystem-modularize */;
			targetProxy = 25D156025D156025D1560000 /* PBXContainerItemProxy */;
		};
		25D218025D218025D2180000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 2415F702415F702415F70000 /* interprocess-modularize */;
			targetProxy = 25D1D0025D1D0025D1D00000 /* PBXContainerItemProxy */;
		};
		25D292025D292025D2920000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 241E130241E130241E130000 /* flyweight-modularize */;
			targetProxy = 25D24A025D24A025D24A0000 /* PBXContainerItemProxy */;
		};
		25D313025D313025D3130000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 24262A024262A024262A0000 /* gil-modularize */;
			targetProxy = 25D2C4025D2C4025D2C40000 /* PBXContainerItemProxy */;
		};
		25D38C025D38C025D38C0000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 242E450242E450242E450000 /* mpi-modularize */;
			targetProxy = 25D33D025D33D025D33D0000 /* PBXContainerItemProxy */;
		};
		25D3EF025D3EF025D3EF0000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 2488D702488D702488D70000 /* iostreams-modularize */;
			targetProxy = 25D3B6025D3B6025D3B60000 /* PBXContainerItemProxy */;
		};
		25D470025D470025D4700000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 24B2A7024B2A7024B2A70000 /* lambda-modularize */;
			targetProxy = 25D421025D421025D4210000 /* PBXContainerItemProxy */;
		};
		25D4E1025D4E1025D4E10000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 24BAB9024BAB9024BAB90000 /* multi_array-modularize */;
			targetProxy = 25D49A025D49A025D49A0000 /* PBXContainerItemProxy */;
		};
		25D55B025D55B025D55B0000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 24C2D7024C2D7024C2D70000 /* program_options-modularize */;
			targetProxy = 25D514025D514025D5140000 /* PBXContainerItemProxy */;
		};
		25D5DD025D5DD025D5DD0000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 24F43B024F43B024F43B0000 /* rational-modularize */;
			targetProxy = 25D58E025D58E025D58E0000 /* PBXContainerItemProxy */;
		};
		25D656025D656025D6560000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 250044025004402500440000 /* signals-modularize */;
			targetProxy = 25D607025D607025D6070000 /* PBXContainerItemProxy */;
		};
		25D6CF025D6CF025D6CF0000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 252B500252B500252B500000 /* signals2-modularize */;
			targetProxy = 25D680025D680025D6800000 /* PBXContainerItemProxy */;
		};
		25D740025D740025D7400000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 253354025335402533540000 /* statechart-modularize */;
			targetProxy = 25D6F9025D6F9025D6F90000 /* PBXContainerItemProxy */;
		};
		25D7C2025D7C2025D7C20000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 253B680253B680253B680000 /* tr1-modularize */;
			targetProxy = 25D773025D773025D7730000 /* PBXContainerItemProxy */;
		};
		25D83B025D83B025D83B0000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 254380025438002543800000 /* units-modularize */;
			targetProxy = 25D7EC025D7EC025D7EC0000 /* PBXContainerItemProxy */;
		};
		25D8B4025D8B4025D8B40000 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 254B930254B930254B930000 /* wave-modularize */;
			targetProxy = 25D865025D865025D8650000 /* PBXContainerItemProxy */;
		};
/* End PBXTargetDependency section */

/* Begin XCBuildConfiguration section */
		1FF2D801FF2D801FF2D80000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = (
					i386,
					x86_64,
				);
				SDKROOT = /Developer/SDKs/MacOSX10.5.sdk;
			};
			name = Debug;
		};
		1FF2F301FF2F301FF2F30000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = (
					i386,
					x86_64,
				);
				SDKROOT = /Developer/SDKs/MacOSX10.5.sdk;
			};
			name = Release;
		};
		1FF31801FF31801FF3180000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = (
					i386,
					x86_64,
				);
				SDKROOT = /Developer/SDKs/MacOSX10.5.sdk;
			};
			name = MinSizeRel;
		};
		1FF32F01FF32F01FF32F0000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = (
					i386,
					x86_64,
				);
				SDKROOT = /Developer/SDKs/MacOSX10.5.sdk;
			};
			name = RelWithDebInfo;
		};
		1FF59D01FF59D01FF59D0000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = ALL_BUILD;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		1FF6C801FF6C801FF6C80000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = ALL_BUILD;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		1FF7E701FF7E701FF7E70000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = ALL_BUILD;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		1FF90201FF90201FF9020000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = ALL_BUILD;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		2001C002001C002001C00000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = install;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		2002E802002E802002E80000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = install;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		200403020040302004030000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = install;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		20051E020051E020051E0000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = install;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		20092F020092F020092F0000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = modularize;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		200A5A0200A5A0200A5A0000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = modularize;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		200B790200B790200B790000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = modularize;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		200C940200C940200C940000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = modularize;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		2010E702010E702010E70000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = package;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		201213020121302012130000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = package;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		20132E020132E020132E0000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = package;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		201449020144902014490000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = package;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		201865020186502018650000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "preprocessor-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		20198D020198D020198D0000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "preprocessor-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		201AAE0201AAE0201AAE0000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "preprocessor-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		201BCD0201BCD0201BCD0000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "preprocessor-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		2020AE02020AE02020AE0000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "concept_check-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		20213F020213F020213F0000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "concept_check-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		20226C020226C020226C0000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "concept_check-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		202392020239202023920000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "concept_check-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		202912020291202029120000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "property_map-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		202A450202A450202A450000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "property_map-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		202B710202B710202B710000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "property_map-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		202C9D0202C9D0202C9D0000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "property_map-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		203196020319602031960000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "config-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		2032BC02032BC02032BC0000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "config-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		2033DC02033DC02033DC0000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "config-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		2034FC02034FC02034FC0000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "config-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		2039D602039D602039D60000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "mpl-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		203AFB0203AFB0203AFB0000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "mpl-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		203C110203C110203C110000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "mpl-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		203D270203D270203D270000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "mpl-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		2041E902041E902041E90000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "type_traits-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		204312020431202043120000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "type_traits-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		204429020442902044290000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "type_traits-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		20453E020453E020453E0000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "type_traits-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		2049FE02049FE02049FE0000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "function-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		204B230204B230204B230000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "function-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		204C390204C390204C390000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "function-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		204D4F0204D4F0204D4F0000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "function-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		20520D020520D020520D0000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "iterator-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		205332020533202053320000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "iterator-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		205448020544802054480000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "iterator-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		20555E020555E020555E0000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "iterator-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		205A1A0205A1A0205A1A0000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "smart_ptr-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		205B3D0205B3D0205B3D0000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "smart_ptr-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		205C540205C540205C540000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "smart_ptr-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		205D690205D690205D690000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "smart_ptr-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		206226020622602062260000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "exception-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		20634F020634F020634F0000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "exception-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		206466020646602064660000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "exception-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		20657B020657B020657B0000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "exception-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		20690C020690C020690C0000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "utility-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		206B500206B500206B500000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "utility-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		206C6E0206C6E0206C6E0000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "utility-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		206D820206D820206D820000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "utility-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		207241020724102072410000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "integer-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		207366020736602073660000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "integer-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		20747A020747A020747A0000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "integer-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		20758E020758E020758E0000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "integer-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		207A480207A480207A480000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "detail-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		207B6E0207B6E0207B6E0000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "detail-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		207C820207C820207C820000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "detail-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		207D960207D960207D960000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "detail-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		208257020825702082570000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "static_assert-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		20837F020837F020837F0000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "static_assert-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		208496020849602084960000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "static_assert-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		2085AB02085AB02085AB0000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "static_assert-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		208A660208A660208A660000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "tuple-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		208B8C0208B8C0208B8C0000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "tuple-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		208CA20208CA20208CA20000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "tuple-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		208DB80208DB80208DB80000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "tuple-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		209275020927502092750000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "function_types-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		20939D020939D020939D0000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "function_types-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		2094B402094B402094B40000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "function_types-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		2095CB02095CB02095CB0000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "function_types-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		209A890209A890209A890000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "fusion-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		209BA20209BA20209BA20000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "fusion-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		209CB40209CB40209CB40000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "fusion-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		209DC60209DC60209DC60000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "fusion-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		20A28A020A28A020A28A0000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "typeof-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		20A3AF020A3AF020A3AF0000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "typeof-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		20A4C4020A4C4020A4C40000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "typeof-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		20A5D9020A5D9020A5D90000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "typeof-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		20AA93020AA93020AA930000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "proto-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		20ABAC020ABAC020ABAC0000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "proto-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		20ACC0020ACC0020ACC00000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "proto-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		20ADD4020ADD4020ADD40000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "proto-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		20B298020B298020B2980000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "intrusive-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		20B3C0020B3C0020B3C00000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "intrusive-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		20B4D7020B4D7020B4D70000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "intrusive-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		20B5EE020B5EE020B5EE0000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "intrusive-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		20BAA8020BAA8020BAA80000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "logic-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		20BBCD020BBCD020BBCD0000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "logic-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		20BCDD020BCDD020BCDD0000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "logic-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		20BDF6020BDF6020BDF60000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "logic-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		20C2B0020C2B0020C2B00000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "numeric-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		20C3C9020C3C9020C3C90000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "numeric-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		20C4DB020C4DB020C4DB0000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "numeric-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		20C5ED020C5ED020C5ED0000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "numeric-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		20CAB4020CAB4020CAB40000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "xpressive-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		20CB94020CB94020CB940000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "xpressive-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		20CCA9020CCA9020CCA90000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "xpressive-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		20CE23020CE23020CE230000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "xpressive-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		20D2BF020D2BF020D2BF0000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "optional-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		20D3E3020D3E3020D3E30000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "optional-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		20D4F8020D4F8020D4F80000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "optional-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		20D60D020D60D020D60D0000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "optional-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		20DACE020DACE020DACE0000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "tokenizer-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		20DBF6020DBF6020DBF60000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "tokenizer-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		20DD0D020DD0D020DD0D0000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "tokenizer-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		20DE24020DE24020DE240000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "tokenizer-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		20E2DF020E2DF020E2DF0000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "io-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		20E3FD020E3FD020E3FD0000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "io-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		20E519020E519020E5190000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "io-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		20E62D020E62D020E62D0000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "io-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		20EAB5020EAB5020EAB50000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "bind-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		20EC15020EC15020EC150000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "bind-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		20ED2A020ED2A020ED2A0000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "bind-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		20EE3F020EE3F020EE3F0000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "bind-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		20F2FD020F2FD020F2FD0000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "date_time-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		20F419020F419020F4190000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "date_time-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		20F52C020F52C020F52C0000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "date_time-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		20F63F020F63F020F63F0000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "date_time-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		20FB03020FB03020FB030000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_DATE_TIME_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = boost_date_time;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		210012021001202100120000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_DATE_TIME_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = boost_date_time;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		210125021012502101250000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_DATE_TIME_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = boost_date_time;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		210237021023702102370000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_DATE_TIME_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = boost_date_time;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		210A210210A210210A210000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_DATE_TIME_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_date_time-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		210B970210B970210B970000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_DATE_TIME_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_date_time-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		210D000210D000210D000000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_DATE_TIME_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_date_time-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		210E690210E690210E690000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_DATE_TIME_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_date_time-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		2115FB02115FB02115FB0000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_DATE_TIME_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_date_time-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		211772021177202117720000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_DATE_TIME_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_date_time-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		2118DE02118DE02118DE0000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_DATE_TIME_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_date_time-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		211A4A0211A4A0211A4A0000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_DATE_TIME_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_date_time-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		211F740211F740211F740000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "thread-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		21208D021208D021208D0000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "thread-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		21219F021219F021219F0000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "thread-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		2122B102122B102122B10000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "thread-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		212771021277102127710000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = boost_thread;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		21288A021288A021288A0000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = boost_thread;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		21299E021299E021299E0000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = boost_thread;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		212AB00212AB00212AB00000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = boost_thread;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		213283021328302132830000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_thread-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		2132BB02132BB02132BB0000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_thread-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		213569021356902135690000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_thread-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		2136D302136D302136D30000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_thread-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		213E5D0213E5D0213E5D0000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_thread-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		213FD20213FD20213FD20000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_thread-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		21413B021413B021413B0000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_thread-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		2142A602142A602142A60000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_thread-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		2147C202147C202147C20000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "regex-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		2148DB02148DB02148DB0000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "regex-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		2149EF02149EF02149EF0000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "regex-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		214B010214B010214B010000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "regex-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		214FBE0214FBE0214FBE0000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_HAS_ICU=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/opt/local/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = boost_regex;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		2150D802150D802150D80000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_HAS_ICU=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/opt/local/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = boost_regex;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		2151EC02151EC02151EC0000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_HAS_ICU=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/opt/local/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = boost_regex;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		2152FF02152FF02152FF0000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_HAS_ICU=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/opt/local/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = boost_regex;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		216504021650402165040000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_HAS_ICU=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/opt/local/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_regex-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		216678021667802166780000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_HAS_ICU=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/opt/local/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_regex-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		2167E402167E402167E40000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_HAS_ICU=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/opt/local/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_regex-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		216950021695002169500000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_HAS_ICU=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/opt/local/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_regex-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		217815021781502178150000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_HAS_ICU=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/opt/local/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_regex-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		21798F021798F021798F0000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_HAS_ICU=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/opt/local/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_regex-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		217AFC0217AFC0217AFC0000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_HAS_ICU=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/opt/local/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_regex-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		217C670217C670217C670000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_HAS_ICU=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/opt/local/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_regex-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		218188021818802181880000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "algorithm-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		2182A302182A302182A30000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "algorithm-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		2183B602183B602183B60000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "algorithm-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		2184C902184C902184C90000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "algorithm-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		21898D021898D021898D0000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "range-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		218AA60218AA60218AA60000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "range-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		218BBA0218BBA0218BBA0000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "range-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		218CCC0218CCC0218CCC0000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "range-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		21918D021918D021918D0000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "foreach-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		2192A602192A602192A60000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "foreach-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		2193B802193B802193B80000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "foreach-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		2194CA02194CA02194CA0000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "foreach-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		21998D021998D021998D0000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "array-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		219AB10219AB10219AB10000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "array-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		219BC60219BC60219BC60000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "array-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		219CDB0219CDB0219CDB0000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "array-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		21A19B021A19B021A19B0000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "functional-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		21A2C2021A2C2021A2C20000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "functional-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		21A3D9021A3D9021A3D90000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "functional-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		21A4F0021A4F0021A4F00000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "functional-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		21A9AE021A9AE021A9AE0000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "unordered-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		21AACA021AACA021AACA0000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "unordered-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		21ABDE021ABDE021ABDE0000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "unordered-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		21ACF2021ACF2021ACF20000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "unordered-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		21B17F021B17F021B17F0000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "pool-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		21B2DE021B2DE021B2DE0000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "pool-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		21B3F3021B3F3021B3F30000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "pool-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		21B508021B508021B5080000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "pool-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		21B9C4021B9C4021B9C40000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "spirit-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		21BADD021BADD021BADD0000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "spirit-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		21BBEF021BBEF021BBEF0000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "spirit-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		21BD01021BD01021BD010000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "spirit-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		21C1C6021C1C6021C1C60000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "variant-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		21C2EA021C2EA021C2EA0000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "variant-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		21C3FF021C3FF021C3FF0000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "variant-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		21C514021C514021C5140000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "variant-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		21C9D9021C9D9021C9D90000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "serialization-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		21CAF5021CAF5021CAF50000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "serialization-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		21CC08021CC08021CC080000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "serialization-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		21CD1B021CD1B021CD1B0000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "serialization-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		21D1F3021D1F3021D1F30000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = boost_serialization;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		21D302021D302021D3020000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = boost_serialization;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		21D41A021D41A021D41A0000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = boost_serialization;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		21D532021D532021D5320000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = boost_serialization;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		21ED41021ED41021ED410000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_serialization-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		21ED7A021ED7A021ED7A0000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_serialization-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		21F025021F025021F0250000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_serialization-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		21F18F021F18F021F18F0000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_serialization-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		220881022088102208810000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_serialization-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		2208BA02208BA02208BA0000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_serialization-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		220B670220B670220B670000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_serialization-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		220CD10220CD10220CD10000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_serialization-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		2211DF02211DF02211DF0000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = boost_wserialization;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		221305022130502213050000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = boost_wserialization;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		221418022141802214180000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = boost_wserialization;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		22152B022152B022152B0000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = boost_wserialization;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		222140022214002221400000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_wserialization-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		2222B702222B702222B70000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_wserialization-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		222424022242402224240000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_wserialization-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		22258E022258E022258E0000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_wserialization-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		223046022304602230460000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_wserialization-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		22307F022307F022307F0000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_wserialization-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		22332C022332C022332C0000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_wserialization-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		223496022349602234960000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_wserialization-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		2239B502239B502239B50000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "format-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		223ACE0223ACE0223ACE0000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "format-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		223BE00223BE00223BE00000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "format-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		223CF70223CF70223CF70000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "format-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		224186022418602241860000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "math-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		2242E002242E002242E00000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "math-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		2243F102243F102243F10000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "math-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		224508022450802245080000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "math-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		2249D902249D902249D90000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "multi_index-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		224AF50224AF50224AF50000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "multi_index-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		224C0A0224C0A0224C0A0000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "multi_index-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		224D230224D230224D230000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "multi_index-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		2251C802251C802251C80000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "any-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		225313022531302253130000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "any-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		225428022542802254280000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "any-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		225537022553702255370000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "any-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		225A080225A080225A080000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "random-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		225B2D0225B2D0225B2D0000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "random-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		225C420225C420225C420000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "random-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		225D570225D570225D570000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "random-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		226215022621502262150000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "graph-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		2262B402262B402262B40000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "graph-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		22643B022643B022643B0000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "graph-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		2264E302264E302264E30000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "graph-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		226A150226A150226A150000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_GRAPH_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = boost_graph;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		226AB40226AB40226AB40000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_GRAPH_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = boost_graph;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		226C3D0226C3D0226C3D0000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_GRAPH_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = boost_graph;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		226CE80226CE80226CE80000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_GRAPH_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = boost_graph;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		2273BE02273BE02273BE0000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_GRAPH_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_graph-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		2274BE02274BE02274BE0000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_GRAPH_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_graph-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		22762D022762D022762D0000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_GRAPH_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_graph-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		22779C022779C022779C0000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_GRAPH_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_graph-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		227E9E0227E9E0227E9E0000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_GRAPH_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_graph-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		227F9C0227F9C0227F9C0000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_GRAPH_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_graph-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		22810F022810F022810F0000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_GRAPH_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_graph-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		228279022827902282790000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_GRAPH_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_graph-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		228820022882002288200000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Library/Frameworks/Python.framework/Headers,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "Python-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		2288AF02288AF02288AF0000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Library/Frameworks/Python.framework/Headers,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "Python-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		228A500228A500228A500000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Library/Frameworks/Python.framework/Headers,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "Python-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		228AD70228AD70228AD70000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Library/Frameworks/Python.framework/Headers,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "Python-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		22902D022902D022902D0000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Library/Frameworks/Python.framework/Headers,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = boost_python;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		2290BC02290BC02290BC0000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Library/Frameworks/Python.framework/Headers,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = boost_python;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		229260022926002292600000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Library/Frameworks/Python.framework/Headers,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = boost_python;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		229378022937802293780000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Library/Frameworks/Python.framework/Headers,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = boost_python;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		22ADEC022ADEC022ADEC0000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Library/Frameworks/Python.framework/Headers,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_python-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		22AE24022AE24022AE240000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Library/Frameworks/Python.framework/Headers,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_python-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		22B06A022B06A022B06A0000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Library/Frameworks/Python.framework/Headers,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_python-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		22B1F6022B1F6022B1F60000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Library/Frameworks/Python.framework/Headers,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_python-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		22C6F6022C6F6022C6F60000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Library/Frameworks/Python.framework/Headers,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_python-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		22C7E0022C7E0022C7E00000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Library/Frameworks/Python.framework/Headers,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_python-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		22C96D022C96D022C96D0000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Library/Frameworks/Python.framework/Headers,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_python-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		22CAF9022CAF9022CAF90000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Library/Frameworks/Python.framework/Headers,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_python-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		22D053022D053022D0530000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/parameter/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "parameter-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		22D0E4022D0E4022D0E40000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/parameter/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "parameter-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		22D283022D283022D2830000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/parameter/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "parameter-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		22D30B022D30B022D30B0000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/parameter/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "parameter-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		22D85C022D85C022D85C0000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/accumulators/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/parameter/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "accumulators-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		22D977022D977022D9770000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/accumulators/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/parameter/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "accumulators-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		22DA8A022DA8A022DA8A0000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/accumulators/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/parameter/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "accumulators-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		22DB9D022DB9D022DB9D0000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/accumulators/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/parameter/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "accumulators-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		22E230022E230022E2300000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/accumulators/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/parameter/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-headerpad_max_install_names",
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "accumulators-accumulators_example";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/bin;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		22E39E022E39E022E39E0000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/accumulators/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/parameter/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-headerpad_max_install_names",
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "accumulators-accumulators_example";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/bin;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		22E4F9022E4F9022E4F90000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/accumulators/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/parameter/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-headerpad_max_install_names",
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "accumulators-accumulators_example";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/bin;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		22E657022E657022E6570000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/accumulators/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/parameter/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-headerpad_max_install_names",
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "accumulators-accumulators_example";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/bin;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		22EB62022EB62022EB620000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "system-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		22EC87022EC87022EC870000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "system-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		22ED9C022ED9C022ED9C0000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "system-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		22EEB1022EEB1022EEB10000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "system-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		22F36C022F36C022F36C0000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = boost_system;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		22F491022F491022F4910000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = boost_system;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		22F5A6022F5A6022F5A60000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = boost_system;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		22F6BB022F6BB022F6BB0000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = boost_system;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		230107023010702301070000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_system-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		23028B023028B023028B0000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_system-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		2303F602303F602303F60000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_system-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		230564023056402305640000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_system-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		230BDD0230BDD0230BDD0000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_system-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		230D5E0230D5E0230D5E0000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_system-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		230EC90230EC90230EC90000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_system-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		231037023103702310370000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_system-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		231516023151602315160000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/asio/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "asio-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		23166A023166A023166A0000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/asio/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "asio-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		23177C023177C023177C0000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/asio/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "asio-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		23188E023188E023188E0000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/asio/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "asio-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		231D530231D530231D530000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/circular_buffer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "circular_buffer-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		231E6F0231E6F0231E6F0000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/circular_buffer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "circular_buffer-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		231F820231F820231F820000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/circular_buffer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "circular_buffer-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		23209A023209A023209A0000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/circular_buffer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "circular_buffer-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		23256F023256F023256F0000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/ptr_container/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/circular_buffer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "ptr_container-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		23268B023268B023268B0000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/ptr_container/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/circular_buffer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "ptr_container-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		2327A202327A202327A20000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/ptr_container/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/circular_buffer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "ptr_container-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		2328BB02328BB02328BB0000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/ptr_container/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/circular_buffer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "ptr_container-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		232D8A0232D8A0232D8A0000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/assign/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/ptr_container/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/circular_buffer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "assign-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		232EA40232EA40232EA40000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/assign/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/ptr_container/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/circular_buffer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "assign-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		232FBC0232FBC0232FBC0000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/assign/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/ptr_container/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/circular_buffer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "assign-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		2330D402330D402330D40000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/assign/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/ptr_container/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/circular_buffer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "assign-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		2335A002335A002335A00000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bimap/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "bimap-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		23366D023366D023366D0000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bimap/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "bimap-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		2337FD02337FD02337FD0000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bimap/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "bimap-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		233914023391402339140000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bimap/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "bimap-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		233DB40233DB40233DB40000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/compatibility/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "compatibility-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		233EDC0233EDC0233EDC0000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/compatibility/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "compatibility-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		233F610233F610233F610000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/compatibility/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "compatibility-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		234123023412302341230000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/compatibility/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "compatibility-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		234608023460802346080000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/crc/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "crc-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		234728023472802347280000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/crc/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "crc-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		23483C023483C023483C0000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/crc/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "crc-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		234959023495902349590000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/crc/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "crc-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		234E180234E180234E180000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "timer-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		234EAD0234EAD0234EAD0000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "timer-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		234FCB0234FCB0234FCB0000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "timer-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		2350FD02350FD02350FD0000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "timer-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		235643023564302356430000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "test-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		23574A023574A023574A0000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "test-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		2358DC02358DC02358DC0000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "test-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		23597D023597D023597D0000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "test-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		235E7C0235E7C0235E7C0000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_TEST_NO_AUTO_LINK=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = boost_prg_exec_monitor;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		235F600235F600235F600000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_TEST_NO_AUTO_LINK=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = boost_prg_exec_monitor;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		236029023602902360290000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_TEST_NO_AUTO_LINK=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = boost_prg_exec_monitor;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		23619A023619A023619A0000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_TEST_NO_AUTO_LINK=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = boost_prg_exec_monitor;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		2369AE02369AE02369AE0000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_TEST_NO_AUTO_LINK=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_prg_exec_monitor-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		236ADC0236ADC0236ADC0000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_TEST_NO_AUTO_LINK=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_prg_exec_monitor-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		236C490236C490236C490000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_TEST_NO_AUTO_LINK=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_prg_exec_monitor-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		236DB80236DB80236DB80000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_TEST_NO_AUTO_LINK=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_prg_exec_monitor-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		237598023759802375980000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_TEST_NO_AUTO_LINK=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_prg_exec_monitor-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		2376C402376C402376C40000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_TEST_NO_AUTO_LINK=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_prg_exec_monitor-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		23782E023782E023782E0000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_TEST_NO_AUTO_LINK=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_prg_exec_monitor-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		23799E023799E023799E0000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_TEST_NO_AUTO_LINK=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_prg_exec_monitor-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		237ED70237ED70237ED70000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_TEST_NO_AUTO_LINK=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = boost_test_exec_monitor;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		237FE70237FE70237FE70000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_TEST_NO_AUTO_LINK=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = boost_test_exec_monitor;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		2380B202380B202380B20000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_TEST_NO_AUTO_LINK=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = boost_test_exec_monitor;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		238221023822102382210000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_TEST_NO_AUTO_LINK=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = boost_test_exec_monitor;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		2393DE02393DE02393DE0000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_TEST_NO_AUTO_LINK=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_test_exec_monitor-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		23950C023950C023950C0000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_TEST_NO_AUTO_LINK=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_test_exec_monitor-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		239674023967402396740000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_TEST_NO_AUTO_LINK=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_test_exec_monitor-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		2397DE02397DE02397DE0000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_TEST_NO_AUTO_LINK=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_test_exec_monitor-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		23A707023A707023A7070000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_TEST_NO_AUTO_LINK=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_test_exec_monitor-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		23A834023A834023A8340000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_TEST_NO_AUTO_LINK=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_test_exec_monitor-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		23A99C023A99C023A99C0000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_TEST_NO_AUTO_LINK=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_test_exec_monitor-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		23AB06023AB06023AB060000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_TEST_NO_AUTO_LINK=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_test_exec_monitor-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		23B031023B031023B0310000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_TEST_NO_AUTO_LINK=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = boost_unit_test_framework;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		23B13E023B13E023B13E0000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_TEST_NO_AUTO_LINK=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = boost_unit_test_framework;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		23B205023B205023B2050000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_TEST_NO_AUTO_LINK=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = boost_unit_test_framework;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		23B31A023B31A023B31A0000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_TEST_NO_AUTO_LINK=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = boost_unit_test_framework;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		23C3C3023C3C3023C3C30000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_TEST_NO_AUTO_LINK=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_unit_test_framework-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		23C4F1023C4F1023C4F10000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_TEST_NO_AUTO_LINK=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_unit_test_framework-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		23C659023C659023C6590000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_TEST_NO_AUTO_LINK=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_unit_test_framework-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		23C7C3023C7C3023C7C30000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_TEST_NO_AUTO_LINK=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_unit_test_framework-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		23D7F3023D7F3023D7F30000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_TEST_NO_AUTO_LINK=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_unit_test_framework-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		23D91F023D91F023D91F0000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_TEST_NO_AUTO_LINK=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_unit_test_framework-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		23DA8A023DA8A023DA8A0000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_TEST_NO_AUTO_LINK=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_unit_test_framework-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		23DBF2023DBF2023DBF20000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_TEST_NO_AUTO_LINK=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_unit_test_framework-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		23E15E023E15E023E15E0000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/dynamic_bitset/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "dynamic_bitset-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		23E285023E285023E2850000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/dynamic_bitset/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "dynamic_bitset-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		23E39C023E39C023E39C0000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/dynamic_bitset/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "dynamic_bitset-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		23E4B3023E4B3023E4B30000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/dynamic_bitset/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "dynamic_bitset-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		23E976023E976023E9760000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/filesystem/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "filesystem-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		23EA91023EA91023EA910000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/filesystem/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "filesystem-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		23EBAA023EBAA023EBAA0000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/filesystem/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "filesystem-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		23ECC3023ECC3023ECC30000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/filesystem/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "filesystem-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		23F17B023F17B023F17B0000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/filesystem/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = boost_filesystem;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		23F2AA023F2AA023F2AA0000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/filesystem/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = boost_filesystem;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		23F3C1023F3C1023F3C10000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/filesystem/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = boost_filesystem;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		23F4D9023F4D9023F4D90000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/filesystem/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = boost_filesystem;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		240171024017102401710000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/filesystem/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_filesystem-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		2402E402402E402402E40000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/filesystem/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_filesystem-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		240451024045102404510000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/filesystem/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_filesystem-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		2405C502405C502405C50000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/filesystem/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_filesystem-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		240DDF0240DDF0240DDF0000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/filesystem/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_filesystem-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		240F580240F580240F580000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/filesystem/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_filesystem-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		2410C902410C902410C90000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/filesystem/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_filesystem-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		241237024123702412370000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/filesystem/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_filesystem-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		24175A024175A024175A0000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/interprocess/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "interprocess-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		241875024187502418750000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/interprocess/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "interprocess-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		24198C024198C024198C0000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/interprocess/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "interprocess-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		241AA50241AA50241AA50000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/interprocess/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "interprocess-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		241F7A0241F7A0241F7A0000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/flyweight/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/parameter/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/interprocess/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "flyweight-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		242096024209602420960000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/flyweight/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/parameter/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/interprocess/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "flyweight-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		2421AD02421AD02421AD0000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/flyweight/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/parameter/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/interprocess/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "flyweight-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		2422C502422C502422C50000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/flyweight/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/parameter/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/interprocess/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/python/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "flyweight-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		24278E024278E024278E0000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/gil/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "gil-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		2428A802428A802428A80000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/gil/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "gil-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		2429C102429C102429C10000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/gil/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "gil-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		242AD90242AD90242AD90000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/gil/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "gil-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		242FA80242FA80242FA80000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpi/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "mpi-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		24303E024303E024303E0000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpi/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "mpi-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		2431D302431D302431D30000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpi/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "mpi-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		243269024326902432690000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpi/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "mpi-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		2437A302437A302437A30000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_MPI_SOURCE=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpi/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = boost_mpi;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		243848024384802438480000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_MPI_SOURCE=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpi/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = boost_mpi;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		2439E102439E102439E10000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_MPI_SOURCE=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpi/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = boost_mpi;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		243A7A0243A7A0243A7A0000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_MPI_SOURCE=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpi/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = boost_mpi;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		244DD60244DD60244DD60000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_MPI_SOURCE=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpi/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
					"-Wl,-u,_munmap",
					"-Wl,-multiply_defined,suppress",
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_mpi-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		244ECB0244ECB0244ECB0000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_MPI_SOURCE=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpi/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
					"-Wl,-u,_munmap",
					"-Wl,-multiply_defined,suppress",
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_mpi-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		2451A202451A202451A20000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_MPI_SOURCE=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpi/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
					"-Wl,-u,_munmap",
					"-Wl,-multiply_defined,suppress",
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_mpi-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		245312024531202453120000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_MPI_SOURCE=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpi/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
					"-Wl,-u,_munmap",
					"-Wl,-multiply_defined,suppress",
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_mpi-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		246188024618802461880000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_MPI_SOURCE=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpi/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
					"-Wl,-u,_munmap",
					"-Wl,-multiply_defined,suppress",
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_mpi-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		24627D024627D024627D0000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_MPI_SOURCE=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpi/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
					"-Wl,-u,_munmap",
					"-Wl,-multiply_defined,suppress",
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_mpi-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		246554024655402465540000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_MPI_SOURCE=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpi/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
					"-Wl,-u,_munmap",
					"-Wl,-multiply_defined,suppress",
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_mpi-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		2466C402466C402466C40000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_MPI_SOURCE=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpi/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
					"-Wl,-u,_munmap",
					"-Wl,-multiply_defined,suppress",
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_mpi-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		246AF10246AF10246AF10000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_GRAPH_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpi/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = boost_graph_parallel;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		246B930246B930246B930000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_GRAPH_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpi/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = boost_graph_parallel;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		246D2C0246D2C0246D2C0000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_GRAPH_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpi/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = boost_graph_parallel;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		246DBB0246DBB0246DBB0000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_GRAPH_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpi/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = boost_graph_parallel;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		24755E024755E024755E0000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_GRAPH_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpi/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_graph_parallel-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		247652024765202476520000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_GRAPH_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpi/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_graph_parallel-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		247927024792702479270000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_GRAPH_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpi/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_graph_parallel-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		247A910247A910247A910000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_GRAPH_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpi/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_graph_parallel-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		2480B502480B502480B50000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_GRAPH_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpi/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_graph_parallel-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		2481AA02481AA02481AA0000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_GRAPH_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpi/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_graph_parallel-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		2481DA02481DA02481DA0000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_GRAPH_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpi/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_graph_parallel-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		2485F802485F802485F80000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_GRAPH_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpi/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/graph/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/property_map/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_index/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_graph_parallel-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		248A3A0248A3A0248A3A0000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iostreams/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "iostreams-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		248B560248B560248B560000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iostreams/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "iostreams-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		248C6F0248C6F0248C6F0000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iostreams/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "iostreams-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		248D880248D880248D880000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iostreams/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "iostreams-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		24923F024923F024923F0000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iostreams/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = boost_iostreams;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		24936F024936F024936F0000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iostreams/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = boost_iostreams;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		249486024948602494860000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iostreams/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = boost_iostreams;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		24959E024959E024959E0000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iostreams/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = boost_iostreams;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		249E370249E370249E370000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iostreams/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_iostreams-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		249FAF0249FAF0249FAF0000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iostreams/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_iostreams-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		24A119024A119024A1190000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iostreams/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_iostreams-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		24A285024A285024A2850000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iostreams/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_iostreams-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		24AA86024AA86024AA860000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iostreams/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_iostreams-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		24ABFF024ABFF024ABFF0000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iostreams/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_iostreams-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		24AD6E024AD6E024AD6E0000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iostreams/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_iostreams-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		24AEDC024AEDC024AEDC0000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iostreams/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_iostreams-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		24B407024B407024B4070000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/lambda/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "lambda-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		24B52C024B52C024B52C0000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/lambda/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "lambda-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		24B641024B641024B6410000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/lambda/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "lambda-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		24B756024B756024B7560000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/lambda/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "lambda-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		24BC1D024BC1D024BC1D0000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "multi_array-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		24BD44024BD44024BD440000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "multi_array-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		24BE5C024BE5C024BE5C0000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "multi_array-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		24BF74024BF74024BF740000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/multi_array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "multi_array-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		24C43C024C43C024C43C0000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/program_options/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "program_options-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		24C4F8024C4F8024C4F80000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/program_options/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "program_options-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		24C649024C649024C6490000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/program_options/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "program_options-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		24C779024C779024C7790000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/program_options/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "program_options-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		24CC51024CC51024CC510000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/program_options/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = boost_program_options;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		24CD15024CD15024CD150000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/program_options/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = boost_program_options;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		24CEB8024CEB8024CEB80000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/program_options/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = boost_program_options;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		24CF79024CF79024CF790000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/program_options/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = boost_program_options;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		24DCA9024DCA9024DCA90000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/program_options/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_program_options-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		24DDC0024DDC0024DDC00000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/program_options/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_program_options-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		24DF2C024DF2C024DF2C0000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/program_options/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_program_options-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		24E095024E095024E0950000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/program_options/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_program_options-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		24EC2F024EC2F024EC2F0000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/program_options/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_program_options-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		24EC68024EC68024EC680000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/program_options/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_program_options-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		24EEB4024EEB4024EEB40000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/program_options/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_program_options-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		24F01D024F01D024F01D0000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/program_options/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_program_options-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		24F59C024F59C024F59C0000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/rational/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "rational-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		24F6BE024F6BE024F6BE0000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/rational/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "rational-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		24F7D2024F7D2024F7D20000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/rational/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "rational-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		24F8ED024F8ED024F8ED0000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/rational/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "rational-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		2501AA02501AA02501AA0000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/signals/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "signals-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		2502C402502C402502C40000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/signals/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "signals-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		2503D902503D902503D90000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/signals/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "signals-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		2504F002504F002504F00000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/signals/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "signals-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		2509B502509B502509B50000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_SIGNALS_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/signals/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = boost_signals;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		250AD70250AD70250AD70000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_SIGNALS_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/signals/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = boost_signals;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		250BEF0250BEF0250BEF0000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_SIGNALS_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/signals/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = boost_signals;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		250D0A0250D0A0250D0A0000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_SIGNALS_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/signals/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = boost_signals;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		251653025165302516530000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_SIGNALS_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/signals/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_signals-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		2517CF02517CF02517CF0000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_SIGNALS_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/signals/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_signals-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		2517E402517E402517E40000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_SIGNALS_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/signals/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_signals-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		251951025195102519510000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_SIGNALS_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/signals/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_signals-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		252339025233902523390000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_SIGNALS_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/signals/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_signals-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		252363025236302523630000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_SIGNALS_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/signals/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_signals-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		2524CA02524CA02524CA0000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_SIGNALS_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/signals/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_signals-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		252637025263702526370000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_3 = "'BOOST_SIGNALS_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/signals/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_signals-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		252CB50252CB50252CB50000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/signals2/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "signals2-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		252DCE0252DCE0252DCE0000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/signals2/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "signals2-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		252EE20252EE20252EE20000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/signals2/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "signals2-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		252FF40252FF40252FF40000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/signals2/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "signals2-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		2534B502534B502534B50000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/statechart/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "statechart-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		25358D025358D025358D0000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/statechart/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "statechart-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		2536A602536A602536A60000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/statechart/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "statechart-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		2537BE02537BE02537BE0000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/statechart/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "statechart-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		253CC90253CC90253CC90000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tr1/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "tr1-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		253DA60253DA60253DA60000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tr1/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "tr1-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		253EBE0253EBE0253EBE0000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tr1/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "tr1-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		253FD60253FD60253FD60000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tr1/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/random/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "tr1-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		2544DF02544DF02544DF0000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/units/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/lambda/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "units-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		254599025459902545990000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/units/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/lambda/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "units-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		2546EA02546EA02546EA0000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/units/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/lambda/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "units-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		2547CB02547CB02547CB0000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/units/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/math/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/lambda/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/format/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "units-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		254CB60254CB60254CB60000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/wave/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/filesystem/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/program_options/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "wave-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		254E0A0254E0A0254E0A0000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/wave/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/filesystem/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/program_options/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "wave-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		254F220254F220254F220000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/wave/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/filesystem/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/program_options/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "wave-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		25503A025503A025503A0000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/wave/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/filesystem/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/program_options/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "wave-modularize";
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		2554F302554F302554F30000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/wave/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/filesystem/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/program_options/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = boost_wave;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		25561D025561D025561D0000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/wave/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/filesystem/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/program_options/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = boost_wave;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		255735025573502557350000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/wave/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/filesystem/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/program_options/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = boost_wave;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		25584D025584D025584D0000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/wave/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/filesystem/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/program_options/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				OTHER_CFLAGS = (
				);
				OTHER_LDFLAGS = "";
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = boost_wave;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		25660C025660C025660C0000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/wave/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/filesystem/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/program_options/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_wave-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		25677F025677F025677F0000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/wave/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/filesystem/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/program_options/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_wave-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		2568EC02568EC02568EC0000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/wave/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/filesystem/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/program_options/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_wave-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		256A570256A570256A570000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/wave/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/filesystem/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/program_options/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_wave-mt";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		25760A025760A025760A0000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/wave/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/filesystem/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/program_options/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_wave-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		25763F025763F025763F0000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/wave/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/filesystem/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/program_options/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_wave-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		2578ED02578ED02578ED0000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/wave/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/filesystem/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/program_options/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_wave-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		257A570257A570257A570000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/wave/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/filesystem/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/program_options/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/any/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = "boost_wave-mt-d";
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		258861025886102588610000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bcp/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/filesystem/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-headerpad_max_install_names",
					"/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/Debug/libboost_system-mt-d.a",
					"/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/Debug/libboost_filesystem-mt-d.a",
					"/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/Debug/libboost_prg_exec_monitor-mt-d.a",
					"/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/Debug/libboost_regex-mt-d.a",
					"/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/Debug/libboost_system-mt-d.a",
					/opt/local/lib/libicuuc.dylib,
					/opt/local/lib/libicui18n.dylib,
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = bcp;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/bin;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		25895C025895C025895C0000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bcp/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/filesystem/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-headerpad_max_install_names",
					"/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/Release/libboost_system-mt.a",
					"/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/Release/libboost_filesystem-mt.a",
					"/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/Release/libboost_prg_exec_monitor-mt.a",
					"/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/Release/libboost_regex-mt.a",
					"/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/Release/libboost_system-mt.a",
					/opt/local/lib/libicuuc.dylib,
					/opt/local/lib/libicui18n.dylib,
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = bcp;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/bin;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		258AB60258AB60258AB60000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bcp/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/filesystem/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-headerpad_max_install_names",
					"/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/MinSizeRel/libboost_system-mt.a",
					"/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/MinSizeRel/libboost_filesystem-mt.a",
					"/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/MinSizeRel/libboost_prg_exec_monitor-mt.a",
					"/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/MinSizeRel/libboost_regex-mt.a",
					"/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/MinSizeRel/libboost_system-mt.a",
					/opt/local/lib/libicuuc.dylib,
					/opt/local/lib/libicui18n.dylib,
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = bcp;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/bin;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		258C110258C110258C110000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bcp/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/filesystem/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/system/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/smart_ptr/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/utility/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/iterator/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/exception/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/detail/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/mpl/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/type_traits/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/concept_check/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tuple/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/integer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/preprocessor/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/config/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/static_assert/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/test/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/timer/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/io/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/bind/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/numeric/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/logic/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/serialization/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/spirit/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/array/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/variant/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/xpressive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/optional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/foreach/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/unordered/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/pool/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/fusion/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/proto/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/intrusive/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/range/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/functional/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/function_types/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/typeof/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/algorithm/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/regex/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/date_time/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/thread/include,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/tokenizer/include,
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-headerpad_max_install_names",
					"/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/RelWithDebInfo/libboost_system-mt.a",
					"/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/RelWithDebInfo/libboost_filesystem-mt.a",
					"/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/RelWithDebInfo/libboost_prg_exec_monitor-mt.a",
					"/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/RelWithDebInfo/libboost_regex-mt.a",
					"/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/RelWithDebInfo/libboost_system-mt.a",
					/opt/local/lib/libicuuc.dylib,
					/opt/local/lib/libicui18n.dylib,
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = bcp;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/bin;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
		259A750259A750259A750000 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/inspect/include,
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-headerpad_max_install_names",
					"/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/Debug/libboost_filesystem-mt-d.a",
					"/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/Debug/libboost_regex-mt-d.a",
					"/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/Debug/libboost_system-mt-d.a",
					/opt/local/lib/libicuuc.dylib,
					/opt/local/lib/libicui18n.dylib,
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = inspect;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/bin;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Debug;
		};
		259AA80259AA80259AA80000 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/inspect/include,
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-headerpad_max_install_names",
					"/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/Release/libboost_filesystem-mt.a",
					"/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/Release/libboost_regex-mt.a",
					"/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/Release/libboost_system-mt.a",
					/opt/local/lib/libicuuc.dylib,
					/opt/local/lib/libicui18n.dylib,
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = inspect;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/bin;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = Release;
		};
		259C140259C140259C140000 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/inspect/include,
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
					"-DNDEBUG",
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-headerpad_max_install_names",
					"/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/MinSizeRel/libboost_filesystem-mt.a",
					"/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/MinSizeRel/libboost_regex-mt.a",
					"/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/MinSizeRel/libboost_system-mt.a",
					/opt/local/lib/libicuuc.dylib,
					/opt/local/lib/libicui18n.dylib,
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = inspect;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/bin;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = MinSizeRel;
		};
		259EC80259EC80259EC80000 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1)",
					"$(GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2)",
				);
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_1 = "'CMAKE_INTDIR=\"$(CONFIGURATION)\"'";
				GCC_PREPROCESSOR_DEFINITIONS_QUOTED_FOR_TARGET_2 = "'BOOST_ALL_NO_LIB=1'";
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0,
					/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/libs/inspect/include,
				);
				INSTALL_PATH = "";
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CFLAGS = (
				);
				OTHER_CPLUSPLUSFLAGS = (
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-headerpad_max_install_names",
					"/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/RelWithDebInfo/libboost_filesystem-mt.a",
					"/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/RelWithDebInfo/libboost_regex-mt.a",
					"/Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/lib/RelWithDebInfo/libboost_system-mt.a",
					/opt/local/lib/libicuuc.dylib,
					/opt/local/lib/libicui18n.dylib,
				);
				OTHER_REZFLAGS = "";
				PREBINDING = NO;
				PRODUCT_NAME = inspect;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/davidcox/Repositories/monkeyworks/mw_supporting/boost_1_40_0/bin;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = (
					"-Wmost",
					"-Wno-four-char-constants",
					"-Wno-unknown-pragmas",
				);
			};
			name = RelWithDebInfo;
		};
/* End XCBuildConfiguration section */

/* Begin XCConfigurationList section */
		1FF2C601FF2C601FF2C60000 /* Build configuration list for PBXProject "Boost" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				1FF2D801FF2D801FF2D80000 /* Debug */,
				1FF2F301FF2F301FF2F30000 /* Release */,
				1FF31801FF31801FF3180000 /* MinSizeRel */,
				1FF32F01FF32F01FF32F0000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		1FF54501FF54501FF5450000 /* Build configuration list for PBXAggregateTarget "ALL_BUILD" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				1FF59D01FF59D01FF59D0000 /* Debug */,
				1FF6C801FF6C801FF6C80000 /* Release */,
				1FF7E701FF7E701FF7E70000 /* MinSizeRel */,
				1FF90201FF90201FF9020000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		20018D020018D020018D0000 /* Build configuration list for PBXAggregateTarget "install" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				2001C002001C002001C00000 /* Debug */,
				2002E802002E802002E80000 /* Release */,
				200403020040302004030000 /* MinSizeRel */,
				20051E020051E020051E0000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		2008C002008C002008C00000 /* Build configuration list for PBXAggregateTarget "modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				20092F020092F020092F0000 /* Debug */,
				200A5A0200A5A0200A5A0000 /* Release */,
				200B790200B790200B790000 /* MinSizeRel */,
				200C940200C940200C940000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		201091020109102010910000 /* Build configuration list for PBXAggregateTarget "package" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				2010E702010E702010E70000 /* Debug */,
				201213020121302012130000 /* Release */,
				20132E020132E020132E0000 /* MinSizeRel */,
				201449020144902014490000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		201813020181302018130000 /* Build configuration list for PBXAggregateTarget "preprocessor-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				201865020186502018650000 /* Debug */,
				20198D020198D020198D0000 /* Release */,
				201AAE0201AAE0201AAE0000 /* MinSizeRel */,
				201BCD0201BCD0201BCD0000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		20205D020205D020205D0000 /* Build configuration list for PBXAggregateTarget "concept_check-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				2020AE02020AE02020AE0000 /* Debug */,
				20213F020213F020213F0000 /* Release */,
				20226C020226C020226C0000 /* MinSizeRel */,
				202392020239202023920000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		2028BF02028BF02028BF0000 /* Build configuration list for PBXAggregateTarget "property_map-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				202912020291202029120000 /* Debug */,
				202A450202A450202A450000 /* Release */,
				202B710202B710202B710000 /* MinSizeRel */,
				202C9D0202C9D0202C9D0000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		203142020314202031420000 /* Build configuration list for PBXAggregateTarget "config-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				203196020319602031960000 /* Debug */,
				2032BC02032BC02032BC0000 /* Release */,
				2033DC02033DC02033DC0000 /* MinSizeRel */,
				2034FC02034FC02034FC0000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		203986020398602039860000 /* Build configuration list for PBXAggregateTarget "mpl-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				2039D602039D602039D60000 /* Debug */,
				203AFB0203AFB0203AFB0000 /* Release */,
				203C110203C110203C110000 /* MinSizeRel */,
				203D270203D270203D270000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		204197020419702041970000 /* Build configuration list for PBXAggregateTarget "type_traits-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				2041E902041E902041E90000 /* Debug */,
				204312020431202043120000 /* Release */,
				204429020442902044290000 /* MinSizeRel */,
				20453E020453E020453E0000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		2049A902049A902049A90000 /* Build configuration list for PBXAggregateTarget "function-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				2049FE02049FE02049FE0000 /* Debug */,
				204B230204B230204B230000 /* Release */,
				204C390204C390204C390000 /* MinSizeRel */,
				204D4F0204D4F0204D4F0000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		2051B802051B802051B80000 /* Build configuration list for PBXAggregateTarget "iterator-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				20520D020520D020520D0000 /* Debug */,
				205332020533202053320000 /* Release */,
				205448020544802054480000 /* MinSizeRel */,
				20555E020555E020555E0000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		2058D402058D402058D40000 /* Build configuration list for PBXAggregateTarget "smart_ptr-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				205A1A0205A1A0205A1A0000 /* Debug */,
				205B3D0205B3D0205B3D0000 /* Release */,
				205C540205C540205C540000 /* MinSizeRel */,
				205D690205D690205D690000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		2061D302061D302061D30000 /* Build configuration list for PBXAggregateTarget "exception-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				206226020622602062260000 /* Debug */,
				20634F020634F020634F0000 /* Release */,
				206466020646602064660000 /* MinSizeRel */,
				20657B020657B020657B0000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		2068F202068F202068F20000 /* Build configuration list for PBXAggregateTarget "utility-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				20690C020690C020690C0000 /* Debug */,
				206B500206B500206B500000 /* Release */,
				206C6E0206C6E0206C6E0000 /* MinSizeRel */,
				206D820206D820206D820000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		2071ED02071ED02071ED0000 /* Build configuration list for PBXAggregateTarget "integer-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				207241020724102072410000 /* Debug */,
				207366020736602073660000 /* Release */,
				20747A020747A020747A0000 /* MinSizeRel */,
				20758E020758E020758E0000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		2079F702079F702079F70000 /* Build configuration list for PBXAggregateTarget "detail-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				207A480207A480207A480000 /* Debug */,
				207B6E0207B6E0207B6E0000 /* Release */,
				207C820207C820207C820000 /* MinSizeRel */,
				207D960207D960207D960000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		208203020820302082030000 /* Build configuration list for PBXAggregateTarget "static_assert-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				208257020825702082570000 /* Debug */,
				20837F020837F020837F0000 /* Release */,
				208496020849602084960000 /* MinSizeRel */,
				2085AB02085AB02085AB0000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		208A160208A160208A160000 /* Build configuration list for PBXAggregateTarget "tuple-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				208A660208A660208A660000 /* Debug */,
				208B8C0208B8C0208B8C0000 /* Release */,
				208CA20208CA20208CA20000 /* MinSizeRel */,
				208DB80208DB80208DB80000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		209221020922102092210000 /* Build configuration list for PBXAggregateTarget "function_types-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				209275020927502092750000 /* Debug */,
				20939D020939D020939D0000 /* Release */,
				2094B402094B402094B40000 /* MinSizeRel */,
				2095CB02095CB02095CB0000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		209A380209A380209A380000 /* Build configuration list for PBXAggregateTarget "fusion-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				209A890209A890209A890000 /* Debug */,
				209BA20209BA20209BA20000 /* Release */,
				209CB40209CB40209CB40000 /* MinSizeRel */,
				209DC60209DC60209DC60000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		20A239020A239020A2390000 /* Build configuration list for PBXAggregateTarget "typeof-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				20A28A020A28A020A28A0000 /* Debug */,
				20A3AF020A3AF020A3AF0000 /* Release */,
				20A4C4020A4C4020A4C40000 /* MinSizeRel */,
				20A5D9020A5D9020A5D90000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		20AA43020AA43020AA430000 /* Build configuration list for PBXAggregateTarget "proto-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				20AA93020AA93020AA930000 /* Debug */,
				20ABAC020ABAC020ABAC0000 /* Release */,
				20ACC0020ACC0020ACC00000 /* MinSizeRel */,
				20ADD4020ADD4020ADD40000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		20B245020B245020B2450000 /* Build configuration list for PBXAggregateTarget "intrusive-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				20B298020B298020B2980000 /* Debug */,
				20B3C0020B3C0020B3C00000 /* Release */,
				20B4D7020B4D7020B4D70000 /* MinSizeRel */,
				20B5EE020B5EE020B5EE0000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		20BA58020BA58020BA580000 /* Build configuration list for PBXAggregateTarget "logic-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				20BAA8020BAA8020BAA80000 /* Debug */,
				20BBCD020BBCD020BBCD0000 /* Release */,
				20BCDD020BCDD020BCDD0000 /* MinSizeRel */,
				20BDF6020BDF6020BDF60000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		20C25E020C25E020C25E0000 /* Build configuration list for PBXAggregateTarget "numeric-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				20C2B0020C2B0020C2B00000 /* Debug */,
				20C3C9020C3C9020C3C90000 /* Release */,
				20C4DB020C4DB020C4DB0000 /* MinSizeRel */,
				20C5ED020C5ED020C5ED0000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		20CA60020CA60020CA600000 /* Build configuration list for PBXAggregateTarget "xpressive-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				20CAB4020CAB4020CAB40000 /* Debug */,
				20CB94020CB94020CB940000 /* Release */,
				20CCA9020CCA9020CCA90000 /* MinSizeRel */,
				20CE23020CE23020CE230000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		20D26A020D26A020D26A0000 /* Build configuration list for PBXAggregateTarget "optional-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				20D2BF020D2BF020D2BF0000 /* Debug */,
				20D3E3020D3E3020D3E30000 /* Release */,
				20D4F8020D4F8020D4F80000 /* MinSizeRel */,
				20D60D020D60D020D60D0000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		20DA7A020DA7A020DA7A0000 /* Build configuration list for PBXAggregateTarget "tokenizer-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				20DACE020DACE020DACE0000 /* Debug */,
				20DBF6020DBF6020DBF60000 /* Release */,
				20DD0D020DD0D020DD0D0000 /* MinSizeRel */,
				20DE24020DE24020DE240000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		20E28D020E28D020E28D0000 /* Build configuration list for PBXAggregateTarget "io-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				20E2DF020E2DF020E2DF0000 /* Debug */,
				20E3FD020E3FD020E3FD0000 /* Release */,
				20E519020E519020E5190000 /* MinSizeRel */,
				20E62D020E62D020E62D0000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		20EAD9020EAD9020EAD90000 /* Build configuration list for PBXAggregateTarget "bind-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				20EAB5020EAB5020EAB50000 /* Debug */,
				20EC15020EC15020EC150000 /* Release */,
				20ED2A020ED2A020ED2A0000 /* MinSizeRel */,
				20EE3F020EE3F020EE3F0000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		20F2AA020F2AA020F2AA0000 /* Build configuration list for PBXAggregateTarget "date_time-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				20F2FD020F2FD020F2FD0000 /* Debug */,
				20F419020F419020F4190000 /* Release */,
				20F52C020F52C020F52C0000 /* MinSizeRel */,
				20F63F020F63F020F63F0000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		20FA96020FA96020FA960000 /* Build configuration list for PBXAggregateTarget "boost_date_time" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				20FB03020FB03020FB030000 /* Debug */,
				210012021001202100120000 /* Release */,
				210125021012502101250000 /* MinSizeRel */,
				210237021023702102370000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		2109E602109E602109E60000 /* Build configuration list for PBXNativeTarget "libboost_date_time-mt.a" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				210A210210A210210A210000 /* Debug */,
				210B970210B970210B970000 /* Release */,
				210D000210D000210D000000 /* MinSizeRel */,
				210E690210E690210E690000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		2115C002115C002115C00000 /* Build configuration list for PBXNativeTarget "libboost_date_time-mt-d.a" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				2115FB02115FB02115FB0000 /* Debug */,
				211772021177202117720000 /* Release */,
				2118DE02118DE02118DE0000 /* MinSizeRel */,
				211A4A0211A4A0211A4A0000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		211F200211F200211F200000 /* Build configuration list for PBXAggregateTarget "thread-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				211F740211F740211F740000 /* Debug */,
				21208D021208D021208D0000 /* Release */,
				21219F021219F021219F0000 /* MinSizeRel */,
				2122B102122B102122B10000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		21270D021270D021270D0000 /* Build configuration list for PBXAggregateTarget "boost_thread" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				212771021277102127710000 /* Debug */,
				21288A021288A021288A0000 /* Release */,
				21299E021299E021299E0000 /* MinSizeRel */,
				212AB00212AB00212AB00000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		213248021324802132480000 /* Build configuration list for PBXNativeTarget "libboost_thread-mt.a" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				213283021328302132830000 /* Debug */,
				2132BB02132BB02132BB0000 /* Release */,
				213569021356902135690000 /* MinSizeRel */,
				2136D302136D302136D30000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		213E220213E220213E220000 /* Build configuration list for PBXNativeTarget "libboost_thread-mt-d.a" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				213E5D0213E5D0213E5D0000 /* Debug */,
				213FD20213FD20213FD20000 /* Release */,
				21413B021413B021413B0000 /* MinSizeRel */,
				2142A602142A602142A60000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		214773021477302147730000 /* Build configuration list for PBXAggregateTarget "regex-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				2147C202147C202147C20000 /* Debug */,
				2148DB02148DB02148DB0000 /* Release */,
				2149EF02149EF02149EF0000 /* MinSizeRel */,
				214B010214B010214B010000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		214F5B0214F5B0214F5B0000 /* Build configuration list for PBXAggregateTarget "boost_regex" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				214FBE0214FBE0214FBE0000 /* Debug */,
				2150D802150D802150D80000 /* Release */,
				2151EC02151EC02151EC0000 /* MinSizeRel */,
				2152FF02152FF02152FF0000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		2164C902164C902164C90000 /* Build configuration list for PBXNativeTarget "libboost_regex-mt.a" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				216504021650402165040000 /* Debug */,
				216678021667802166780000 /* Release */,
				2167E402167E402167E40000 /* MinSizeRel */,
				216950021695002169500000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		2177DA02177DA02177DA0000 /* Build configuration list for PBXNativeTarget "libboost_regex-mt-d.a" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				217815021781502178150000 /* Debug */,
				21798F021798F021798F0000 /* Release */,
				217AFC0217AFC0217AFC0000 /* MinSizeRel */,
				217C670217C670217C670000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		218134021813402181340000 /* Build configuration list for PBXAggregateTarget "algorithm-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				218188021818802181880000 /* Debug */,
				2182A302182A302182A30000 /* Release */,
				2183B602183B602183B60000 /* MinSizeRel */,
				2184C902184C902184C90000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		21893A021893A021893A0000 /* Build configuration list for PBXAggregateTarget "range-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				21898D021898D021898D0000 /* Debug */,
				218AA60218AA60218AA60000 /* Release */,
				218BBA0218BBA0218BBA0000 /* MinSizeRel */,
				218CCC0218CCC0218CCC0000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		21913B021913B021913B0000 /* Build configuration list for PBXAggregateTarget "foreach-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				21918D021918D021918D0000 /* Debug */,
				2192A602192A602192A60000 /* Release */,
				2193B802193B802193B80000 /* MinSizeRel */,
				2194CA02194CA02194CA0000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		21993D021993D021993D0000 /* Build configuration list for PBXAggregateTarget "array-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				21998D021998D021998D0000 /* Debug */,
				219AB10219AB10219AB10000 /* Release */,
				219BC60219BC60219BC60000 /* MinSizeRel */,
				219CDB0219CDB0219CDB0000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		21A146021A146021A1460000 /* Build configuration list for PBXAggregateTarget "functional-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				21A19B021A19B021A19B0000 /* Debug */,
				21A2C2021A2C2021A2C20000 /* Release */,
				21A3D9021A3D9021A3D90000 /* MinSizeRel */,
				21A4F0021A4F0021A4F00000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		21A95B021A95B021A95B0000 /* Build configuration list for PBXAggregateTarget "unordered-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				21A9AE021A9AE021A9AE0000 /* Debug */,
				21AACA021AACA021AACA0000 /* Release */,
				21ABDE021ABDE021ABDE0000 /* MinSizeRel */,
				21ACF2021ACF2021ACF20000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		21B19A021B19A021B19A0000 /* Build configuration list for PBXAggregateTarget "pool-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				21B17F021B17F021B17F0000 /* Debug */,
				21B2DE021B2DE021B2DE0000 /* Release */,
				21B3F3021B3F3021B3F30000 /* MinSizeRel */,
				21B508021B508021B5080000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		21B970021B970021B9700000 /* Build configuration list for PBXAggregateTarget "spirit-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				21B9C4021B9C4021B9C40000 /* Debug */,
				21BADD021BADD021BADD0000 /* Release */,
				21BBEF021BBEF021BBEF0000 /* MinSizeRel */,
				21BD01021BD01021BD010000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		21C171021C171021C1710000 /* Build configuration list for PBXAggregateTarget "variant-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				21C1C6021C1C6021C1C60000 /* Debug */,
				21C2EA021C2EA021C2EA0000 /* Release */,
				21C3FF021C3FF021C3FF0000 /* MinSizeRel */,
				21C514021C514021C5140000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		21C988021C988021C9880000 /* Build configuration list for PBXAggregateTarget "serialization-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				21C9D9021C9D9021C9D90000 /* Debug */,
				21CAF5021CAF5021CAF50000 /* Release */,
				21CC08021CC08021CC080000 /* MinSizeRel */,
				21CD1B021CD1B021CD1B0000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		21D187021D187021D1870000 /* Build configuration list for PBXAggregateTarget "boost_serialization" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				21D1F3021D1F3021D1F30000 /* Debug */,
				21D302021D302021D3020000 /* Release */,
				21D41A021D41A021D41A0000 /* MinSizeRel */,
				21D532021D532021D5320000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		21ED06021ED06021ED060000 /* Build configuration list for PBXNativeTarget "libboost_serialization-mt.a" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				21ED41021ED41021ED410000 /* Debug */,
				21ED7A021ED7A021ED7A0000 /* Release */,
				21F025021F025021F0250000 /* MinSizeRel */,
				21F18F021F18F021F18F0000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		220846022084602208460000 /* Build configuration list for PBXNativeTarget "libboost_serialization-mt-d.a" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				220881022088102208810000 /* Debug */,
				2208BA02208BA02208BA0000 /* Release */,
				220B670220B670220B670000 /* MinSizeRel */,
				220CD10220CD10220CD10000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		22118C022118C022118C0000 /* Build configuration list for PBXAggregateTarget "boost_wserialization" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				2211DF02211DF02211DF0000 /* Debug */,
				221305022130502213050000 /* Release */,
				221418022141802214180000 /* MinSizeRel */,
				22152B022152B022152B0000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		222105022210502221050000 /* Build configuration list for PBXNativeTarget "libboost_wserialization-mt.a" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				222140022214002221400000 /* Debug */,
				2222B702222B702222B70000 /* Release */,
				222424022242402224240000 /* MinSizeRel */,
				22258E022258E022258E0000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		22300B022300B022300B0000 /* Build configuration list for PBXNativeTarget "libboost_wserialization-mt-d.a" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				223046022304602230460000 /* Debug */,
				22307F022307F022307F0000 /* Release */,
				22332C022332C022332C0000 /* MinSizeRel */,
				223496022349602234960000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		223961022396102239610000 /* Build configuration list for PBXAggregateTarget "format-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				2239B502239B502239B50000 /* Debug */,
				223ACE0223ACE0223ACE0000 /* Release */,
				223BE00223BE00223BE00000 /* MinSizeRel */,
				223CF70223CF70223CF70000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		224084022408402240840000 /* Build configuration list for PBXAggregateTarget "math-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				224186022418602241860000 /* Debug */,
				2242E002242E002242E00000 /* Release */,
				2243F102243F102243F10000 /* MinSizeRel */,
				224508022450802245080000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		224986022498602249860000 /* Build configuration list for PBXAggregateTarget "multi_index-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				2249D902249D902249D90000 /* Debug */,
				224AF50224AF50224AF50000 /* Release */,
				224C0A0224C0A0224C0A0000 /* MinSizeRel */,
				224D230224D230224D230000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		2251F402251F402251F40000 /* Build configuration list for PBXAggregateTarget "any-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				2251C802251C802251C80000 /* Debug */,
				225313022531302253130000 /* Release */,
				225428022542802254280000 /* MinSizeRel */,
				225537022553702255370000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		2259B402259B402259B40000 /* Build configuration list for PBXAggregateTarget "random-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				225A080225A080225A080000 /* Debug */,
				225B2D0225B2D0225B2D0000 /* Release */,
				225C420225C420225C420000 /* MinSizeRel */,
				225D570225D570225D570000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		2261C302261C302261C30000 /* Build configuration list for PBXAggregateTarget "graph-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				226215022621502262150000 /* Debug */,
				2262B402262B402262B40000 /* Release */,
				22643B022643B022643B0000 /* MinSizeRel */,
				2264E302264E302264E30000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		2269E202269E202269E20000 /* Build configuration list for PBXAggregateTarget "boost_graph" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				226A150226A150226A150000 /* Debug */,
				226AB40226AB40226AB40000 /* Release */,
				226C3D0226C3D0226C3D0000 /* MinSizeRel */,
				226CE80226CE80226CE80000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		227383022738302273830000 /* Build configuration list for PBXNativeTarget "libboost_graph-mt.a" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				2273BE02273BE02273BE0000 /* Debug */,
				2274BE02274BE02274BE0000 /* Release */,
				22762D022762D022762D0000 /* MinSizeRel */,
				22779C022779C022779C0000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		227E630227E630227E630000 /* Build configuration list for PBXNativeTarget "libboost_graph-mt-d.a" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				227E9E0227E9E0227E9E0000 /* Debug */,
				227F9C0227F9C0227F9C0000 /* Release */,
				22810F022810F022810F0000 /* MinSizeRel */,
				228279022827902282790000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		2287CC02287CC02287CC0000 /* Build configuration list for PBXAggregateTarget "Python-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				228820022882002288200000 /* Debug */,
				2288AF02288AF02288AF0000 /* Release */,
				228A500228A500228A500000 /* MinSizeRel */,
				228AD70228AD70228AD70000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		228FCA0228FCA0228FCA0000 /* Build configuration list for PBXAggregateTarget "boost_python" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				22902D022902D022902D0000 /* Debug */,
				2290BC02290BC02290BC0000 /* Release */,
				229260022926002292600000 /* MinSizeRel */,
				229378022937802293780000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		22ADB1022ADB1022ADB10000 /* Build configuration list for PBXNativeTarget "libboost_python-mt.a" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				22ADEC022ADEC022ADEC0000 /* Debug */,
				22AE24022AE24022AE240000 /* Release */,
				22B06A022B06A022B06A0000 /* MinSizeRel */,
				22B1F6022B1F6022B1F60000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		22C6BB022C6BB022C6BB0000 /* Build configuration list for PBXNativeTarget "libboost_python-mt-d.a" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				22C6F6022C6F6022C6F60000 /* Debug */,
				22C7E0022C7E0022C7E00000 /* Release */,
				22C96D022C96D022C96D0000 /* MinSizeRel */,
				22CAF9022CAF9022CAF90000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		22D000022D000022D0000000 /* Build configuration list for PBXAggregateTarget "parameter-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				22D053022D053022D0530000 /* Debug */,
				22D0E4022D0E4022D0E40000 /* Release */,
				22D283022D283022D2830000 /* MinSizeRel */,
				22D30B022D30B022D30B0000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		22D809022D809022D8090000 /* Build configuration list for PBXAggregateTarget "accumulators-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				22D85C022D85C022D85C0000 /* Debug */,
				22D977022D977022D9770000 /* Release */,
				22DA8A022DA8A022DA8A0000 /* MinSizeRel */,
				22DB9D022DB9D022DB9D0000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		22E1F5022E1F5022E1F50000 /* Build configuration list for PBXNativeTarget "accumulators-accumulators_example" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				22E230022E230022E2300000 /* Debug */,
				22E39E022E39E022E39E0000 /* Release */,
				22E4F9022E4F9022E4F90000 /* MinSizeRel */,
				22E657022E657022E6570000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		22EB11022EB11022EB110000 /* Build configuration list for PBXAggregateTarget "system-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				22EB62022EB62022EB620000 /* Debug */,
				22EC87022EC87022EC870000 /* Release */,
				22ED9C022ED9C022ED9C0000 /* MinSizeRel */,
				22EEB1022EEB1022EEB10000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		22F308022F308022F3080000 /* Build configuration list for PBXAggregateTarget "boost_system" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				22F36C022F36C022F36C0000 /* Debug */,
				22F491022F491022F4910000 /* Release */,
				22F5A6022F5A6022F5A60000 /* MinSizeRel */,
				22F6BB022F6BB022F6BB0000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		2300CC02300CC02300CC0000 /* Build configuration list for PBXNativeTarget "libboost_system-mt.a" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				230107023010702301070000 /* Debug */,
				23028B023028B023028B0000 /* Release */,
				2303F602303F602303F60000 /* MinSizeRel */,
				230564023056402305640000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		230BA20230BA20230BA20000 /* Build configuration list for PBXNativeTarget "libboost_system-mt-d.a" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				230BDD0230BDD0230BDD0000 /* Debug */,
				230D5E0230D5E0230D5E0000 /* Release */,
				230EC90230EC90230EC90000 /* MinSizeRel */,
				231037023103702310370000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		23153A023153A023153A0000 /* Build configuration list for PBXAggregateTarget "asio-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				231516023151602315160000 /* Debug */,
				23166A023166A023166A0000 /* Release */,
				23177C023177C023177C0000 /* MinSizeRel */,
				23188E023188E023188E0000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		231D020231D020231D020000 /* Build configuration list for PBXAggregateTarget "circular_buffer-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				231D530231D530231D530000 /* Debug */,
				231E6F0231E6F0231E6F0000 /* Release */,
				231F820231F820231F820000 /* MinSizeRel */,
				23209A023209A023209A0000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		23251A023251A023251A0000 /* Build configuration list for PBXAggregateTarget "ptr_container-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				23256F023256F023256F0000 /* Debug */,
				23268B023268B023268B0000 /* Release */,
				2327A202327A202327A20000 /* MinSizeRel */,
				2328BB02328BB02328BB0000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		232D3A0232D3A0232D3A0000 /* Build configuration list for PBXAggregateTarget "assign-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				232D8A0232D8A0232D8A0000 /* Debug */,
				232EA40232EA40232EA40000 /* Release */,
				232FBC0232FBC0232FBC0000 /* MinSizeRel */,
				2330D402330D402330D40000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		23354D023354D023354D0000 /* Build configuration list for PBXAggregateTarget "bimap-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				2335A002335A002335A00000 /* Debug */,
				23366D023366D023366D0000 /* Release */,
				2337FD02337FD02337FD0000 /* MinSizeRel */,
				233914023391402339140000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		233D610233D610233D610000 /* Build configuration list for PBXAggregateTarget "compatibility-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				233DB40233DB40233DB40000 /* Debug */,
				233EDC0233EDC0233EDC0000 /* Release */,
				233F610233F610233F610000 /* MinSizeRel */,
				234123023412302341230000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		2345B602345B602345B60000 /* Build configuration list for PBXAggregateTarget "crc-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				234608023460802346080000 /* Debug */,
				234728023472802347280000 /* Release */,
				23483C023483C023483C0000 /* MinSizeRel */,
				234959023495902349590000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		234DC80234DC80234DC80000 /* Build configuration list for PBXAggregateTarget "timer-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				234E180234E180234E180000 /* Debug */,
				234EAD0234EAD0234EAD0000 /* Release */,
				234FCB0234FCB0234FCB0000 /* MinSizeRel */,
				2350FD02350FD02350FD0000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		23565E023565E023565E0000 /* Build configuration list for PBXAggregateTarget "test-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				235643023564302356430000 /* Debug */,
				23574A023574A023574A0000 /* Release */,
				2358DC02358DC02358DC0000 /* MinSizeRel */,
				23597D023597D023597D0000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		235E400235E400235E400000 /* Build configuration list for PBXAggregateTarget "boost_prg_exec_monitor" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				235E7C0235E7C0235E7C0000 /* Debug */,
				235F600235F600235F600000 /* Release */,
				236029023602902360290000 /* MinSizeRel */,
				23619A023619A023619A0000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		236973023697302369730000 /* Build configuration list for PBXNativeTarget "libboost_prg_exec_monitor-mt.a" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				2369AE02369AE02369AE0000 /* Debug */,
				236ADC0236ADC0236ADC0000 /* Release */,
				236C490236C490236C490000 /* MinSizeRel */,
				236DB80236DB80236DB80000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		23755C023755C023755C0000 /* Build configuration list for PBXNativeTarget "libboost_prg_exec_monitor-mt-d.a" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				237598023759802375980000 /* Debug */,
				2376C402376C402376C40000 /* Release */,
				23782E023782E023782E0000 /* MinSizeRel */,
				23799E023799E023799E0000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		237F000237F000237F000000 /* Build configuration list for PBXAggregateTarget "boost_test_exec_monitor" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				237ED70237ED70237ED70000 /* Debug */,
				237FE70237FE70237FE70000 /* Release */,
				2380B202380B202380B20000 /* MinSizeRel */,
				238221023822102382210000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		2393A302393A302393A30000 /* Build configuration list for PBXNativeTarget "libboost_test_exec_monitor-mt.a" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				2393DE02393DE02393DE0000 /* Debug */,
				23950C023950C023950C0000 /* Release */,
				239674023967402396740000 /* MinSizeRel */,
				2397DE02397DE02397DE0000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		23A6CB023A6CB023A6CB0000 /* Build configuration list for PBXNativeTarget "libboost_test_exec_monitor-mt-d.a" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				23A707023A707023A7070000 /* Debug */,
				23A834023A834023A8340000 /* Release */,
				23A99C023A99C023A99C0000 /* MinSizeRel */,
				23AB06023AB06023AB060000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		23B05A023B05A023B05A0000 /* Build configuration list for PBXAggregateTarget "boost_unit_test_framework" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				23B031023B031023B0310000 /* Debug */,
				23B13E023B13E023B13E0000 /* Release */,
				23B205023B205023B2050000 /* MinSizeRel */,
				23B31A023B31A023B31A0000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		23C388023C388023C3880000 /* Build configuration list for PBXNativeTarget "libboost_unit_test_framework-mt.a" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				23C3C3023C3C3023C3C30000 /* Debug */,
				23C4F1023C4F1023C4F10000 /* Release */,
				23C659023C659023C6590000 /* MinSizeRel */,
				23C7C3023C7C3023C7C30000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		23D7B7023D7B7023D7B70000 /* Build configuration list for PBXNativeTarget "libboost_unit_test_framework-mt-d.a" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				23D7F3023D7F3023D7F30000 /* Debug */,
				23D91F023D91F023D91F0000 /* Release */,
				23DA8A023DA8A023DA8A0000 /* MinSizeRel */,
				23DBF2023DBF2023DBF20000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		23E10D023E10D023E10D0000 /* Build configuration list for PBXAggregateTarget "dynamic_bitset-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				23E15E023E15E023E15E0000 /* Debug */,
				23E285023E285023E2850000 /* Release */,
				23E39C023E39C023E39C0000 /* MinSizeRel */,
				23E4B3023E4B3023E4B30000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		23E921023E921023E9210000 /* Build configuration list for PBXAggregateTarget "filesystem-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				23E976023E976023E9760000 /* Debug */,
				23EA91023EA91023EA910000 /* Release */,
				23EBAA023EBAA023EBAA0000 /* MinSizeRel */,
				23ECC3023ECC3023ECC30000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		23F141023F141023F1410000 /* Build configuration list for PBXAggregateTarget "boost_filesystem" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				23F17B023F17B023F17B0000 /* Debug */,
				23F2AA023F2AA023F2AA0000 /* Release */,
				23F3C1023F3C1023F3C10000 /* MinSizeRel */,
				23F4D9023F4D9023F4D90000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		240136024013602401360000 /* Build configuration list for PBXNativeTarget "libboost_filesystem-mt.a" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				240171024017102401710000 /* Debug */,
				2402E402402E402402E40000 /* Release */,
				240451024045102404510000 /* MinSizeRel */,
				2405C502405C502405C50000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		240DA40240DA40240DA40000 /* Build configuration list for PBXNativeTarget "libboost_filesystem-mt-d.a" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				240DDF0240DDF0240DDF0000 /* Debug */,
				240F580240F580240F580000 /* Release */,
				2410C902410C902410C90000 /* MinSizeRel */,
				241237024123702412370000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		241707024170702417070000 /* Build configuration list for PBXAggregateTarget "interprocess-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				24175A024175A024175A0000 /* Debug */,
				241875024187502418750000 /* Release */,
				24198C024198C024198C0000 /* MinSizeRel */,
				241AA50241AA50241AA50000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		241F250241F250241F250000 /* Build configuration list for PBXAggregateTarget "flyweight-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				241F7A0241F7A0241F7A0000 /* Debug */,
				242096024209602420960000 /* Release */,
				2421AD02421AD02421AD0000 /* MinSizeRel */,
				2422C502422C502422C50000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		24273C024273C024273C0000 /* Build configuration list for PBXAggregateTarget "gil-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				24278E024278E024278E0000 /* Debug */,
				2428A802428A802428A80000 /* Release */,
				2429C102429C102429C10000 /* MinSizeRel */,
				242AD90242AD90242AD90000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		242F550242F550242F550000 /* Build configuration list for PBXAggregateTarget "mpi-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				242FA80242FA80242FA80000 /* Debug */,
				24303E024303E024303E0000 /* Release */,
				2431D302431D302431D30000 /* MinSizeRel */,
				243269024326902432690000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		243761024376102437610000 /* Build configuration list for PBXAggregateTarget "boost_mpi" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				2437A302437A302437A30000 /* Debug */,
				243848024384802438480000 /* Release */,
				2439E102439E102439E10000 /* MinSizeRel */,
				243A7A0243A7A0243A7A0000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		244D9C0244D9C0244D9C0000 /* Build configuration list for PBXNativeTarget "libboost_mpi-mt.a" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				244DD60244DD60244DD60000 /* Debug */,
				244ECB0244ECB0244ECB0000 /* Release */,
				2451A202451A202451A20000 /* MinSizeRel */,
				245312024531202453120000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		24614D024614D024614D0000 /* Build configuration list for PBXNativeTarget "libboost_mpi-mt-d.a" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				246188024618802461880000 /* Debug */,
				24627D024627D024627D0000 /* Release */,
				246554024655402465540000 /* MinSizeRel */,
				2466C402466C402466C40000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		246A9E0246A9E0246A9E0000 /* Build configuration list for PBXAggregateTarget "boost_graph_parallel" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				246AF10246AF10246AF10000 /* Debug */,
				246B930246B930246B930000 /* Release */,
				246D2C0246D2C0246D2C0000 /* MinSizeRel */,
				246DBB0246DBB0246DBB0000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		247523024752302475230000 /* Build configuration list for PBXNativeTarget "libboost_graph_parallel-mt.a" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				24755E024755E024755E0000 /* Debug */,
				247652024765202476520000 /* Release */,
				247927024792702479270000 /* MinSizeRel */,
				247A910247A910247A910000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		24807A024807A024807A0000 /* Build configuration list for PBXNativeTarget "libboost_graph_parallel-mt-d.a" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				2480B502480B502480B50000 /* Debug */,
				2481AA02481AA02481AA0000 /* Release */,
				2481DA02481DA02481DA0000 /* MinSizeRel */,
				2485F802485F802485F80000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		2489E802489E802489E80000 /* Build configuration list for PBXAggregateTarget "iostreams-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				248A3A0248A3A0248A3A0000 /* Debug */,
				248B560248B560248B560000 /* Release */,
				248C6F0248C6F0248C6F0000 /* MinSizeRel */,
				248D880248D880248D880000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		24920A024920A024920A0000 /* Build configuration list for PBXAggregateTarget "boost_iostreams" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				24923F024923F024923F0000 /* Debug */,
				24936F024936F024936F0000 /* Release */,
				249486024948602494860000 /* MinSizeRel */,
				24959E024959E024959E0000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		249DFC0249DFC0249DFC0000 /* Build configuration list for PBXNativeTarget "libboost_iostreams-mt.a" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				249E370249E370249E370000 /* Debug */,
				249FAF0249FAF0249FAF0000 /* Release */,
				24A119024A119024A1190000 /* MinSizeRel */,
				24A285024A285024A2850000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		24AA4B024AA4B024AA4B0000 /* Build configuration list for PBXNativeTarget "libboost_iostreams-mt-d.a" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				24AA86024AA86024AA860000 /* Debug */,
				24ABFF024ABFF024ABFF0000 /* Release */,
				24AD6E024AD6E024AD6E0000 /* MinSizeRel */,
				24AEDC024AEDC024AEDC0000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		24B3B6024B3B6024B3B60000 /* Build configuration list for PBXAggregateTarget "lambda-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				24B407024B407024B4070000 /* Debug */,
				24B52C024B52C024B52C0000 /* Release */,
				24B641024B641024B6410000 /* MinSizeRel */,
				24B756024B756024B7560000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		24BBCB024BBCB024BBCB0000 /* Build configuration list for PBXAggregateTarget "multi_array-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				24BC1D024BC1D024BC1D0000 /* Debug */,
				24BD44024BD44024BD440000 /* Release */,
				24BE5C024BE5C024BE5C0000 /* MinSizeRel */,
				24BF74024BF74024BF740000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		24C3EB024C3EB024C3EB0000 /* Build configuration list for PBXAggregateTarget "program_options-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				24C43C024C43C024C43C0000 /* Debug */,
				24C4F8024C4F8024C4F80000 /* Release */,
				24C649024C649024C6490000 /* MinSizeRel */,
				24C779024C779024C7790000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		24CC06024CC06024CC060000 /* Build configuration list for PBXAggregateTarget "boost_program_options" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				24CC51024CC51024CC510000 /* Debug */,
				24CD15024CD15024CD150000 /* Release */,
				24CEB8024CEB8024CEB80000 /* MinSizeRel */,
				24CF79024CF79024CF790000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		24DC6E024DC6E024DC6E0000 /* Build configuration list for PBXNativeTarget "libboost_program_options-mt.a" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				24DCA9024DCA9024DCA90000 /* Debug */,
				24DDC0024DDC0024DDC00000 /* Release */,
				24DF2C024DF2C024DF2C0000 /* MinSizeRel */,
				24E095024E095024E0950000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		24EBF3024EBF3024EBF30000 /* Build configuration list for PBXNativeTarget "libboost_program_options-mt-d.a" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				24EC2F024EC2F024EC2F0000 /* Debug */,
				24EC68024EC68024EC680000 /* Release */,
				24EEB4024EEB4024EEB40000 /* MinSizeRel */,
				24F01D024F01D024F01D0000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		24F54A024F54A024F54A0000 /* Build configuration list for PBXAggregateTarget "rational-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				24F59C024F59C024F59C0000 /* Debug */,
				24F6BE024F6BE024F6BE0000 /* Release */,
				24F7D2024F7D2024F7D20000 /* MinSizeRel */,
				24F8ED024F8ED024F8ED0000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		250155025015502501550000 /* Build configuration list for PBXAggregateTarget "signals-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				2501AA02501AA02501AA0000 /* Debug */,
				2502C402502C402502C40000 /* Release */,
				2503D902503D902503D90000 /* MinSizeRel */,
				2504F002504F002504F00000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		250958025095802509580000 /* Build configuration list for PBXAggregateTarget "boost_signals" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				2509B502509B502509B50000 /* Debug */,
				250AD70250AD70250AD70000 /* Release */,
				250BEF0250BEF0250BEF0000 /* MinSizeRel */,
				250D0A0250D0A0250D0A0000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		251618025161802516180000 /* Build configuration list for PBXNativeTarget "libboost_signals-mt.a" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				251653025165302516530000 /* Debug */,
				2517CF02517CF02517CF0000 /* Release */,
				2517E402517E402517E40000 /* MinSizeRel */,
				251951025195102519510000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		2522FE02522FE02522FE0000 /* Build configuration list for PBXNativeTarget "libboost_signals-mt-d.a" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				252339025233902523390000 /* Debug */,
				252363025236302523630000 /* Release */,
				2524CA02524CA02524CA0000 /* MinSizeRel */,
				252637025263702526370000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		252C600252C600252C600000 /* Build configuration list for PBXAggregateTarget "signals2-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				252CB50252CB50252CB50000 /* Debug */,
				252DCE0252DCE0252DCE0000 /* Release */,
				252EE20252EE20252EE20000 /* MinSizeRel */,
				252FF40252FF40252FF40000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		253463025346302534630000 /* Build configuration list for PBXAggregateTarget "statechart-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				2534B502534B502534B50000 /* Debug */,
				25358D025358D025358D0000 /* Release */,
				2536A602536A602536A60000 /* MinSizeRel */,
				2537BE02537BE02537BE0000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		253C7F0253C7F0253C7F0000 /* Build configuration list for PBXAggregateTarget "tr1-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				253CC90253CC90253CC90000 /* Debug */,
				253DA60253DA60253DA60000 /* Release */,
				253EBE0253EBE0253EBE0000 /* MinSizeRel */,
				253FD60253FD60253FD60000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		25448F025448F025448F0000 /* Build configuration list for PBXAggregateTarget "units-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				2544DF02544DF02544DF0000 /* Debug */,
				254599025459902545990000 /* Release */,
				2546EA02546EA02546EA0000 /* MinSizeRel */,
				2547CB02547CB02547CB0000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		254CDA0254CDA0254CDA0000 /* Build configuration list for PBXAggregateTarget "wave-modularize" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				254CB60254CB60254CB60000 /* Debug */,
				254E0A0254E0A0254E0A0000 /* Release */,
				254F220254F220254F220000 /* MinSizeRel */,
				25503A025503A025503A0000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		2554B002554B002554B00000 /* Build configuration list for PBXAggregateTarget "boost_wave" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				2554F302554F302554F30000 /* Debug */,
				25561D025561D025561D0000 /* Release */,
				255735025573502557350000 /* MinSizeRel */,
				25584D025584D025584D0000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		2565D202565D202565D20000 /* Build configuration list for PBXNativeTarget "libboost_wave-mt.a" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				25660C025660C025660C0000 /* Debug */,
				25677F025677F025677F0000 /* Release */,
				2568EC02568EC02568EC0000 /* MinSizeRel */,
				256A570256A570256A570000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		2575CF02575CF02575CF0000 /* Build configuration list for PBXNativeTarget "libboost_wave-mt-d.a" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				25760A025760A025760A0000 /* Debug */,
				25763F025763F025763F0000 /* Release */,
				2578ED02578ED02578ED0000 /* MinSizeRel */,
				257A570257A570257A570000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		25882C025882C025882C0000 /* Build configuration list for PBXNativeTarget "bcp" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				258861025886102588610000 /* Debug */,
				25895C025895C025895C0000 /* Release */,
				258AB60258AB60258AB60000 /* MinSizeRel */,
				258C110258C110258C110000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		259A3F0259A3F0259A3F0000 /* Build configuration list for PBXNativeTarget "inspect" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				259A750259A750259A750000 /* Debug */,
				259AA80259AA80259AA80000 /* Release */,
				259C140259C140259C140000 /* MinSizeRel */,
				259EC80259EC80259EC80000 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
/* End XCConfigurationList section */
	};
	rootObject = 1FF26C01FF26C01FF26C0000 /* Project object */;
}
